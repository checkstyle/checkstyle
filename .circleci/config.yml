version: 2.1

commands:
  run-maven-script:
    parameters:
      script-name:
        description: "name of script"
        type: string
        default: ""
      args:
        description: "arguments to script"
        type: string
        default: ""
    steps:
      - checkout
      - restore_cache:
          name: Restore Maven repo cache
          keys:
            - mvn-cache-{{ checksum "pom.xml" }}
      - run:
          command: << parameters.script-name >> << parameters.args >>
      - run:
          command: ./.ci/validation.sh git-diff
      - save_cache:
          name: Save Maven repo cache
          key: mvn-cache-{{ checksum "pom.xml" }}
          paths:
            - .m2

jobs:

  run-inspections:
    docker:
      - image: checkstyle/idea-docker:jdk11-idea2022.2.2

    steps:
      - checkout
      - run:
          name: Print versions
          command: |
            echo "Maven version:"
            mvn --version
            echo "Java version:"
            java --version
            echo "IDEA version:"
            echo $IDEA_VERSION
      - run:
          name: Run inspections
          command: |
            mkdir .idea
            cp config/intellij-idea-inspections-misc.xml .idea/misc.xml
            ./.ci/idea_inspection.sh
          no_output_timeout: 25m
          working_directory: ~/project
      - store_artifacts:
          path: /home/circleci/project/target/inspection-results

  validate-with-maven-script:
    parameters: &script_parameters
      image-name:
        type: string
        default: "cimg/openjdk:11.0.16"
        description: "docker image to use"
      script-name:
        description: "name of script"
        type: string
        default: ""
      args:
        type: string
        default: ""
        description: "argument to provide to validation.sh"
    docker:
      - image: << parameters.image-name >>
    steps:
      - run-maven-script:
          script-name: << parameters.script-name >>
          args: << parameters.args >>

  validate-with-script:
    parameters: *script_parameters
    docker:
      - image: << parameters.image-name >>
    steps:
      - checkout
      - run:
          name: run << parameters.script-name >>
          command: |
            export PULL_REQUEST=$CIRCLE_PR_NUMBER
            export PR_HEAD_SHA=$CIRCLE_SHA1
            export PR_NUMBER=$CIRCLE_PR_NUMBER
            << parameters.script-name >> << parameters.args >>

workflows:
  test:
    jobs:
      - validate-with-maven-script:
          name: "no-error-hibernate-search"
          image-name: "cimg/openjdk:18.0.1"
          script-name: "./.ci/validation.sh"
          args: "no-error-hibernate-search"
      - validate-with-maven-script:
          matrix:
            parameters:
              script-name: [ "./.ci/no-exception-test.sh" ]
              args: [
                "no-exception-lucene-and-others-javadoc",
                "no-exception-cassandra-storm-tapestry-javadoc",
                "no-exception-hadoop-apache-groovy-scouter-javadoc",
                "no-exception-only-javadoc",
              ]
      - validate-with-maven-script:
          matrix:
            parameters:
              script-name: [ "./.ci/validation.sh" ]
              args: [
                "no-error-xwiki",
                "no-error-pmd",
                "no-exception-struts",
                "no-exception-checkstyle-sevntu",
                "no-exception-checkstyle-sevntu-javadoc",
                "no-exception-guava",
                "no-exception-hibernate-orm",
                "no-exception-spotbugs",
                "no-exception-spoon",
                "no-exception-spring-framework",
                "no-exception-hbase",
                "no-exception-Pmd-elasticsearch-lombok-ast",
                "no-exception-alot-of-projects",
                "no-warning-imports-guava",
                "no-warning-imports-java-design-patterns",
                "sonarqube",
                "checkstyle-and-sevntu",
                "spotbugs-and-pmd",
                "site",
                "release-dry-run",
                "assembly-run-all-jar",
                "no-error-test-sbe",
              ]

  idea:
    jobs:
      - run-inspections

  git-validation:
    jobs:
      - validate-with-script:
          name: "git-no-merge-commits"
          script-name: "./.ci/validation.sh"
          args: "git-no-merge-commits"
      - validate-with-script:
          name: "git-check-pull-number"
          script-name: "./.ci/validation.sh"
          args: "git-check-pull-number"

  cli-validation:
    jobs:
      - validate-with-script:
          name: "checkchmod"
          script-name: "./.ci/checkchmod.sh"
      - validate-with-script:
          name: "releasenotes-gen"
          script-name: "./.ci/releasenotes-gen.sh"

  javac-validation:
    jobs:
      - validate-with-script:
          name: "check-since-version"
          script-name: "./.ci/validation.sh"
          args: "check-since-version"
      - validate-with-script:
          name: "javac11"
          script-name: "./.ci/validation.sh"
          args: "javac11"
      - validate-with-script:
          name: "javac14"
          image-name: "cimg/openjdk:14.0.2"
          script-name: "./.ci/validation.sh"
          args: "javac14"
      - validate-with-script:
          name: "javac15"
          script-name: "./.ci/validation.sh"
          image-name: "cimg/openjdk:15.0.2"
          args: "javac15"
      - validate-with-script:
          name: "javac16"
          image-name: "cimg/openjdk:16.0.2"

          script-name: "./.ci/validation.sh"
          args: "javac16"
      - validate-with-script:
          name: "javac17"
          image-name: "cimg/openjdk:17.0.5"
          script-name: "./.ci/validation.sh"
          args: "javac17"

  site-validation:
    jobs:
      - validate-with-maven-script:
          name: "jdk14 assembly site"
          image-name: "cimg/openjdk:14.0.2"
          script-name: "./.ci/validation.sh"
          args: "jdk14-assembly-site"
      - validate-with-maven-script:
          name: "jdk11 assembly site"
          script-name: "./.ci/validation.sh"
          args: "assembly-site"
