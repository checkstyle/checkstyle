version: 2
jobs:

  setup-env:
    machine:
      image: ubuntu-1604:202004-01
    steps:
      - restore_cache:
          key: m2-cache
      - checkout
      - run:
          name: run_job creation
          command: |
            mkdir -p .ci-temp
            SKIP_FILES1=".github|appveyor.yml|.travis.yml|\.ci/"
            SKIP_FILES2="|fast-forward-merge.sh"
            SKIP_FILES3="|LICENSE|LICENSE.apache20|README.md|release.sh"
            SKIP_FILES4="|RIGHTS.antlr|codeship"
            SKIP_FILES5="|wercker.yml|wercker.sh"
            SKIP_FILES6="|intellij-idea-inspections.xml"
            SKIP_FILES7="|org.eclipse.jdt.core.prefs"
            FULL_SKIP1=$SKIP_FILES1$SKIP_FILES2$SKIP_FILES3$SKIP_FILES4
            FULL_SKIP2=$SKIP_FILES5$SKIP_FILES6$SKIP_FILES7
            SKIP_FILES=$FULL_SKIP1$FULL_SKIP2
            export RUN_JOB=1
            # source ./.ci/common.sh
            # should_run_job will change RUN_JOB variable
            # should_run_job "recheck" $SKIP_FILES
            echo $RUN_JOB > .ci-temp/run_job
      - run:
          name: download all maven dependencies and groovy
          command: |
            RUN_JOB=`cat .ci-temp/run_job`
            echo "RUN_JOB="$RUN_JOB
            if [[ $RUN_JOB == 1 ]]; then
              pwd
              ls -la
              java -version
              mvn --version
              mvn -e clean install -Pno-validations
            else
              echo "build is skipped ..."
            fi
      - run:
          name: download all maven dependencies and groovy (second try)
          command: |
            RUN_JOB=`cat .ci-temp/run_job`
            echo "RUN_JOB="$RUN_JOB
            if [[ $RUN_JOB == 1 ]]; then
              pwd
              ls -la
              java -version
              mvn --version
              mvn -e clean install -Pno-validations
            else
              echo "build is skipped ..."
            fi
          when: on_fail
      - persist_to_workspace:
          root: /home/circleci/
          paths:
            - .m2
            - project
            - contribution

  lucene-and-others-javadoc:
    machine:    
      image: ubuntu-1604:202004-01
    parallelism: 1
    steps:
      - attach_workspace:
          at: /home/circleci/
      - run:
          command: |
            sudo ./.ci/install_groovy.sh
            ./.ci/no-exception-test.sh no-exception-lucene-and-others-javadoc

  cassandra-storm-tapestry-javadoc:
    machine:
      image: ubuntu-1604:202004-01
    parallelism: 1
    steps:
      - attach_workspace:
          at: /home/circleci/
      - run:
          command: |
            sudo ./.ci/install_groovy.sh
            ./.ci/no-exception-test.sh no-exception-cassandra-storm-tapestry-javadoc

  hadoop-apache-groovy-scouter-javadoc:
    machine:
      image: ubuntu-1604:202004-01
    parallelism: 1
    steps:
      - attach_workspace:
          at: /home/circleci/
      - run:
          command: |
            sudo ./.ci/install_groovy.sh
            ./.ci/no-exception-test.sh no-exception-hadoop-apache-groovy-scouter-javadoc

  no-exception-only-javadoc:
    machine:
      image: ubuntu-1604:202004-01
    parallelism: 1
    steps:
      - attach_workspace:
          at: /home/circleci/
      - run:
          command: |
            sudo ./.ci/install_groovy.sh
            ./.ci/no-exception-test.sh no-exception-only-javadoc

  no-error-xwiki:
    machine:
      image: ubuntu-1604:202004-01
    parallelism: 1
    steps:
      - attach_workspace:
          at: /home/circleci/
      - run:
          command: |
            sudo ./.ci/install_groovy.sh
            ./.ci/validation.sh no-error-xwiki

workflows:
  version: 2
  Tests:
    jobs:
      - setup-env
      - lucene-and-others-javadoc:
          requires:
            - setup-env
      - cassandra-storm-tapestry-javadoc:
          requires:
            - setup-env
      - hadoop-apache-groovy-scouter-javadoc:
          requires:
            - setup-env
      - no-exception-only-javadoc:
          requires:
            - setup-env
      - no-error-xwiki:
          requires:
            - setup-env
