box: maven:3.3.9-jdk-8
build:
  steps:
  - script:
      name: setup mvn local repo
      code: |-
        export MAVEN_OPTS="-Dmaven.repo.local=${WERCKER_CACHE_DIR}"
        mvn -version

  # unit tests (oraclejdk8)
  - script:
      name: tests
      code: |-
        mvn clean integration-test failsafe:verify

  # unit tests in German locale (oraclejdk8)
  - script:
      name: tests de
      code: >
        mvn clean integration-test failsafe:verify -DargLine='-Duser.language=de
        -Duser.country=DE -XX:-UseSplitVerifier'

  # unit tests in Spanish locale (oraclejdk8)
  - script:
      name: tests es
      code: >
        mvn clean integration-test failsafe:verify -DargLine='-Duser.language=es
        -Duser.country=ES -XX:-UseSplitVerifier'

  # unit tests in Finnish locale (oraclejdk8)
  - script:
      name: tests fi
      code: >
        mvn clean integration-test failsafe:verify -DargLine='-Duser.language=fi
        -Duser.country=FI -XX:-UseSplitVerifier'

  # unit tests in French locale (oraclejdk8)
  - script:
      name: tests fr
      code: >
        mvn clean integration-test failsafe:verify -DargLine='-Duser.language=fr
        -Duser.country=FR -XX:-UseSplitVerifier'

  # unit tests in Chinese locale (oraclejdk8)
  - script:
      name: tests zh
      code: >
        mvn clean integration-test failsafe:verify -DargLine='-Duser.language=zh
        -Duser.country=CN -XX:-UseSplitVerifier'

  # unit tests in Japanese locale (oraclejdk8)
  - script:
      name: tests ja
      code: >
        mvn clean integration-test failsafe:verify -DargLine='-Duser.language=ja
        -Duser.country=JP -XX:-UseSplitVerifier'

  # unit tests in Portuguese locale (oraclejdk8)
  - script:
      name: tests pt
      code: >
        mvn clean integration-test failsafe:verify -DargLine='-Duser.language=pt
        -Duser.country=PT -XX:-UseSplitVerifier'

  # unit tests in Turkish locale (oraclejdk8)
  - script:
      name: tests tr
      code: >
        mvn clean integration-test failsafe:verify -DargLine='-Duser.language=tr
        -Duser.country=TR -XX:-UseSplitVerifier'


  # java 8 compile (oraclejdk8)
  - script:
      name: java 8 inputs should NOT be in resources-noncompilable
      code: >
        if [ $(grep -rl --include='*.java' '//Compilable with Java8' src/test/resources-noncompilable | wc -l) -eq 0 ]; then
        echo 'OK';
        else
        echo 'please move all java8 resources to src/test/resources' && false;
        fi

  # Releasenotes generation - validaton
  - script:
      name: Releasenotes generation
      code: >
        if [ "${WERCKER_GIT_BRANCH}" != "master" ]; then return 0; fi
        && git clone https://github.com/checkstyle/contribution && cd contribution/releasenotes-xdoc-builder
        && mvn clean compile package
        && cd ../../ && git clone https://github.com/checkstyle/checkstyle && cd checkstyle
        && LATEST_RELEASE_TAG=$(git describe $(git rev-list --tags --max-count=1)) && cd ../
        && CS_RELEASE_VERSION=$(mvn -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec | sed 's/-SNAPSHOT//' )
        && echo LATEST_RELEASE_TAG=${LATEST_RELEASE_TAG} && echo CS_RELEASE_VERSION=${CS_RELEASE_VERSION}
        && java -jar contribution/releasenotes-xdoc-builder/target/releasenotes-xdoc-builder-1.0-all.jar
        -localRepoPath checkstyle -startRef ${LATEST_RELEASE_TAG} -releaseNumber ${CS_RELEASE_VERSION} -authToken ${GITHUB_AUTH_TOKEN}
        && cat releasenotes.xml
