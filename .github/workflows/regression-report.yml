#####################################################################################
# GitHub Action to generate Checkstyle report.
#
# Workflow starts when:
# 1) PR comment - created
#
# Requirements:
# 1) secrets.AWS_ACCESS_KEY_ID - access key for AWS S3 service user
# 2) secrets.AWS_SECRET_ACCESS_KEY - security access key for AWS S3 service user
#
# If you need to change bucket name or region, change AWS_REGION and AWS_BUCKET_NAME variables.
# For another bucket, you will need to change the secrets.
#####################################################################################
name: regression-report
env:
  AWS_REGION: us-east-2
  AWS_BUCKET_NAME: "checkstyle-diff-reports"
  USER_LOGIN: ${{ github.event.issue.user.login }}
  # yamllint disable-line rule:line-length
  DEFAULT_PROJECTS_LINK: "https://raw.githubusercontent.com/checkstyle/test-configs/main/extractor/src/main/resources/list-of-projects.properties"
  BASE_TEST_CONFIGS_URL: "https://raw.githubusercontent.com/checkstyle/test-configs/main"
  EXTRACTOR_VERSION: 2024-08-27
  DIFF_TOOL_VERSION: "1.0-SNAPSHOT-all"
  PATCH_DIFF_TOOL_VERSION: "0.1-SNAPSHOT"
  CACHE_KEY: "regression-report-${{ github.sha }}-${{ github.event.comment.id }}"
  GENERATED_CONFIGS_PATH: generated_configs

on:
  push:
    branches:
      - 'ci-test-cache-save-restore'

permissions:
  contents: read
  pull-requests: write
  actions: write

concurrency:
  group: ${{ github.run_id }}
  cancel-in-progress: true

jobs:
  check_pr_status:
    if: always()

    runs-on: ubuntu-latest
    steps:
      - name: Check PR status
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_URL: ${{ github.event.issue.pull_request.url }}
        run: exit 0

  checkout_and_cache:
    runs-on: ubuntu-latest
    needs: [ check_pr_status ]
    outputs:
      pr_branch: ${{ steps.get_pr_details.outputs.branch }}
      commit_sha: ${{ steps.get_pr_details.outputs.commit_sha }}
    env:
      CACHE_KEY: "regression-report-${{ github.sha }}-${{ github.event.comment.id }}"
    steps:
      - name: Create .ci-temp directory
        run: mkdir -p .ci-temp

      - name: Get PR branch and fork details
        id: get_pr_details
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_URL: ${{ github.event.issue.pull_request.url }}
        run: |
          PR_INFO="$(curl --fail-with-body -s -H "Authorization: token $GITHUB_TOKEN" "$PR_URL")"
          BRANCH="$(echo "$PR_INFO" | jq -r .head.ref)"
          FORK_REPO="$(echo "$PR_INFO" | jq -r .head.repo.full_name)"
          COMMIT_SHA="$(echo "$PR_INFO" | jq -r .head.sha)"
          {
            echo "branch=$BRANCH"
            echo "fork_repo=$FORK_REPO"
            echo "commit_sha=$COMMIT_SHA"
          } >> "$GITHUB_OUTPUT"

      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          repository: ${{ steps.get_pr_details.outputs.fork_repo }}
          ref: ${{ steps.get_pr_details.outputs.branch }}

      - name: Checkout master branch
        uses: actions/checkout@v4
        with:
          repository: checkstyle/checkstyle
          path: .ci-temp/checkstyle

      - name: Setup Git remotes
        run: |
          cd .ci-temp/checkstyle
          git remote add upstream https://github.com/checkstyle/checkstyle.git
          git remote add forked https://github.com/${{ steps.get_pr_details.outputs.fork_repo }}.git
          git fetch upstream
          git fetch forked
          git checkout -b ${{ steps.get_pr_details.outputs.branch }} \
               forked/${{ steps.get_pr_details.outputs.branch }}


      - name: Save cache
        uses: actions/cache/save@v4
        with:
          path: .
          key: ${{ env.CACHE_KEY }}

  make_file:
    runs-on: ubuntu-latest
    needs: [ check_pr_status, checkout_and_cache ]

    steps:
      - name: Restore cache
        uses: actions/cache/restore@v4
        with:
          path: .
          key: ${{ env.CACHE_KEY }}
          fail-on-cache-miss: true

      - name: make new file
        id: parse
        env:
          COMMENT_BODY: ${{ github.event.comment.body }}
        run: touch 1111.txt

      - name: Save cache
        uses: actions/cache/save@v4
        with:
          path: .
          key: ${{ env.CACHE_KEY }}
          fail-on-cache-miss: true

  check_cache:
    needs: [ make_file, checkout_and_cache ]
    runs-on: ubuntu-latest

    steps:
      - name: Restore cache
        uses: actions/cache/restore@v4
        with:
          path: .
          key: ${{ env.CACHE_KEY }}
          fail-on-cache-miss: true

      - name: check file
        id: test
        run: file 1111.txt
