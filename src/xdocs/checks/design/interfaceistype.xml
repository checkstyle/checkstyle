<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 https://maven.apache.org/xsd/xdoc-2.0.xsd">
  <head>
    <title>InterfaceIsType</title>
  </head>
  <body>
    <section name="InterfaceIsType">
      <p>Since Checkstyle 3.1</p>
      <subsection name="Description" id="Description">
        <p>
          Implements Joshua Bloch, Effective Java, Item 17 - Use Interfaces only to
          define types.
        </p>

        <p>
          According to Bloch, an interface should describe a <em>type</em>.
          It is therefore inappropriate to define an interface that does not
          contain any methods but only constants. The Standard interface <a href="https://docs.oracle.com/javase/8/docs/api/javax/swing/SwingConstants.html">
            javax.swing.SwingConstants</a>
          is an example of an interface that would be flagged by this check.
        </p>

        <p>
          The check can be configured to also disallow marker interfaces like
          <code>java.io.Serializable</code>, that do not contain methods or
          constants at all.
        </p>
      </subsection>

      <subsection name="Properties" id="Properties">
        <div class="wrapper">
          <table>
            <tr>
              <th>name</th>
              <th>description</th>
              <th>type</th>
              <th>default value</th>
              <th>since</th>
            </tr>
            <tr>
              <td>allowMarkerInterfaces</td>
              <td>
                Control whether marker interfaces like Serializable are
                allowed.
              </td>
              <td><a href="../../property_types.html#boolean">boolean</a></td>
              <td><code>true</code></td>
              <td>3.1</td>
            </tr>
          </table>
        </div>
      </subsection>

      <subsection name="Examples" id="Examples">
        <p>
          To configure the check:
        </p>
        <source>
&lt;module name="InterfaceIsType"/&gt;
        </source>
        <p>Example:</p>
        <source>
public interface Test1 { // violation
    int a = 3;
}

public interface Test2 { // OK

}

public interface Test3 { // OK
    int a = 3;
    void test();
}
        </source>
        <p>
          To configure the check to report violation so that it doesn't allow Marker Interfaces:
        </p>
        <source>
&lt;module name="InterfaceIsType"&gt;
  &lt;property name="allowMarkerInterfaces" value="false"/&gt;
&lt;/module&gt;
        </source>
        <p>Example:</p>
        <source>
public interface Test1 { // violation
    int a = 3;
}

public interface Test2 { // violation

}
        </source>
      </subsection>

      <subsection name="Example of Usage" id="Example_of_Usage">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%20path%3A**%2Fsun_checks.xml+repo%3Acheckstyle%2Fcheckstyle+InterfaceIsType">
            Sun Style</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Aconfig%20path%3A**%2Fcheckstyle-checks.xml+repo%3Acheckstyle%2Fcheckstyle+InterfaceIsType">
            Checkstyle Style</a>
          </li>
        </ul>
      </subsection>

      <subsection name="Violation Messages" id="Violation_Messages">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fdesign%20path%3A**%2Fmessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22interface.type%22">
            interface.type</a>
          </li>
        </ul>
        <p>
          All messages can be customized if the default message doesn't suit you.
          Please <a href="../../config.html#Custom_messages">see the documentation</a>
          to learn how to.
        </p>
      </subsection>

      <subsection name="Package" id="Package">
        <p>
          com.puppycrawl.tools.checkstyle.checks.design
        </p>
      </subsection>

      <subsection name="Parent Module" id="Parent_Module">
        <p>
          <a href="../../config.html#TreeWalker">TreeWalker</a>
        </p>
      </subsection>
    </section>
  </body>
</document>
