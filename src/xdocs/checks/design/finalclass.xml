<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 https://maven.apache.org/xsd/xdoc-2.0.xsd">
  <head>
    <title>FinalClass</title>
  </head>
  <body>
    <section name="FinalClass">
      <p>Since Checkstyle 3.1</p>
      <subsection name="Description" id="Description">
        <p>
          Ensures that identifies classes that can be effectively declared as final are explicitly
          marked as final. The following are different types of classes that can be identified:
        </p>
        <ol>
          <li>
              Private classes with no declared constructors.
          </li>
          <li>
              Classes with any modifier, and contains only private constructors.
          </li>
        </ol>
        <p>
          Classes are skipped if:
        </p>
        <ol>
          <li>
              Class is Super class of some Anonymous inner class.
          </li>
          <li>
              Class is extended by another class in the same file.
          </li>
        </ol>
      </subsection>

      <subsection name="Examples" id="Examples">
        <p id="Example1-config">
          To configure the check:
        </p>
        <source>
&lt;module name=&quot;Checker&quot;&gt;
  &lt;module name=&quot;TreeWalker&quot;&gt;
    &lt;module name=&quot;FinalClass&quot;/&gt;
  &lt;/module&gt;
&lt;/module&gt;
        </source>
        <p id="Example1-code">Example:</p>
        <source>
public class Example1 { // ok, since it has a public constructor

  final class A {
    private A() {
    }
  }

  class B { // violation, 'Class B should be declared as final.'
    private B() {
    }
  }

  class C { // ok, since it has a public constructor
    int field1;
    String field2;

    private C(int value) {
      this.field1 = value;
      this.field2 = &quot; &quot;;
    }

    public C(String value) {
      this.field2 = value;
      this.field1 = 0;
    }
  }

  class AnonymousInner { // ok, class has an anonymous inner class.
    public final AnonymousInner ONE
            = new AnonymousInner() {
            };

    private AnonymousInner() {
    }
  }

  class Class1 {

    private class Class2 { // violation, 'Class Class2 should be declared as final'
    }

    public class Class3 {
    }

  }
}
        </source>
      </subsection>

      <subsection name="Example of Usage" id="Example_of_Usage">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%20path%3A**%2Fsun_checks.xml+repo%3Acheckstyle%2Fcheckstyle+FinalClass">
            Sun Style</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Aconfig%20path%3A**%2Fcheckstyle-checks.xml+repo%3Acheckstyle%2Fcheckstyle+FinalClass">
            Checkstyle Style</a>
          </li>
        </ul>
      </subsection>

      <subsection name="Violation Messages" id="Violation_Messages">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fdesign%20path%3A**%2Fmessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22final.class%22">
              final.class
            </a>
          </li>
        </ul>
        <p>
          All messages can be customized if the default message doesn't suit you.
          Please <a href="../../config.html#Custom_messages">see the documentation</a>
          to learn how to.
        </p>
      </subsection>

      <subsection name="Package" id="Package">
        <p>
          com.puppycrawl.tools.checkstyle.checks.design
        </p>
      </subsection>

      <subsection name="Parent Module" id="Parent_Module">
        <p>
          <a href="../../config.html#TreeWalker">TreeWalker</a>
        </p>
      </subsection>
    </section>
  </body>
</document>
