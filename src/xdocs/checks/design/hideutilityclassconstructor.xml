<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 https://maven.apache.org/xsd/xdoc-2.0.xsd">
  <head>
    <title>HideUtilityClassConstructor</title>
  </head>
  <body>
    <section name="HideUtilityClassConstructor">
      <p>Since Checkstyle 3.1</p>
      <subsection name="Description" id="Description">
        <p>
          Makes sure that utility classes (classes that contain only static
          methods or fields in their API) do not have a public constructor.
        </p>

        <p>
          Rationale: Instantiating utility classes does not make sense. Hence,
          the constructors should either be private or (if you want to allow
          subclassing) protected. A common mistake is forgetting to hide the
          default constructor.
        </p>

        <p>
          If you make the constructor protected you may want to consider the
          following constructor implementation technique to disallow
          instantiating subclasses:
        </p>

        <source>
public class StringUtils // not final to allow subclassing
{
  protected StringUtils() {
    // prevents calls from subclass
    throw new UnsupportedOperationException();
  }

  public static int count(char c, String s) {
    // ...
  }
}
        </source>
      </subsection>

      <subsection name="Examples" id="Examples">
        <p>
          To configure the check:
        </p>
        <source>
&lt;module name="HideUtilityClassConstructor"/&gt;
        </source>
        <p>
          Example:
        </p>
        <source>
class Test { // violation, class only has a static method and a constructor

  public Test() {
  }

  public static void fun() {
  }
}

class Foo { // OK

  private Foo() {
  }

  static int n;
}

class Bar { // OK

  protected Bar() {
    // prevents calls from subclass
    throw new UnsupportedOperationException();
  }
}

class UtilityClass { // violation, class only has a static field

  static float f;
}
        </source>
      </subsection>

      <subsection name="Example of Usage" id="Example_of_Usage">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%20path%3A**%2Fsun_checks.xml+repo%3Acheckstyle%2Fcheckstyle+HideUtilityClassConstructor">
            Sun Style</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Aconfig%20path%3A**%2Fcheckstyle-checks.xml+repo%3Acheckstyle%2Fcheckstyle+HideUtilityClassConstructor">
            Checkstyle Style</a>
          </li>
        </ul>
      </subsection>

      <subsection name="Violation Messages" id="Violation_Messages">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fdesign%20path%3A**%2Fmessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22hide.utility.class%22">
            hide.utility.class</a>
          </li>
        </ul>
        <p>
          All messages can be customized if the default message doesn't suit you.
          Please <a href="../../config.html#Custom_messages">see the documentation</a>
          to learn how to.
        </p>
      </subsection>

      <subsection name="Package" id="Package">
        <p>
          com.puppycrawl.tools.checkstyle.checks.design
        </p>
      </subsection>

      <subsection name="Parent Module" id="Parent_Module">
        <p>
          <a href="../../config.html#TreeWalker">TreeWalker</a>
        </p>
      </subsection>
    </section>
  </body>
</document>
