<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 https://maven.apache.org/xsd/xdoc-2.0.xsd">
  <head>
    <title>ClassMemberImpliedModifier</title>
  </head>
  <body>
    <section name="ClassMemberImpliedModifier">
      <p>Since Checkstyle 8.16</p>
      <subsection name="Description" id="Description">
        <p>
          Checks for implicit modifiers on nested types in classes and records.
        </p>
        <p>
          This check is effectively the opposite of
          <a href="redundantmodifier.html#RedundantModifier">RedundantModifier</a>.
          It checks the modifiers on nested types in classes and records, ensuring that certain
          modifiers are explicitly specified even though they are actually redundant.
        </p>
        <p>
          Nested enums, interfaces, and records within a class are always <code>static</code> and as
          such the compiler does not require the <code>static</code> modifier. This check provides
          the ability to enforce that the <code>static</code> modifier is explicitly coded and not
          implicitly added by the compiler.
        </p>
        <source>
public final class Person {
  enum Age {  // violation
    CHILD, ADULT
  }
}
        </source>
        <p>
          Rationale for this check:
          Nested enums, interfaces, and records are treated differently from nested classes as they
          are only allowed to be <code>static</code>. Developers should not need to remember this
          rule, and this check provides the means to enforce that the modifier is coded explicitly.
        </p>
      </subsection>

      <subsection name="Properties" id="Properties">
        <div class="wrapper">
          <macro name="properties">
            <param name="modulePath"
                   value="src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/ClassMemberImpliedModifierCheck.java"/>
          </macro>
        </div>
      </subsection>

      <subsection name="Examples" id="Examples">
        <p>
          To configure the check so that it checks that all implicit modifiers on nested interfaces,
          enums, and records are explicitly specified in classes and records.
        </p>
        <p id="Example1-config">
          Configuration:
        </p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/checks/modifier/classmemberimpliedmodifier/Example1.txt"/>
          <param name="type" value="config"/>
        </macro>
        <p id="Example1-code">
          Code:
        </p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/checks/modifier/classmemberimpliedmodifier/Example1.txt"/>
          <param name="type" value="code"/>
        </macro>
      </subsection>

      <subsection name="Example of Usage" id="Example_of_Usage">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Aconfig%20path%3A**%2Fcheckstyle-checks.xml+repo%3Acheckstyle%2Fcheckstyle+ClassMemberImpliedModifier">
            Checkstyle Style</a>
          </li>
        </ul>
      </subsection>

      <subsection name="Violation Messages" id="Violation_Messages">
        <macro name="violation-messages">
          <param name="checkName" value="ClassMemberImpliedModifier"/>
        </macro>
        <p>
          All messages can be customized if the default message doesn't suit you.
          Please <a href="../../config.html#Custom_messages">see the documentation</a>
          to learn how to.
        </p>
      </subsection>

      <subsection name="Package" id="Package">
        <p> com.puppycrawl.tools.checkstyle.checks.modifier </p>
      </subsection>

      <subsection name="Parent Module" id="Parent_Module">
        <macro name="parent-module">
          <param name="moduleName" value="ClassMemberImpliedModifier"/>
        </macro>
      </subsection>
    </section>
  </body>
</document>
