<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 https://maven.apache.org/xsd/xdoc-2.0.xsd">
  <head>
    <title>EmptyLineSeparator</title>
  </head>
  <body>
    <section name="EmptyLineSeparator">
      <p>Since Checkstyle 5.8</p>
      <subsection name="Description" id="Description">
        <p>
          Checks for empty line separators before package, all import declarations,
          fields, constructors, methods, nested classes,
          static initializers and instance initializers.
        </p>
        <p>
          Checks for empty line separators before not only statements but
          implementation and documentation comments and blocks as well.
        </p>
        <p>
          ATTENTION: empty line separator is required between token siblings,
          not after line where token is found.
          If token does not have a sibling of the same type, then empty line
          is required at its end (for example for CLASS_DEF it is after '}').
          Also, trailing comments are skipped.
        </p>
        <p>
          ATTENTION: violations from multiple empty lines cannot be suppressed via XPath:
          <a href="https://github.com/checkstyle/checkstyle/issues/8179">#8179</a>.
        </p>
      </subsection>

      <subsection name="Properties" id="Properties">
        <div class="wrapper">
          <table>
            <tr>
              <th>name</th>
              <th>description</th>
              <th>type</th>
              <th>default value</th>
              <th>since</th>
            </tr>
            <tr>
              <td>allowNoEmptyLineBetweenFields</td>
              <td>Allow no empty line between fields.</td>
              <td><a href="../../property_types.html#boolean">boolean</a></td>
              <td><code>false</code></td>
              <td>5.8</td>
            </tr>
            <tr>
              <td>allowMultipleEmptyLines</td>
              <td>Allow multiple empty lines between class members.</td>
              <td><a href="../../property_types.html#boolean">boolean</a></td>
              <td><code>true</code></td>
              <td>6.3</td>
            </tr>
            <tr>
              <td>allowMultipleEmptyLinesInsideClassMembers</td>
              <td>Allow multiple empty lines inside class members.</td>
              <td><a href="../../property_types.html#boolean">boolean</a></td>
              <td><code>true</code></td>
              <td>6.18</td>
            </tr>
            <tr>
              <td>tokens</td>
              <td>tokens to check</td>
              <td>subset of tokens
                <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#PACKAGE_DEF">
                  PACKAGE_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#IMPORT">
                    IMPORT</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#STATIC_IMPORT">
                    STATIC_IMPORT</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CLASS_DEF">
                    CLASS_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF">
                    INTERFACE_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_DEF">
                    ENUM_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#METHOD_DEF">
                    STATIC_INIT</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INSTANCE_INIT">
                    INSTANCE_INIT</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#METHOD_DEF">
                    METHOD_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CTOR_DEF">
                    CTOR_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#VARIABLE_DEF">
                    VARIABLE_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#RECORD_DEF">
                    RECORD_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#COMPACT_CTOR_DEF">
                    COMPACT_CTOR_DEF</a>
                    .
              </td>
              <td>
                <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#PACKAGE_DEF">
                    PACKAGE_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#IMPORT">
                    IMPORT</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#STATIC_IMPORT">
                    STATIC_IMPORT</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CLASS_DEF">
                    CLASS_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF">
                    INTERFACE_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_DEF">
                    ENUM_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#METHOD_DEF">
                    STATIC_INIT</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INSTANCE_INIT">
                    INSTANCE_INIT</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#METHOD_DEF">
                    METHOD_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CTOR_DEF">
                    CTOR_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#VARIABLE_DEF">
                    VARIABLE_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#RECORD_DEF">
                    RECORD_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#COMPACT_CTOR_DEF">
                    COMPACT_CTOR_DEF</a>
                  .
              </td>
              <td>5.8</td>
            </tr>
          </table>
        </div>
      </subsection>

      <subsection name="Examples" id="Examples">
        <p>
            To configure the default check:
        </p>
        <source>
&lt;module name="EmptyLineSeparator"/&gt;
        </source>
        <p>
          Example of declarations without empty line separator:
        </p>
        <source>
///////////////////////////////////////////////////
//HEADER
///////////////////////////////////////////////////
package com.whitespace; // violation , 'package' should be separated from previous line
import java.io.Serializable; // violation , 'import' should be separated from previous line

class FirstClass {

  int var1 = 1;
  int var2 = 2; // violation , 'VARIABLE_DEF' should be separated from previous line


  int var3 = 3;


  void method1() {}
  void method2() { // violation , 'METHOD_DEF' should be separated from previous line
     int var4 = 4;


     int var5 = 5;
  }
}
        </source>
        <p>
          To check empty line before
          <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#VARIABLE_DEF">
                  VARIABLE_DEF</a> and
          <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#METHOD_DEF">
                  METHOD_DEF</a>:
        </p>
        <source>
&lt;module name="EmptyLineSeparator"&gt;
  &lt;property name="tokens" value="VARIABLE_DEF, METHOD_DEF"/&gt;
&lt;/module&gt;
        </source>
        <source>
///////////////////////////////////////////////////
//HEADER
///////////////////////////////////////////////////
package com.whitespace;
import java.io.Serializable;

class FirstClass {

  int var1 = 1;
  int var2 = 2; // violation , 'VARIABLE_DEF' should be separated from previous line


  int var3 = 3;


  void method1() {}
  void method2() { // violation , 'METHOD_DEF' should be separated from previous line
     int var4 = 4;


     int var5 = 5;
  }
}
        </source>

        <p>
          To allow no empty line between fields:
        </p>
        <source>
&lt;module name="EmptyLineSeparator"&gt;
  &lt;property name="allowNoEmptyLineBetweenFields" value="true"/&gt;
&lt;/module&gt;
        </source>
        <p>
          Example:
        </p>
        <source>
///////////////////////////////////////////////////
//HEADER
///////////////////////////////////////////////////
package com.whitespace; // violation , 'package' should be separated from previous line
import java.io.Serializable; // violation , 'import' should be separated from previous line

class FirstClass {

  int var1 = 1;
  int var2 = 2;


  int var3 = 3;


  void method1() {}
  void method2() { // violation , 'METHOD_DEF' should be separated from previous line
     int var4 = 4;


     int var5 = 5;
  }
}
        </source>
        <p>
          To disallow multiple empty lines between class members:
        </p>
        <source>
&lt;module name="EmptyLineSeparator"&gt;
  &lt;property name="allowMultipleEmptyLines" value="false"/&gt;
&lt;/module&gt;
        </source>
        <source>
///////////////////////////////////////////////////
//HEADER
///////////////////////////////////////////////////
package com.whitespace; // violation , 'package' should be separated from previous line
import java.io.Serializable; // violation , 'import' should be separated from previous line

class FirstClass {

  int var1 = 1;
  int var2 = 2; // violation , 'VARIABLE_DEF' should be separated from previous line


  int var3 = 3; // violation , 'VARIABLE_DEF' has more than 1 empty lines before


  void method1() {} // violation , 'METHOD_DEF' has more than 1 empty lines before
  void method2() { // violation , 'METHOD_DEF' should be separated from previous line
     int var4 = 4;


     int var5 = 5;
  }
}
        </source>
        <p>
          To disallow multiple empty lines inside constructor,
            initialization block and method:
        </p>
        <source>
&lt;module name="EmptyLineSeparator"&gt;
  &lt;property name="allowMultipleEmptyLinesInsideClassMembers" value="false"/&gt;
&lt;/module&gt;
        </source>

        <p>
          The check is valid only for statements that have body:
          <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CLASS_DEF">
                CLASS_DEF</a>
          , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF">
                INTERFACE_DEF</a>
          , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_DEF">
                ENUM_DEF</a>
          , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#METHOD_DEF">
                STATIC_INIT</a>
          , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INSTANCE_INIT">
                INSTANCE_INIT</a>
          , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#METHOD_DEF">
                METHOD_DEF</a>
          , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CTOR_DEF">
                CTOR_DEF</a>
          .
        </p>
        <p>
          Example of declarations with multiple empty lines inside method:
        </p>
        <source>
///////////////////////////////////////////////////
//HEADER
///////////////////////////////////////////////////
package com.whitespace; // violation , 'package' should be separated from previous line
import java.io.Serializable; // violation , 'import' should be separated from previous line

class FirstClass {

  int var1 = 1;
  int var2 = 2; // violation , 'VARIABLE_DEF' should be separated from previous line


  int var3 = 3;


  void method1() {}
  void method2() { // violation , 'METHOD_DEF' should be separated from previous line
     int var4 = 4; // violation , There is more than 1 empty line after this line


     int var5 = 5;
  }
}
        </source>
      </subsection>

      <subsection name="Example of Usage" id="Example_of_Usage">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%20path%3A**%2Fgoogle_checks.xml+repo%3Acheckstyle%2Fcheckstyle+EmptyLineSeparator">
            Google Style</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Aconfig%20path%3A**%2Fcheckstyle-checks.xml+repo%3Acheckstyle%2Fcheckstyle+EmptyLineSeparator">
            Checkstyle Style</a>
          </li>
        </ul>
      </subsection>

      <subsection name="Violation Messages" id="Violation_Messages">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fwhitespace%20path%3A**%2Fmessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22empty.line.separator%22">
            empty.line.separator</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fwhitespace%20path%3A**%2Fmessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22empty.line.separator.multiple.lines%22">
            empty.line.separator.multiple.lines</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fwhitespace%20path%3A**%2Fmessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22empty.line.separator.multiple.lines.after%22">
            empty.line.separator.multiple.lines.after</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fwhitespace%20path%3A**%2Fmessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22empty.line.separator.multiple.lines.inside%22">
            empty.line.separator.multiple.lines.inside</a>
          </li>
        </ul>
        <p>
          All messages can be customized if the default message doesn't suit you.
          Please <a href="../../config.html#Custom_messages">see the documentation</a>
          to learn how to.
        </p>
      </subsection>

      <subsection name="Package" id="Package">
        <p>
          com.puppycrawl.tools.checkstyle.checks.whitespace
        </p>
      </subsection>

      <subsection name="Parent Module" id="Parent_Module">
        <p>
          <a href="../../config.html#TreeWalker">TreeWalker</a>
        </p>
      </subsection>
    </section>
  </body>
</document>
