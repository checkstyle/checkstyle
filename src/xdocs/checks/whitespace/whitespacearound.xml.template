<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 https://maven.apache.org/xsd/xdoc-2.0.xsd">
  <head>
    <title>WhitespaceAround</title>
  </head>
  <body>
    <section name="WhitespaceAround">
      <p>Since Checkstyle 3.0</p>
      <subsection name="Description" id="Description">
        <p>
        Checks that a token is surrounded by whitespace. Empty constructor,
        method, class, enum, interface, loop bodies (blocks), lambdas of the form
        </p>

        <source>public MyClass() {}      // empty constructor
public void func() {}    // empty method
public interface Foo {} // empty interface
public class Foo {} // empty class
public enum Foo {} // empty enum
MyClass c = new MyClass() {}; // empty anonymous class
while (i = 1) {} // empty while loop
for (int i = 1; i &gt; 1; i++) {} // empty for loop
do {} while (i = 1); // empty do-while loop
Runnable noop = () -&gt; {}; // empty lambda
public @interface Beta {} // empty annotation type
        </source>

        <p>
          may optionally be exempted from the policy using the <code>
          allowEmptyMethods</code>, <code>allowEmptyConstructors</code>,
          <code>allowEmptyTypes</code>, <code>allowEmptyLoops</code>,
          <code>allowEmptyLambdas</code> and <code>allowEmptyCatches</code>
          properties.
        </p>
        <p>This check does not flag as violation double brace initialization like:</p>
        <div class="wrapper">
          <pre><code>
new Properties() {{
    setProperty("key", "value");
}};
          </code></pre>
        </div>
        <p>Parameter allowEmptyCatches allows to suppress violations when token
        list contains SLIST to check if beginning of block is surrounded by
        whitespace and catch block is empty, for example:</p>
        <div class="wrapper">
          <pre><code>
try {
    k = 5 / i;
} catch (ArithmeticException ex) {}
          </code></pre>
        </div>
        <p>
          With this property turned off, this raises violation because the beginning of the
          catch block (left curly bracket) is not separated from the end of the catch
          block (right curly bracket).
        </p>
      </subsection>

      <subsection name="Properties" id="Properties">
        <div class="wrapper">
          <table>
            <tr>
              <th>name</th>
              <th>description</th>
              <th>type</th>
              <th>default value</th>
              <th>since</th>
            </tr>
            <tr>
              <td>allowEmptyConstructors</td>
              <td>Allow empty constructor bodies.</td>
              <td><a href="../../property_types.html#boolean">boolean</a></td>
              <td><code>false</code></td>
              <td>4.0</td>
            </tr>
            <tr>
              <td>allowEmptyMethods</td>
              <td>Allow empty method bodies.</td>
              <td><a href="../../property_types.html#boolean">boolean</a></td>
              <td><code>false</code></td>
              <td>4.0</td>
            </tr>
            <tr>
              <td>allowEmptyTypes</td>
              <td>Allow empty class, interface and enum bodies.</td>
              <td><a href="../../property_types.html#boolean">boolean</a></td>
              <td><code>false</code></td>
              <td>5.8</td>
            </tr>
            <tr>
              <td>allowEmptyLoops</td>
              <td>Allow empty loop bodies.</td>
              <td><a href="../../property_types.html#boolean">boolean</a></td>
              <td><code>false</code></td>
              <td>5.8</td>
            </tr>
            <tr>
              <td>allowEmptyLambdas</td>
              <td>Allow empty lambda bodies.</td>
              <td><a href="../../property_types.html#boolean">boolean</a></td>
              <td><code>false</code></td>
              <td>6.14</td>
            </tr>
            <tr>
              <td>allowEmptyCatches</td>
              <td>Allow empty catch bodies.</td>
              <td><a href="../../property_types.html#boolean">boolean</a></td>
              <td><code>false</code></td>
              <td>7.6</td>
            </tr>
            <tr>
              <td>ignoreEnhancedForColon</td>
              <td>Ignore whitespace around colon in
                <a href="https://docs.oracle.com/javase/specs/jls/se11/html/jls-14.html#jls-14.14.2">
                enhanced for</a> loop.
              </td>
              <td><a href="../../property_types.html#boolean">boolean</a></td>
              <td><code>true</code></td>
              <td>5.5</td>
            </tr>
            <tr>
              <td>tokens</td>
              <td>tokens to check</td>

              <td>
                subset of tokens
                <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ASSIGN">
                  ASSIGN</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ARRAY_INIT">
                  ARRAY_INIT</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#BAND">
                  BAND</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#BAND_ASSIGN">
                  BAND_ASSIGN</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#BOR">
                  BOR</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#BOR_ASSIGN">
                  BOR_ASSIGN</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#BSR">
                  BSR</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#BSR_ASSIGN">
                  BSR_ASSIGN</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#BXOR">
                  BXOR</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#BXOR_ASSIGN">
                  BXOR_ASSIGN</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#COLON">
                  COLON</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#DIV">
                  DIV</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#DIV_ASSIGN">
                  DIV_ASSIGN</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#DO_WHILE">
                  DO_WHILE</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#EQUAL">
                  EQUAL</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#GE">
                  GE</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#GT">
                  GT</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#LAMBDA">
                  LAMBDA</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#LAND">
                  LAND</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#LCURLY">
                  LCURLY</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#LE">
                  LE</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#LITERAL_CATCH">
                  LITERAL_CATCH</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#LITERAL_DO">
                  LITERAL_DO</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#LITERAL_ELSE">
                  LITERAL_ELSE</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#LITERAL_FINALLY">
                  LITERAL_FINALLY</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#LITERAL_FOR">
                  LITERAL_FOR</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#LITERAL_IF">
                  LITERAL_IF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#LITERAL_RETURN">
                  LITERAL_RETURN</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#LITERAL_SWITCH">
                  LITERAL_SWITCH</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#LITERAL_SYNCHRONIZED">
                  LITERAL_SYNCHRONIZED</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#LITERAL_TRY">
                  LITERAL_TRY</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#LITERAL_WHILE">
                  LITERAL_WHILE</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#LOR">
                  LOR</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#LT">
                  LT</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#MINUS">
                  MINUS</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#MINUS_ASSIGN">
                  MINUS_ASSIGN</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#MOD">
                  MOD</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#MOD_ASSIGN">
                  MOD_ASSIGN</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#NOT_EQUAL">
                  NOT_EQUAL</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#PLUS">
                  PLUS</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#PLUS_ASSIGN">
                  PLUS_ASSIGN</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#QUESTION">
                  QUESTION</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#RCURLY">
                  RCURLY</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#SL">
                  SL</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#SLIST">
                  SLIST</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#SL_ASSIGN">
                  SL_ASSIGN</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#SR">
                  SR</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#SR_ASSIGN">
                  SR_ASSIGN</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#STAR">
                  STAR</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#STAR_ASSIGN">
                  STAR_ASSIGN</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#LITERAL_ASSERT">
                  LITERAL_ASSERT</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#TYPE_EXTENSION_AND">
                  TYPE_EXTENSION_AND</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#WILDCARD_TYPE">
                  WILDCARD_TYPE</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#GENERIC_START">
                  GENERIC_START</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#GENERIC_END">
                  GENERIC_END</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ELLIPSIS">
                  ELLIPSIS</a>
                  .
              </td>
              <td>
                <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ASSIGN">
                  ASSIGN</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#BAND">
                  BAND</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#BAND_ASSIGN">
                  BAND_ASSIGN</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#BOR">
                  BOR</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#BOR_ASSIGN">
                  BOR_ASSIGN</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#BSR">
                  BSR</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#BSR_ASSIGN">
                  BSR_ASSIGN</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#BXOR">
                  BXOR</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#BXOR_ASSIGN">
                  BXOR_ASSIGN</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#COLON">
                  COLON</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#DIV">
                  DIV</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#DIV_ASSIGN">
                  DIV_ASSIGN</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#DO_WHILE">
                  DO_WHILE</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#EQUAL">
                  EQUAL</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#GE">
                  GE</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#GT">
                  GT</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#LAMBDA">
                  LAMBDA</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#LAND">
                  LAND</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#LCURLY">
                  LCURLY</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#LE">
                  LE</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#LITERAL_CATCH">
                  LITERAL_CATCH</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#LITERAL_DO">
                  LITERAL_DO</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#LITERAL_ELSE">
                  LITERAL_ELSE</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#LITERAL_FINALLY">
                  LITERAL_FINALLY</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#LITERAL_FOR">
                  LITERAL_FOR</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#LITERAL_IF">
                  LITERAL_IF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#LITERAL_RETURN">
                  LITERAL_RETURN</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#LITERAL_SWITCH">
                  LITERAL_SWITCH</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#LITERAL_SYNCHRONIZED">
                  LITERAL_SYNCHRONIZED</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#LITERAL_TRY">
                  LITERAL_TRY</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#LITERAL_WHILE">
                  LITERAL_WHILE</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#LOR">
                  LOR</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#LT">
                  LT</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#MINUS">
                  MINUS</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#MINUS_ASSIGN">
                  MINUS_ASSIGN</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#MOD">
                  MOD</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#MOD_ASSIGN">
                  MOD_ASSIGN</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#NOT_EQUAL">
                  NOT_EQUAL</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#PLUS">
                  PLUS</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#PLUS_ASSIGN">
                  PLUS_ASSIGN</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#QUESTION">
                  QUESTION</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#RCURLY">
                  RCURLY</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#SL">
                  SL</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#SLIST">
                  SLIST</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#SL_ASSIGN">
                  SL_ASSIGN</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#SR">
                  SR</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#SR_ASSIGN">
                  SR_ASSIGN</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#STAR">
                  STAR</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#STAR_ASSIGN">
                  STAR_ASSIGN</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#LITERAL_ASSERT">
                  LITERAL_ASSERT</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#TYPE_EXTENSION_AND">
                  TYPE_EXTENSION_AND</a>
                  .
              </td>
              <td>3.0</td>
            </tr>
          </table>
        </div>
      </subsection>

      <subsection name="Examples" id="Examples">
        <p>
          To configure the check:
        </p>
        <source>
&lt;module name="WhitespaceAround"/&gt;
        </source>
        <p>Example:</p>
        <source>
class Test {
    public Test(){} // 2 violations, '{' is not followed and preceded by whitespace.
    public static void main(String[] args) {
        if (foo) { // ok
            // body
        }
        else{ // violation
            // body
        }

        for (int i = 1; i &gt; 1; i++) {} // violation, '{' is not followed by whitespace.

        Runnable noop = () -&gt;{}; // 2 violations,
                                 // '{' is not followed and preceded by whitespace.
        try {
            // body
        } catch (Exception e){} // 2 violations,
                                // '{' is not followed and preceded by whitespace.

        char[] vowels = {'a', 'e', 'i', 'o', 'u'};
        for (char item: vowels) { // ok, because ignoreEnhancedForColon is true by default
            // body
        }
    }
}
        </source>
        <p>
          To configure the check for whitespace only around assignment operators:
        </p>
        <source>
&lt;module name="WhitespaceAround"&gt;
  &lt;property name="tokens"
    value="ASSIGN,DIV_ASSIGN,PLUS_ASSIGN,MINUS_ASSIGN,STAR_ASSIGN,
           MOD_ASSIGN,SR_ASSIGN,BSR_ASSIGN,SL_ASSIGN,BXOR_ASSIGN,
           BOR_ASSIGN,BAND_ASSIGN"/&gt;
&lt;/module&gt;
        </source>
        <p>Example:</p>
        <source>
class Test {
    public static void main(String[] args) {
        int b=10; // violation
        int c = 10; // ok
        b+=10; // violation
        b += 10; // ok
        c*=10; // violation
        c *= 10; // ok
        c-=5; // violation
        c -= 5; // ok
        c/=2; // violation
        c /= 2; // ok
        c%=1; // violation
        c %= 1; // ok
        c&gt;&gt;=1; // violation
        c &gt;&gt;= 1; // ok
        c&gt;&gt;&gt;=1; // violation
        c &gt;&gt;&gt;= 1; // ok
    }
    public void myFunction() {
        c^=1; // violation
        c ^= 1; // ok
        c|=1; // violation
        c |= 1; // ok
        c&amp;=1; // violation
        c &amp;= 1; // ok
        c&lt;&lt;=1; // violation
        c &lt;&lt;= 1; // ok
    }
}
        </source>
        <p>
          To configure the check for whitespace only around curly braces:
        </p>
        <source>
&lt;module name="WhitespaceAround"&gt;
  &lt;property name="tokens" value="LCURLY,RCURLY"/&gt;
&lt;/module&gt;
        </source>
        <p>Example:</p>
        <source>
class Test {
    public void myFunction() {} // violation
    public void myFunction() { } // ok
}
        </source>
        <p>
          To configure the check to allow empty method bodies:
        </p>
        <source>
&lt;module name="WhitespaceAround"&gt;
  &lt;property name="allowEmptyMethods" value="true"/&gt;
&lt;/module&gt;
        </source>
        <p>Example:</p>
        <source>
class Test {
    public void muFunction() {} // ok
    int a=4; // 2 violations, '=' is not followed and preceded by whitespace.
}
        </source>
        <p>
          To configure the check to allow empty constructor bodies:
        </p>
        <source>
&lt;module name="WhitespaceAround"&gt;
  &lt;property name="allowEmptyConstructors" value="true"/&gt;
&lt;/module&gt;
        </source>
        <p>Example:</p>
        <source>
class Test {
    public Test() {} // ok
    public void muFunction() {} // violation, '{' is not followed by whitespace.
}
        </source>
        <p>
          To configure the check to allow empty type bodies:
        </p>
        <source>
&lt;module name="WhitespaceAround"&gt;
  &lt;property name="allowEmptyTypes" value="true"/&gt;
&lt;/module&gt;
        </source>
        <p>Example:</p>
        <source>
class Test {} // ok
interface testInterface{} // ok
class anotherTest {
    int a=4; // 2 violations, '=' is not followed and preceded by whitespace.
}
        </source>
        <p>
          To configure the check to allow empty loop bodies:
        </p>
        <source>
&lt;module name="WhitespaceAround"&gt;
  &lt;property name="allowEmptyLoops" value="true"/&gt;
&lt;/module&gt;
        </source>
        <p>Example:</p>
        <source>
class Test {
    public static void main(String[] args) {
        for (int i = 100;i &gt; 10; i--){} // ok
        do {} while (i = 1); // ok
        int a=4; // 2 violations, '=' is not followed and preceded by whitespace.
    }
}
        </source>
        <p>
          To configure the check to allow empty lambda bodies:
        </p>
        <source>
&lt;module name="WhitespaceAround"&gt;
  &lt;property name="allowEmptyLambdas" value="true"/&gt;
&lt;/module&gt;
        </source>
        <p>Example:</p>
        <source>
class Test {
    public static void main(String[] args) {
        Runnable noop = () -&gt; {}; // ok
        int a=4; // 2 violations, '=' is not followed and preceded by whitespace.
    }
}
        </source>
        <p>
          To configure the check to allow empty catch bodies:
        </p>
        <source>
&lt;module name="WhitespaceAround"&gt;
  &lt;property name="allowEmptyCatches" value="true"/&gt;
&lt;/module&gt;
        </source>
        <p>Example:</p>
        <source>
class Test {
    public static void main(String[] args) {
        int a=4; // 2 violations, '=' is not followed and preceded by whitespace.
        try {
            // body
        } catch (Exception e){} // ok
    }
}
        </source>
        <p>
          Also, this check can be configured to ignore the colon in an enhanced for loop.
          The colon in an enhanced for loop is ignored by default.
        </p>
        <p>
          To configure the check to ignore the colon:
        </p>
        <source>
&lt;module name="WhitespaceAround"&gt;
  &lt;property name="ignoreEnhancedForColon" value="false" /&gt;
&lt;/module&gt;
        </source>
        <p>Example:</p>
        <source>
class Test {
    public static void main(String[] args) {
        int a=4; // 2 violations , '=' is not followed and preceded by whitespace.
        char[] vowels = {'a', 'e', 'i', 'o', 'u'};
        for (char item: vowels) { // violation, ':' is not preceded by whitespace.
            // body
        }
    }
}
        </source>
      </subsection>

      <subsection name="Example of Usage" id="Example_of_Usage">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%20path%3A**%2Fgoogle_checks.xml+repo%3Acheckstyle%2Fcheckstyle+WhitespaceAround">
            Google Style</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%20path%3A**%2Fsun_checks.xml+repo%3Acheckstyle%2Fcheckstyle+WhitespaceAround">
            Sun Style</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Aconfig%20path%3A**%2Fcheckstyle-checks.xml+repo%3Acheckstyle%2Fcheckstyle+WhitespaceAround">
            Checkstyle Style</a>
          </li>
        </ul>
      </subsection>

      <subsection name="Violation Messages" id="Violation_Messages">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fwhitespace%20path%3A**%2Fmessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22ws.notFollowed%22">
            ws.notFollowed</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fwhitespace%20path%3A**%2Fmessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22ws.notPreceded%22">
            ws.notPreceded</a>
          </li>
        </ul>
        <p>
          All messages can be customized if the default message doesn't suit you.
          Please <a href="../../config.html#Custom_messages">see the documentation</a>
          to learn how to.
        </p>
      </subsection>

      <subsection name="Package" id="Package">
        <p>
          com.puppycrawl.tools.checkstyle.checks.whitespace
        </p>
      </subsection>

      <subsection name="Parent Module" id="Parent_Module">
        <p>
          <a href="../../config.html#TreeWalker">TreeWalker</a>
        </p>
      </subsection>
    </section>
  </body>
</document>
