<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 https://maven.apache.org/xsd/xdoc-2.0.xsd">
  <head>
    <title>NoWhitespaceBefore</title>
  </head>
  <body>
    <section name="NoWhitespaceBefore">
      <p>Since Checkstyle 3.0</p>
      <subsection name="Description" id="Description">
        <p>
          Checks that there is no whitespace before a token. More
          specifically, it checks that it is not preceded with whitespace, or
          (if linebreaks are allowed) all characters on the line before are
          whitespace. To allow linebreaks before a token, set property
          <code>allowLineBreaks</code> to <code>true</code>. No check occurs
          before semicolons in empty for loop initializers or conditions.
        </p>
      </subsection>

      <subsection name="Properties" id="Properties">
        <div class="wrapper">
          <table>
            <tr>
              <th>name</th>
              <th>description</th>
              <th>type</th>
              <th>default value</th>
              <th>since</th>
            </tr>
            <tr>
              <td>allowLineBreaks</td>
              <td>Control whether whitespace is allowed if the token is at a linebreak.</td>
              <td><a href="../../property_types.html#boolean">boolean</a></td>
              <td><code>false</code></td>
              <td>3.0</td>
            </tr>
            <tr>
              <td>tokens</td>
              <td>tokens to check</td>
              <td>subset of tokens
                <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#COMMA">
                    COMMA</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#SEMI">
                    SEMI</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#POST_INC">
                    POST_INC</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#POST_DEC">
                    POST_DEC</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#DOT">
                    DOT</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#GENERIC_START">
                    GENERIC_START</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#GENERIC_END">
                    GENERIC_END</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ELLIPSIS">
                    ELLIPSIS</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#LABELED_STAT">
                    LABELED_STAT</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#METHOD_REF">
                    METHOD_REF</a>
                  .
              </td>
              <td>
                <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#COMMA">
                    COMMA</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#SEMI">
                    SEMI</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#POST_INC">
                    POST_INC</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#POST_DEC">
                    POST_DEC</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ELLIPSIS">
                    ELLIPSIS</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#LABELED_STAT">
                    LABELED_STAT</a>
                  .
              </td>
              <td>3.0</td>
            </tr>
          </table>
        </div>
      </subsection>

      <subsection name="Examples" id="Examples">
        <p id="Example1-config">
          To configure the check:
        </p>
        <source>
&lt;module name=&quot;Checker&quot;&gt;
  &lt;module name=&quot;TreeWalker&quot;&gt;
    &lt;module name=&quot;NoWhitespaceBefore&quot;/&gt;
  &lt;/module&gt;
&lt;/module&gt;
        </source>
        <p id="Example1-code">Example:</p>
        <source>
class Example1 {
  int foo = 5;
  void example() {
    foo ++; // violation 'is preceded with whitespace'
    foo++;
    for (int i = 0 ; i &lt; 5; i++) {}  // violation '';' is preceded with whitespace'
    for (int i = 0; i &lt; 5; i++) {}
    int[][] array = { { 1, 2 }
                    , { 3, 4 } }; // violation '',' is preceded with whitespace'
    int[][] array2 = { { 1, 2 },
                       { 3, 4 } };
    Lists.charactersOf(&quot;foo&quot;).listIterator()
           .forEachRemaining(System.out::print)
           ; // violation '';' is preceded with whitespace'
    {
      label1 : // violation '':' is preceded with whitespace'
      for (int i = 0; i &lt; 10; i++) {}
    }

    {
      label2:
      while (foo &lt; 5) {}
    }
  }
}
        </source>
        <p id="Example2-config">
            To configure the check to allow linebreaks before default tokens:
        </p>
        <source>
&lt;module name=&quot;Checker&quot;&gt;
  &lt;module name=&quot;TreeWalker&quot;&gt;
    &lt;module name=&quot;NoWhitespaceBefore&quot;&gt;
      &lt;property name=&quot;allowLineBreaks&quot; value=&quot;true&quot;/&gt;
    &lt;/module&gt;
  &lt;/module&gt;
&lt;/module&gt;
        </source>
        <p id="Example2-code">Example:</p>
        <source>
class Example2 {
  int[][] array = { { 1, 2 }
                  , { 3, 4 } };
  int[][] array2 = { { 1, 2 },
                     { 3, 4 } };
  void ellipsisExample(String ...params) {};
  // violation above ''...' is preceded with whitespace'
  void ellipsisExample2(String
                          ...params) {
    Lists.charactersOf(&quot;foo&quot;)
         .listIterator()
         .forEachRemaining(System.out::print);
  };
}
        </source>
        <p id="Example3-config">
        To Configure the check to restrict the use of whitespace before METHOD_REF and DOT tokens:
        </p>
        <source>
&lt;module name=&quot;Checker&quot;&gt;
  &lt;module name=&quot;TreeWalker&quot;&gt;
    &lt;module name=&quot;NoWhitespaceBefore&quot;&gt;
      &lt;property name=&quot;tokens&quot; value=&quot;METHOD_REF, DOT&quot;/&gt;
    &lt;/module&gt;
  &lt;/module&gt;
&lt;/module&gt;
        </source>
        <p id="Example3-code">Example:</p>
        <source>
class Example3 {
  void example() {
    Lists.charactersOf(&quot;foo&quot;).listIterator()
         .forEachRemaining(System.out::print);
    // violation above ''.' is preceded with whitespace'
    Lists.charactersOf(&quot;foo&quot;).listIterator().forEachRemaining(System.out ::print);
    // violation above ''::' is preceded with whitespace'
    Lists.charactersOf(&quot;foo&quot;).listIterator().forEachRemaining(System.out::print);
  }
}
        </source>
        <p id="Example4-config">
           To configure the check to allow linebreak before METHOD_REF and DOT tokens:
        </p>
        <source>
&lt;module name=&quot;Checker&quot;&gt;
  &lt;module name=&quot;TreeWalker&quot;&gt;
    &lt;module name=&quot;NoWhitespaceBefore&quot;&gt;
      &lt;property name=&quot;tokens&quot; value=&quot;METHOD_REF, DOT&quot;/&gt;
      &lt;property name=&quot;allowLineBreaks&quot; value=&quot;true&quot;/&gt;
    &lt;/module&gt;
  &lt;/module&gt;
&lt;/module&gt;
        </source>
        <p id="Example4-code">Example:</p>
        <source>
class Example4 {
  void example() {
    Lists .charactersOf(&quot;foo&quot;) // violation ''.' is preceded with whitespace'
          .listIterator()
          .forEachRemaining(System.out ::print);
    // violation above ''::' is preceded with whitespace'
    Lists.charactersOf(&quot;foo&quot;)
         .listIterator()
         .forEachRemaining(System.out::print);
  }
}
        </source>
      </subsection>

      <subsection name="Example of Usage" id="Example_of_Usage">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%20path%3A**%2Fgoogle_checks.xml+repo%3Acheckstyle%2Fcheckstyle+NoWhitespaceBefore">
            Google Style</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%20path%3A**%2Fsun_checks.xml+repo%3Acheckstyle%2Fcheckstyle+NoWhitespaceBefore">
            Sun Style</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Aconfig%20path%3A**%2Fcheckstyle-checks.xml+repo%3Acheckstyle%2Fcheckstyle+NoWhitespaceBefore">
            Checkstyle Style</a>
          </li>
        </ul>
      </subsection>

      <subsection name="Violation Messages" id="Violation_Messages">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fwhitespace%20path%3A**%2Fmessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22ws.preceded%22">
              ws.preceded
            </a>
          </li>
        </ul>
        <p>
          All messages can be customized if the default message doesn't suit you.
          Please <a href="../../config.html#Custom_messages">see the documentation</a>
          to learn how to.
        </p>
      </subsection>

      <subsection name="Package" id="Package">
        <p>
          com.puppycrawl.tools.checkstyle.checks.whitespace
        </p>
      </subsection>

      <subsection name="Parent Module" id="Parent_Module">
        <p>
          <a href="../../config.html#TreeWalker">TreeWalker</a>
        </p>
      </subsection>
    </section>
  </body>
</document>
