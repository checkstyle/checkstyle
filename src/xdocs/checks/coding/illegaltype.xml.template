<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 https://maven.apache.org/xsd/xdoc-2.0.xsd">
  <head>
    <title>IllegalType</title>
  </head>
  <body>
    <section name="IllegalType">
      <p>Since Checkstyle 3.2</p>
      <subsection name="Description" id="Description">
        <p>
          Checks that particular classes or interfaces are never used.
        </p>

        <p>
          Rationale: Helps reduce coupling on concrete classes.
        </p>
        <p>
          For additional restriction of type usage see also:
          <a href="illegalinstantiation.html#IllegalInstantiation">IllegalInstantiation</a>,
          <a href="../imports/illegalimport.html#IllegalImport">IllegalImport</a>
        </p>
      </subsection>

      <subsection name="Properties" id="Properties">
        <div class="wrapper">
          <table>
            <tr>
              <th>name</th>
              <th>description</th>
              <th>type</th>
              <th>default value</th>
              <th>since</th>
            </tr>
            <tr>
              <td>ignoredMethodNames</td>
              <td>Specify methods that should not be checked.</td>
              <td><a href="../../property_types.html#String.5B.5D">String[]</a></td>
              <td><code>getEnvironment, getInitialContext</code></td>
              <td>3.2</td>
            </tr>
            <tr>
              <td>illegalAbstractClassNameFormat</td>
              <td>Specify RegExp for illegal abstract class names.</td>
              <td><a href="../../property_types.html#Pattern">Pattern</a></td>
              <td><code>"^(.*[.])?Abstract.*$"</code></td>
              <td>3.2</td>
            </tr>
            <tr>
              <td>illegalClassNames</td>
              <td>Specify classes that should not be used as types in variable
              declarations, return values or parameters.</td>
              <td><a href="../../property_types.html#String.5B.5D">String[]</a></td>
              <td><code>HashMap, HashSet, LinkedHashMap, LinkedHashSet, TreeMap, TreeSet,
                java.util.HashMap, java.util.HashSet, java.util.LinkedHashMap,
                java.util.LinkedHashSet, java.util.TreeMap, java.util.TreeSet</code></td>
              <td>3.2</td>
            </tr>
            <tr>
              <td>legalAbstractClassNames</td>
              <td>Define abstract classes that may be used as types. </td>
              <td><a href="../../property_types.html#String.5B.5D">String[]</a></td>
              <td><code>{}</code></td>
              <td>4.2</td>
            </tr>
            <tr>
              <td>memberModifiers</td>
              <td>
                Control whether to check only methods and fields with any of the specified
                modifiers.
                This property does not affect method calls nor method references nor
                record components.
              </td>
              <td>subset of tokens
                <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html">TokenTypes</a>
              </td>
              <td><code>{}</code></td>
              <td>6.3</td>
            </tr>
            <tr>
              <td>validateAbstractClassNames</td>
              <td>Control whether to validate abstract class names.</td>
              <td><a href="../../property_types.html#boolean">boolean</a></td>
              <td><code>false</code></td>
              <td>6.10</td>
            </tr>
            <tr>
              <td>tokens</td>
              <td>tokens to check</td>
              <td>
                subset of tokens
                <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_FIELD_DEF">
                  ANNOTATION_FIELD_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CLASS_DEF">
                  CLASS_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF">
                  INTERFACE_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#METHOD_CALL">
                  METHOD_CALL</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#METHOD_DEF">
                  METHOD_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#METHOD_REF">
                  METHOD_REF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#PARAMETER_DEF">
                  PARAMETER_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#VARIABLE_DEF">
                  VARIABLE_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#PATTERN_VARIABLE_DEF">
                  PATTERN_VARIABLE_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#RECORD_DEF">
                  RECORD_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#RECORD_COMPONENT_DEF">
                  RECORD_COMPONENT_DEF</a>
                  .
              </td>
              <td>
                <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_FIELD_DEF">
                  ANNOTATION_FIELD_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CLASS_DEF">
                  CLASS_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF">
                  INTERFACE_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#METHOD_CALL">
                  METHOD_CALL</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#METHOD_DEF">
                  METHOD_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#METHOD_REF">
                  METHOD_REF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#PARAMETER_DEF">
                  PARAMETER_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#VARIABLE_DEF">
                  VARIABLE_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#PATTERN_VARIABLE_DEF">
                  PATTERN_VARIABLE_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#RECORD_DEF">
                  RECORD_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#RECORD_COMPONENT_DEF">
                  RECORD_COMPONENT_DEF</a>
                  .
              </td>
              <td>3.2</td>
            </tr>
          </table>
        </div>
      </subsection>

      <subsection name="Notes" id="Notes">
        <p>
          It is possible to set illegal class names via short or
          <a href="https://docs.oracle.com/javase/specs/jls/se11/html/jls-6.html#jls-6.7">
          canonical</a> name.
          Specifying illegal type invokes analyzing imports and Check puts violations at
          corresponding declarations
          (of variables, methods or parameters). This helps to avoid ambiguous cases, e.g.:
          <code>java.awt.List</code> was set as illegal class name, then, code like:
        </p>
        <div class="wrapper">
          <pre>
import java.util.List;
...
List list; //No violation here
          </pre>
        </div>
        <p>
          will be ok.
        </p>
        <p>
          In most cases it's justified to put following classes to <b>illegalClassNames</b>:
        </p>
        <ul>
          <li>GregorianCalendar</li>
          <li>Hashtable</li>
          <li>ArrayList</li>
          <li>LinkedList</li>
          <li>Vector</li>
        </ul>
        <p>
          as methods that are differ from interface methods are rarely used, so in most cases user
          will benefit from checking for them.
        </p>
      </subsection>

      <subsection name="Examples" id="Examples">
        <p id="Example1-config">
            To configure the default check:
        </p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/checks/coding/illegaltype/Example1.txt"/>
          <param name="type" value="config"/>
        </macro>
        <p id="Example1-code">Example:</p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/checks/coding/illegaltype/Example1.txt"/>
          <param name="type" value="code"/>
        </macro>
        <p id="Example2-config">
          To configure the Check so that particular tokens are checked:
        </p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/checks/coding/illegaltype/Example2.txt"/>
          <param name="type" value="config"/>
        </macro>
        <p id="Example2-code">Example:</p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/checks/coding/illegaltype/Example2.txt"/>
          <param name="type" value="code"/>
        </macro>
        <p id="Example3-config">
          To configure the Check so that it ignores function() methods:
        </p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/checks/coding/illegaltype/Example3.txt"/>
          <param name="type" value="config"/>
        </macro>
        <p id="Example3-code">Example:</p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/checks/coding/illegaltype/Example3.txt"/>
          <param name="type" value="code"/>
        </macro>
        <p id="Example4-config">
          To configure the Check so that it validates abstract class names:
        </p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/checks/coding/illegaltype/Example4.txt"/>
          <param name="type" value="config"/>
        </macro>
        <p id="Example4-code">Example:</p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/checks/coding/illegaltype/Example4.txt"/>
          <param name="type" value="code"/>
        </macro>
        <p id="Example5-config">
          To configure the Check so that it verifies only public, protected or static
           methods and fields:
        </p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/checks/coding/illegaltype/Example5.txt"/>
          <param name="type" value="config"/>
        </macro>
        <p id="Example5-code">Example:</p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/checks/coding/illegaltype/Example5.txt"/>
          <param name="type" value="code"/>
        </macro>
        <p id="Example6-config">
          To configure the check so that it verifies usage of types Boolean and Foo:
        </p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/checks/coding/illegaltype/Example6.txt"/>
          <param name="type" value="config"/>
        </macro>

        <p id="Example6-code">Example:</p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/checks/coding/illegaltype/Example6.txt"/>
          <param name="type" value="code"/>
        </macro>
        <p id="Example7-config">
          To configure the check to target fields types only:
        </p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/checks/coding/illegaltype/Example7.txt"/>
          <param name="type" value="config"/>
        </macro>
        <p id="Example7-code">Example:</p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/checks/coding/illegaltype/Example7.txt"/>
          <param name="type" value="code"/>
        </macro>
      </subsection>

      <subsection name="Example of Usage" id="Example_of_Usage">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Aconfig%20path%3A**%2Fcheckstyle-checks.xml+repo%3Acheckstyle%2Fcheckstyle+IllegalType">
            Checkstyle Style</a>
          </li>
        </ul>
      </subsection>

      <subsection name="Violation Messages" id="Violation_Messages">
        <macro name="violation-messages">
          <param name="checkName" value="IllegalType"/>
        </macro>
        <p>
          All messages can be customized if the default message doesn't suit you.
          Please <a href="../../config.html#Custom_messages">see the documentation</a>
          to learn how to.
        </p>
      </subsection>

      <subsection name="Package" id="Package">
        <p>
          com.puppycrawl.tools.checkstyle.checks.coding
        </p>
      </subsection>

      <subsection name="Parent Module" id="Parent_Module">
        <macro name="parent-module">
          <param name="moduleName" value="IllegalType"/>
        </macro>
      </subsection>
    </section>
  </body>
</document>
