<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 https://maven.apache.org/xsd/xdoc-2.0.xsd">
  <head>
    <title>MissingJavadocMethod</title>
  </head>
  <body>
    <section name="MissingJavadocMethod">
      <p>Since Checkstyle 8.21</p>
      <subsection name="Description" id="Description">
        <p>
          Checks for missing Javadoc comments for a method or constructor.
          The scope to verify is specified using the <code>Scope</code> class and
          defaults to <code>Scope.PUBLIC</code>. To verify another
          scope, set property scope to a different
          <a href="../../property_types.html#Scope">scope</a>.
        </p>

        <p>
          Javadoc is not required on a method that is tagged with the
          <code>@Override</code> annotation. However, under
          Java 5 it is not possible to mark a method required for an
          interface (this was <i>corrected</i> under Java 6). Hence,
          Checkstyle supports using the convention of using a single
          <code>{@inheritDoc}</code> tag instead of all the
          other tags.
        </p>

        <p>
          For getters and setters for the property <code>allowMissingPropertyJavadoc</code>,
          the methods must match exactly the structures below.
        </p>
        <source>
public void setNumber(final int number)
{
    mNumber = number;
}

public int getNumber()
{
    return mNumber;
}

public boolean isSomething()
{
    return false;
}
        </source>
      </subsection>

      <subsection name="Properties" id="Properties">
        <div class="wrapper">
          <table>
            <tr>
              <th>name</th>
              <th>description</th>
              <th>type</th>
              <th>default value</th>
              <th>since</th>
            </tr>
            <tr>
              <td>minLineCount</td>
              <td>Control the minimal amount of lines in method to allow no documentation.</td>
              <td><a href="../../property_types.html#int">int</a></td>
              <td><code>-1</code></td>
              <td>8.21</td>
            </tr>
            <tr>
              <td>allowedAnnotations</td>
              <td>Configure annotations that allow missed documentation.</td>
              <td><a href="../../property_types.html#String.5B.5D">String[]</a></td>
              <td><code>Override</code></td>
              <td>8.21</td>
            </tr>
            <tr>
              <td>scope</td>
              <td>Specify the visibility scope where Javadoc comments are checked.</td>
              <td><a href="../../property_types.html#Scope">Scope</a></td>
              <td><code>public</code></td>
              <td>8.21</td>
            </tr>
            <tr>
              <td>excludeScope</td>
              <td>Specify the visibility scope where Javadoc comments are not checked.</td>
              <td><a href="../../property_types.html#Scope">Scope</a></td>
              <td><code>null</code></td>
              <td>8.21</td>
            </tr>
            <tr>
              <td>allowMissingPropertyJavadoc</td>
              <td>
                Control whether to allow missing Javadoc on accessor methods for
                properties (setters and getters).
              </td>
              <td><a href="../../property_types.html#boolean">boolean</a></td>
              <td><code>false</code></td>
              <td>8.21</td>
            </tr>
            <tr>
              <td>ignoreMethodNamesRegex</td>
              <td>ignore method whose names are matching specified regex.</td>
              <td><a href="../../property_types.html#Pattern">Pattern</a></td>
              <td><code>null</code></td>
              <td>8.21</td>
            </tr>
            <tr>
              <td>tokens</td>
              <td>tokens to check</td>

              <td>
                subset of tokens
                <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#METHOD_DEF">
                  METHOD_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CTOR_DEF">
                  CTOR_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_FIELD_DEF">
                  ANNOTATION_FIELD_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#COMPACT_CTOR_DEF">
                  COMPACT_CTOR_DEF</a>
                  .
              </td>
              <td>
                <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#METHOD_DEF">
                  METHOD_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CTOR_DEF">
                  CTOR_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_FIELD_DEF">
                  ANNOTATION_FIELD_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#COMPACT_CTOR_DEF">
                  COMPACT_CTOR_DEF</a>
                  .
              </td>
              <td>8.21</td>
            </tr>
          </table>
        </div>
      </subsection>

      <subsection name="Examples" id="Examples">
        <p>
          To configure the default check:
        </p>
        <source>
&lt;module name="MissingJavadocMethod"/&gt;
        </source>
        <p>
          Example:
        </p>
        <source>
public class Test {
  public Test() {} // violation, missing javadoc for constructor
  public void test() {} // violation, missing javadoc for method
  /**
   * Some description here.
   */
  public void test2() {} // OK

  @Override
  public String toString() { // OK
    return "Some string";
  }

  private void test1() {} // OK
  protected void test2() {} // OK
  void test3() {} // OK
}
        </source>

        <p>
          To configure the check for <code>private</code>
          scope:
        </p>
        <source>
&lt;module name="MissingJavadocMethod"&gt;
  &lt;property name="scope" value="private"/&gt;
&lt;/module&gt;
        </source>
        <p>Example:</p>
        <source>
public class Test {
  private void test1() {} // violation, the private method is missing javadoc
}
        </source>

        <p>
          To configure the check for methods which are in <code>private</code>,
          but not in <code>protected</code> scope:
        </p>
        <source>
&lt;module name="MissingJavadocMethod"&gt;
  &lt;property name="scope" value="private"/&gt;
  &lt;property name="excludeScope" value="protected"/&gt;
&lt;/module&gt;
        </source>
        <p>Example:</p>
        <source>
public class Test {
  private void test1() {} // violation, the private method is missing javadoc
  /**
   * Some description here
   */
  private void test1() {} // OK
  protected void test2() {} // OK
}
        </source>

        <p>
          To configure the check for ignoring methods named <code>foo(),foo1(),foo2()</code>, etc.:
        </p>
        <source>
&lt;module name="MissingJavadocMethod"&gt;
  &lt;property name="ignoreMethodNamesRegex" value="^foo.*$"/&gt;
&lt;/module&gt;
        </source>
        <p>Example:</p>
        <source>
public class Test {
  public void test1() {} // violation, method is missing javadoc
  public void foo() {} // OK
  public void foobar() {} // OK
}
        </source>

        <p>
          To configure the check for ignoring missing javadoc for accessor methods:
        </p>
        <source>
&lt;module name="MissingJavadocMethod"&gt;
  &lt;property name="allowMissingPropertyJavadoc" value="true"/&gt;
&lt;/module&gt;
        </source>
        <p>Example:</p>
        <source>
public class Test {
  private String text;

  public void test() {} // violation, method is missing javadoc
  public String getText() { return text; } // OK
  public void setText(String text) { this.text = text; } // OK
}
        </source>

        <p>
          To configure the check with annotations that allow missed documentation:
        </p>
        <source>
&lt;module name="MissingJavadocMethod"&gt;
  &lt;property name="allowedAnnotations" value="Override,Deprecated"/&gt;
&lt;/module&gt;
        </source>
        <p>Example:</p>
        <source>
public class Test {
  public void test() {} // violation, method is missing javadoc
  @Override
  public void test1() {} // OK
  @Deprecated
  public void test2() {} // OK
  @SuppressWarnings
  public void test3() {} // violation, method is missing javadoc
  /**
   * Some description here.
   */
  @SuppressWarnings
  public void test4() {} // OK
}
        </source>
      </subsection>

      <subsection name="Example of Usage" id="Example_of_Usage">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%20path%3A**%2Fgoogle_checks.xml+repo%3Acheckstyle%2Fcheckstyle+MissingJavadocMethod">
            Google Style</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%20path%3A**%2Fsun_checks.xml+repo%3Acheckstyle%2Fcheckstyle+MissingJavadocMethod">
            Sun Style</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Aconfig%20path%3A**%2Fcheckstyle-checks.xml+repo%3Acheckstyle%2Fcheckstyle+MissingJavadocMethod">
            Checkstyle Style</a>
          </li>
        </ul>
      </subsection>

      <subsection name="Violation Messages" id="Violation_Messages">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc%20path%3A**%2Fmessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.missing%22">
            javadoc.missing</a>
          </li>
        </ul>
        <p>
          All messages can be customized if the default message doesn't suit you.
          Please <a href="../../config.html#Custom_messages">see the documentation</a>
          to learn how to.
        </p>
      </subsection>

      <subsection name="Package" id="Package">
        <p>
          com.puppycrawl.tools.checkstyle.checks.javadoc
        </p>
      </subsection>

      <subsection name="Parent Module" id="Parent_Module">
        <p>
          <a href="../../config.html#TreeWalker">TreeWalker</a>
        </p>
      </subsection>
    </section>
  </body>
</document>
