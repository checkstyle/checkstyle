<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 https://maven.apache.org/xsd/xdoc-2.0.xsd">
  <head>
    <title>RegexpOnFilename</title>
  </head>
  <body>
    <section name="RegexpOnFilename">
      <p>Since Checkstyle 6.15</p>
      <subsection name="Description" id="Description">
        <p>
          Checks that a specified pattern matches based on file and/or folder path.
          It can also be used to verify files match specific naming
          patterns not covered by other checks (Ex: properties, xml, etc.).
        </p>
        <p>
          When customizing the check, the properties are applied in a specific order.
          The fileExtensions property first picks only files that match any of the
          specific extensions supplied.
          Once files are matched against the fileExtensions, the match property is then
          used in conjunction with the patterns to determine if the check is looking
          for a match or mismatch on those files. If the fileNamePattern is
          supplied, the matching is only applied to the fileNamePattern and not the
          folderPattern. If no fileNamePattern is supplied, then matching is applied
          to the folderPattern only and will result in all files in a folder to be
          reported on violations. If no folderPattern is supplied, then all folders
          that checkstyle finds are examined for violations.
          The ignoreFileNameExtensions property drops the file extension and applies
          the fileNamePattern only to the rest of file name. For example, if the file is
          named 'test.java' and this property is turned on, the pattern is only applied
          to 'test'.
        </p>
        <p>
          If this check is configured with no properties, then the default behavior
          of this check is to report file names with spaces in them.
          When at least one pattern property is supplied, the entire check is under
          the user's control to allow them to fully customize the behavior.
        </p>
        <p>
          It is recommended that if you create your own pattern, to also
          specify a custom violation message. This allows the violation message printed
          to be clear what the violation is, especially if multiple RegexpOnFilename
          checks are used.
          Argument 0 for the message populates the check's folderPattern.
          Argument 1 for the message populates the check's fileNamePattern.
          The file name is not passed as an argument since it is part of CheckStyle's
          default violation messages.
        </p>
      </subsection>

      <subsection name="Properties" id="Properties">
        <div class="wrapper">
          <macro name="properties">
            <param name="modulePath"
                   value="src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpOnFilenameCheck.java"/>
          </macro>
        </div>
      </subsection>

      <subsection name="Examples" id="Examples">
        <p id="Example1-config">
          To configure the check to report file names that contain a space:
        </p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/checks/regexp/regexponfilename/Example1.txt"/>
          <param name="type" value="config"/>
        </macro>
        <p id="Example1-code">Example:</p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/checks/regexp/regexponfilename/Example1.txt"/>
          <param name="type" value="code"/>
        </macro>
        <p id="Example2-config">
          To configure the check to forbid 'gif' files in folders:
        </p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/checks/regexp/regexponfilename/Example2.txt"/>
          <param name="type" value="config"/>
        </macro>
        <p id="Example2-code">Example:</p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/checks/regexp/regexponfilename/Example2.txt"/>
          <param name="type" value="code"/>
        </macro>
        <p id="Example3-config">
          To configure the check to forbid 'md' files except 'README.md file' in folders,
          with custom message:
        </p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/checks/regexp/regexponfilename/Example3.txt"/>
          <param name="type" value="config"/>
        </macro>
        <p id="Example3-code">Example:</p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/checks/regexp/regexponfilename/Example3.txt"/>
          <param name="type" value="code"/>
        </macro>
        <p id="Example4-config">
          To configure the check to only allow property and xml files to be located
          in the resource folder:
        </p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/checks/regexp/regexponfilename/Example4.txt"/>
          <param name="type" value="config"/>
        </macro>
        <p id="Example4-code">Example:</p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/checks/regexp/regexponfilename/Example4.txt"/>
          <param name="type" value="code"/>
        </macro>
        <p id="Example5-config">
          To configure the check to only allow Java and XML files in your folders use the below.
        </p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/checks/regexp/regexponfilename/Example5.txt"/>
          <param name="type" value="config"/>
        </macro>
        <p id="Example5-code">Example:</p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/checks/regexp/regexponfilename/Example5.txt"/>
          <param name="type" value="code"/>
        </macro>
        <p id="Example6-config">
          To configure the check to only allow Java and XML files only in your source folder
          and ignore any other folders:
        </p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/checks/regexp/regexponfilename/Example6.txt"/>
          <param name="type" value="config"/>
        </macro>
        <p id="Example6-code">Example:</p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/checks/regexp/regexponfilename/Example6.txt"/>
          <param name="type" value="code"/>
        </macro>
        <p>
          <b>Note:</b> 'folderPattern' must be specified if checkstyle is analyzing more than
          the normal source folder, like the 'bin' folder where class files can be located.
        </p>
        <p id="Example7-config">
          To configure the check to only allow file names to be camel case:
        </p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/checks/regexp/regexponfilename/Example7.txt"/>
          <param name="type" value="config"/>
        </macro>
        <p id="Example7-code">Example:</p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/checks/regexp/regexponfilename/Example7.txt"/>
          <param name="type" value="code"/>
        </macro>
      </subsection>

      <subsection name="Example of Usage" id="Example_of_Usage">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Aconfig%20path%3A**%2Fcheckstyle-checks.xml+repo%3Acheckstyle%2Fcheckstyle+RegexpOnFilename">
            Checkstyle Style</a>
          </li>
        </ul>
      </subsection>

      <subsection name="Violation Messages" id="Violation_Messages">
        <macro name="violation-messages">
          <param name="checkName" value="RegexpOnFilename"/>
        </macro>
        <p>
          All messages can be customized if the default message doesn't suit you.
          Please <a href="../../config.html#Custom_messages">see the documentation</a>
          to learn how to.
        </p>
      </subsection>

      <subsection name="Package" id="Package">
        <p>
          com.puppycrawl.tools.checkstyle.checks.regexp
        </p>
      </subsection>

      <subsection name="Parent Module" id="Parent_Module">
        <macro name="parent-module">
          <param name="moduleName" value="RegexpOnFilename"/>
        </macro>
      </subsection>
    </section>
  </body>
</document>
