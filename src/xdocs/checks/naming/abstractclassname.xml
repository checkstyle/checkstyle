<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 https://maven.apache.org/xsd/xdoc-2.0.xsd">
  <head>
    <title>AbstractClassName</title>
  </head>
  <body>
    <section name="AbstractClassName">
      <p>Since Checkstyle 3.2</p>
      <subsection name="Description" id="Description">
        <p>
          Ensures that the names of abstract classes conforming to some pattern and
          check that <code>abstract</code> modifier exists.
        </p>
        <p>
          Rationale: Abstract classes are convenience base class implementations of
          interfaces. For this reason, it should be made obvious that a given class
          is abstract by prefacing the class name with 'Abstract'.
        </p>
      </subsection>

      <subsection name="Properties" id="Properties">
        <div class="wrapper">
          <table>
            <tr>
              <th>name</th>
              <th>description</th>
              <th>type</th>
              <th>default value</th>
              <th>since</th>
            </tr>
            <tr>
              <td>format</td>
              <td>Specify valid identifiers.</td>
              <td><a href="../../property_types.html#Pattern">Pattern</a></td>
              <td><code>"^Abstract.+$"</code></td>
              <td>3.2</td>
            </tr>
            <tr>
              <td>ignoreModifier</td>
              <td>
                Control whether to ignore checking for the
                <code>abstract</code> modifier on classes that match the
                name.
              </td>
              <td><a href="../../property_types.html#boolean">boolean</a></td>
              <td><code>false</code></td>
              <td>5.3</td>
            </tr>
            <tr>
              <td>ignoreName</td>
              <td>
                Control whether to ignore checking the name. Realistically
                only useful if using the check to identify that match name
                and do not have the <code>abstract</code> modifier.
              </td>
              <td><a href="../../property_types.html#boolean">boolean</a></td>
              <td><code>false</code></td>
              <td>5.3</td>
            </tr>
          </table>
        </div>
      </subsection>

      <subsection name="Examples" id="Examples">
        <p>
          To configure the check:
        </p>
        <source>
&lt;module name="AbstractClassName"/&gt;
        </source>
        <p>Example:</p>
        <source>
class Example1 {
  abstract class AbstractFirst {}
  abstract class Second {} // violation 'must match pattern '\^Abstract\.\+\$''
  class AbstractThird {} // violation 'must be declared as 'abstract''
  class Fourth {}
  abstract class GeneratorFifth {} // violation 'must match pattern '\^Abstract\.\+\$''
  class GeneratorSixth {}
}
        </source>
        <p>
          To configure the check so that it check name
          but ignore <code>abstract</code> modifier:
        </p>
        <source>
&lt;module name="AbstractClassName"&gt;
  &lt;property name="ignoreModifier" value="true"/&gt;
&lt;/module&gt;
        </source>
        <p>Example:</p>
        <source>
class Example2 {
  abstract class AbstractFirst {}
  abstract class Second {} // violation 'must match pattern '\^Abstract\.\+\$''
  class AbstractThird {}
  class Fourth {}
  abstract class GeneratorFifth {} // violation 'must match pattern '\^Abstract\.\+\$''
  class GeneratorSixth {}
}
        </source>
        <p>
            To configure the check to ignore name
            validation when class declared as 'abstract'
        </p>
        <source>
&lt;module name="AbstractClassName"&gt;
  &lt;property name="ignoreName" value="true"/&gt;
&lt;/module&gt;
        </source>
        <p>Example:</p>
        <source>
class Example3 {
  abstract class AbstractFirst {}
  abstract class Second {}
  class AbstractThird {} // violation 'must be declared as 'abstract''
  class Fourth {}
  abstract class GeneratorFifth {}
  class GeneratorSixth {}
}
        </source>
        <p>
          To configure the check
          with <code>format</code>:
        </p>
        <source>
&lt;module name="AbstractClassName"&gt;
  &lt;property name="format" value="^Generator.+$"/&gt;
&lt;/module&gt;
        </source>
        <p>Example:</p>
        <source>
class Example4 {
  abstract class AbstractFirst {} // violation 'must match pattern '\^Generator\.\+\$''
  abstract class Second {} // violation 'must match pattern '\^Generator\.\+\$''
  class AbstractThird {}
  class Fourth {}
  abstract class GeneratorFifth {}
  class GeneratorSixth {} // violation 'must be declared as 'abstract''
}
        </source>
      </subsection>

      <subsection name="Example of Usage" id="Example_of_Usage">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Aconfig%20path%3A**%2Fcheckstyle-checks.xml+repo%3Acheckstyle%2Fcheckstyle+AbstractClassName">
            Checkstyle Style</a>
          </li>
        </ul>
      </subsection>

      <subsection name="Violation Messages" id="Violation_Messages">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fnaming%20path%3A**%2Fmessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22illegal.abstract.class.name%22">
            illegal.abstract.class.name</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fnaming%20path%3A**%2Fmessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22no.abstract.class.modifier%22">
            no.abstract.class.modifier</a>
          </li>
        </ul>
        <p>
          All messages can be customized if the default message doesn't suit you.
          Please <a href="../../config.html#Custom_messages">see the documentation</a>
          to learn how to.
        </p>
      </subsection>

      <subsection name="Package" id="Package">
        <p> com.puppycrawl.tools.checkstyle.checks.naming </p>
      </subsection>

      <subsection name="Parent Module" id="Parent_Module">
        <p> <a href="../../config.html#TreeWalker">TreeWalker</a> </p>
      </subsection>
    </section>
  </body>
</document>
