<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 https://maven.apache.org/xsd/xdoc-2.0.xsd">
  <head>
    <title>MissingOverride</title>
  </head>
  <body>
    <section xmlns="http://maven.apache.org/XDOC/2.0"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="MissingOverride">
      <p>Since Checkstyle 5.0</p>
      <subsection name="Description" id="Description">
        <p>
          Verifies that the <code>@Override</code> annotation is present
          when the <code>@inheritDoc</code> javadoc tag is present.
        </p>
        <p>
          Rationale: The @Override annotation helps
          compiler tools ensure that an override is actually occurring.  It is
          quite easy to accidentally overload a method or hide a static method
          and using the @Override annotation points out these problems.
        </p>
        <p>
          This check will log a violation if using the @inheritDoc tag on a method that
          is not valid (ex: private, or static method).
        </p>
        <p>
          There is a slight difference between the @Override annotation in Java 5 versus
          Java 6 and above. In Java 5, any method overridden from an interface cannot
          be annotated with @Override. In Java 6 this behavior is allowed.
        </p>
        <p>
          As a result of the aforementioned difference between Java 5 and Java 6, a
          property called <code>javaFiveCompatibility</code> is available. This
          property will only check classes, interfaces, etc. that do not contain the
          extends or implements keyword or are not anonymous classes. This means it
          only checks methods overridden from <code>java.lang.Object</code>.
          <b>Java 5 Compatibility mode severely limits this check. It is recommended to
          only use it on Java 5 source.</b>
        </p>

      </subsection>
      <subsection name="Properties" id="Properties">
        <div class="wrapper">
          <table>
            <tr>
              <th>name</th>
              <th>description</th>
              <th>type</th>
              <th>default value</th>
              <th>since</th>
            </tr>
            <tr>
              <td>javaFiveCompatibility</td>
              <td>Enable java 5 compatibility mode.</td>
              <td><a href="../../property_types.html#boolean">boolean</a></td>
              <td><code>false</code></td>
              <td>5.0</td>
            </tr>
          </table>
        </div>
      </subsection>
      <subsection name="Examples" id="Examples">
        <p id="Example1-config"> To configure the check:</p>
        <source>
&lt;module name=&quot;Checker&quot;&gt;
  &lt;module name=&quot;TreeWalker&quot;&gt;
    &lt;module name=&quot;MissingOverride&quot;/&gt;
  &lt;/module&gt;
&lt;/module&gt;
        </source>
        <p id="Example1-code">Example:</p>
        <source>
class Example1 extends ParentClass1 {

  /** {@inheritDoc} */
  @Override
  public void test1() { // OK

  }

  /** {@inheritDoc} */
  public void test2() { // violation, 'include @java.lang.Override'

  }

  /** {@inheritDoc} */
  // violation below '{@inheritDoc} tag is not valid at this location.'
  private void test3() {

  }

  /** {@inheritDoc} */
  // violation below '{@inheritDoc} tag is not valid at this location.'
  public static void test4() {

  }
}
        </source>
        <p id="Example2-config">
          To configure the check for the <code>javaFiveCompatibility</code>
          mode:
        </p>
        <source>
&lt;module name=&quot;Checker&quot;&gt;
  &lt;module name=&quot;TreeWalker&quot;&gt;
    &lt;module name=&quot;MissingOverride&quot;&gt;
      &lt;property name=&quot;javaFiveCompatibility&quot;
                value=&quot;true&quot;/&gt;
    &lt;/module&gt;
  &lt;/module&gt;
&lt;/module&gt;
        </source>
        <p id="Example2-code">Example:</p>
        <source>
class Example2 {
  /** {@inheritDoc} */
  public boolean equals(Object o) { // violation, 'include @java.lang.Override'
    return o == this;
  }
}

interface B {

  /** {@inheritDoc} */
  void test(); // violation, 'include @java.lang.Override'
}

class C extends ParentClass2 {
  /** {@inheritDoc} */
  public void test() { // OK, is ignored because class extends other class

  }
}

class D implements B {
  /** {@inheritDoc} */
  public void test() { // OK, is ignored because class implements interface
  }
}

class E {
  Runnable r = new Runnable() {

    /** {@inheritDoc} */
    public void run() { // OK, is ignored because class is anonymous class
    }
  };
}
        </source>
      </subsection>

      <subsection name="Example of Usage" id="Example_of_Usage">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Aconfig%20path%3A**%2Fcheckstyle-checks.xml+repo%3Acheckstyle%2Fcheckstyle+MissingOverride">
            Checkstyle Style</a>
          </li>
        </ul>
      </subsection>

      <subsection name="Violation Messages" id="Violation_Messages">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fannotation%20path%3A**%2Fmessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22annotation.missing.override%22">
              annotation.missing.override
            </a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fannotation%20path%3A**%2Fmessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22tag.not.valid.on%22">
              tag.not.valid.on
            </a>
          </li>
        </ul>
        <p>
          All messages can be customized if the default message doesn't suit you.
          Please <a href="../../config.html#Custom_messages">
          see the documentation</a> to learn how to.
        </p>
      </subsection>

      <subsection name="Package" id="Package">
        <p> com.puppycrawl.tools.checkstyle.checks.annotation </p>
      </subsection>

      <subsection name="Parent Module" id="Parent_Module">
        <p>
          <a href="../../config.html#TreeWalker">TreeWalker</a>
        </p>
      </subsection>
    </section>
  </body>
</document>
