<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 https://maven.apache.org/xsd/xdoc-2.0.xsd">
  <head>
    <title>SuppressWarningsHolder</title>
  </head>
  <body>
    <section xmlns="http://maven.apache.org/XDOC/2.0"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="SuppressWarningsHolder">
      <p>Since Checkstyle 5.7</p>
      <subsection name="Description" id="Description">
        <p>
          Maintains a set of check suppressions from
          <code>@SuppressWarnings</code> annotations. It allows to
          prevent Checkstyle from reporting violations from parts of code
          that were annotated with <code>@SuppressWarnings</code> and
          using name of the check to be excluded. It is possible to suppress
          all the checkstyle warnings with the argument
          <code>&quot;all&quot;</code>.
          You can also use a <code>checkstyle:</code> prefix to prevent compiler from
          processing these annotations. You can also define
          aliases for check names that need to be suppressed.
        </p>
      </subsection>

      <subsection name="Properties" id="Properties">
        <div class="wrapper">
          <table>
            <tr>
              <th>name</th>
              <th>description</th>
              <th>type</th>
              <th>default value</th>
              <th>since</th>
            </tr>
            <tr>
              <td>aliasList</td>
              <td>Specify aliases for check names that can be used in code within <code>SuppressWarnings</code>.</td>
              <td><a href="../../property_types.html#String.5B.5D">String[]</a></td>
              <td><code>{}</code></td>
              <td>5.7</td>
            </tr>
          </table>
        </div>
      </subsection>

      <subsection name="Examples" id="Examples">
        <p id="Example1-config">To use default module configuration:</p>
        <source>
&lt;module name=&quot;Checker&quot;&gt;
  &lt;module name=&quot;TreeWalker&quot;&gt;
  &lt;module name=&quot;MemberName&quot;/&gt;
  &lt;module name=&quot;ConstantName&quot;/&gt;
  &lt;module name=&quot;ParameterNumber&quot;&gt;
    &lt;property name=&quot;id&quot; value=&quot;ParamNumberId&quot;/&gt;
  &lt;/module&gt;
  &lt;module name=
    &quot;NoWhitespaceAfter&quot;/&gt;
  &lt;module name=&quot;SuppressWarningsHolder&quot;/&gt;
  &lt;/module&gt;
  &lt;module name=&quot;SuppressWarningsFilter&quot;/&gt;
&lt;/module&gt;
        </source>
        <p id="Example1-code">Example:</p>
        <source>
class Example1 {
  private int K; // violation, 'Name 'K' must match pattern'
  @SuppressWarnings({&quot;membername&quot;})
  private int J; // violation suppressed

  private static final int i = 0; // violation, 'Name 'i' must match pattern'
  @SuppressWarnings(&quot;checkstyle:constantname&quot;)
  private static final int m = 0; // violation suppressed

  @SuppressWarnings(&quot;ParamNumberId&quot;)
    public void needsLotsOfParameters1 (int a, // violation suppressed
     int b, int c, int d, int e, int f, int g, int h) {
     // ...
  }

  private int [] ARR; // violation ''int' is followed by whitespace'
  // violation above, 'Name 'ARR' must match pattern'
  @SuppressWarnings(&quot;all&quot;)
  private int [] ARRAY; // violations suppressed
}
        </source>
        <p>The general rule is that the argument of the <code>@SuppressWarnings</code> will be
          matched against class name of the check in any letter case. Adding <code>check</code>
          suffix is also accepted.
        </p>
        <p id="Example2-config">
          If <code>aliasList</code> property was provided you can use your own names e.g. below
          code will work if there was provided a <code>ParameterNumberCheck=paramnum</code> in
          the <code>aliasList</code>:
        </p>
        <source>
&lt;module name=&quot;Checker&quot;&gt;
  &lt;module name=&quot;TreeWalker&quot;&gt;
  &lt;module name=&quot;ParameterNumber&quot;/&gt;
  &lt;module name=&quot;SuppressWarningsHolder&quot;&gt;
    &lt;property name=&quot;aliasList&quot; value=
      &quot;com.puppycrawl.tools.checkstyle.checks.sizes.ParameterNumberCheck=paramnum&quot;/&gt;
  &lt;/module&gt;
  &lt;/module&gt;
  &lt;module name=&quot;SuppressWarningsFilter&quot;/&gt;
&lt;/module&gt;
        </source>
        <p id="Example2-code">Example:</p>
        <source>
class Example2 {
  // violation below, 'More than 7 parameters (found 8)'
  public void needsLotsOfParameters (int a,
    int b, int c, int d, int e, int f, int g, int h) {
    // ...
  }

  @SuppressWarnings(&quot;paramnum&quot;)
  public void needsLotsOfParameters1 (int a, // violation suppressed
    int b, int c, int d, int e, int f, int g, int h) {
    // ...
  }

}
        </source>

      </subsection>

      <subsection name="Example of Usage" id="Example_of_Usage">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Aconfig%20path%3A**%2Fcheckstyle-checks.xml+repo%3Acheckstyle%2Fcheckstyle+SuppressWarningsHolder">
            Checkstyle Style</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%20path%3A**%2Fgoogle_checks.xml+repo%3Acheckstyle%2Fcheckstyle+SuppressWarningsHolder">
            Google Style</a>
          </li>
        </ul>
      </subsection>

      <subsection name="Package" id="Package">
        <p> com.puppycrawl.tools.checkstyle.checks </p>
      </subsection>

      <subsection name="Parent Module" id="Parent_Module">
        <p>
          <a href="../../config.html#TreeWalker">TreeWalker</a>
        </p>
      </subsection>

    </section>
  </body>
</document>
