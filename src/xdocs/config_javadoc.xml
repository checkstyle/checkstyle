<?xml version="1.0" encoding="UTF-8"?>

<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">

  <head>
    <title>Javadoc Comments</title>
    <script type="text/javascript"
            src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"/>
    <script type="text/javascript" src="js/anchors.js"/>
    <script type="text/javascript" src="js/google-analytics.js"/>
    <link rel="icon" href="images/favicon.png" type="image/x-icon" />
    <link rel="shortcut icon" href="images/favicon.ico" type="image/ico" />
  </head>

  <body>
    <section name="Content">
      <macro name="toc">
        <param name="fromDepth" value="1"/>
        <param name="toDepth" value="1"/>
      </macro>
    </section>

    <section name="AtclauseOrder">
      <p>Since Checkstyle 6.0</p>
      <subsection name="Description" id="AtclauseOrder_Description">
        <p>
          Checks the order of
          <a href="https://docs.oracle.com/javase/8/docs/technotes/tools/windows/javadoc.html#CHDBEFIF">
            javadoc block-tags or javadoc tags</a>.
        </p>
        <p>
          Note: Google used the term "at-clauses" for block tags in their guide till 2017-02-28.
        </p>
      </subsection>

      <subsection name="Properties" id="AtclauseOrder_Properties">
        <div class="wrapper">
          <table>
            <tr>
              <th>name</th>
              <th>description</th>
              <th>type</th>
              <th>default value</th>
              <th>since</th>
            </tr>
            <tr>
              <td>violateExecutionOnNonTightHtml</td>
              <td>
                Control when to print violations if the Javadoc being examined by this check
                violates the tight html rules defined at
                <a href="writingjavadocchecks.html#Tight-HTML_rules">Tight-HTML Rules</a>.</td>
              <td><a href="property_types.html#boolean">Boolean</a></td>
              <td><code>false</code></td>
              <td>8.3</td>
            </tr>
            <tr>
              <td>target</td>
              <td>Specify the list of targets to check at-clauses.</td>
              <td>subset of tokens
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html">TokenTypes</a>
              </td>
              <td>
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CLASS_DEF">
                  CLASS_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF">
                  INTERFACE_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_DEF">
                  ENUM_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#METHOD_DEF">
                  METHOD_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CTOR_DEF">
                  CTOR_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#VARIABLE_DEF">
                  VARIABLE_DEF</a>
              </td>
              <td>6.0</td>
            </tr>
            <tr>
              <td>tagOrder</td>
              <td>Specify the order by tags.</td>
              <td><a href="property_types.html#stringSet">String Set</a></td>
              <td><code>&#64;author, &#64;deprecated, &#64;exception, &#64;param,
                &#64;return, &#64;see, &#64;serial, &#64;serialData, &#64;serialField,
                &#64;since, &#64;throws, &#64;version</code></td>
              <td>6.0</td>
            </tr>
          </table>
        </div>
      </subsection>

      <subsection name="Examples" id="AtclauseOrder_Examples">
        <p>
          Default configuration
        </p>
        <source>
&lt;module name=&quot;AtclauseOrder&quot;&gt;
  &lt;property name=&quot;tagOrder&quot; value=&quot;&#64;author, &#64;version, &#64;param,
  &#64;return, &#64;throws, &#64;exception, &#64;see, &#64;since, &#64;serial,
  &#64;serialField, &#64;serialData, &#64;deprecated&quot;/&gt;
  &lt;property name=&quot;target&quot; value=&quot;CLASS_DEF, INTERFACE_DEF, ENUM_DEF,
  METHOD_DEF, CTOR_DEF, VARIABLE_DEF&quot;/&gt;
&lt;/module>
        </source>
      </subsection>

      <subsection name="Example of Usage" id="AtclauseOrder_Example_of_Usage">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources+filename%3Agoogle_checks.xml+repo%3Acheckstyle%2Fcheckstyle+AtclauseOrder">
            Google Style</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Aconfig+filename%3Acheckstyle_checks.xml+repo%3Acheckstyle%2Fcheckstyle+AtclauseOrder">
            Checkstyle Style</a>
          </li>
        </ul>
      </subsection>

      <subsection name="Violation Messages" id="AtclauseOrder_Violation_Messages">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22at.clause.order%22">
            at.clause.order</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.missed.html.close%22">
            javadoc.missed.html.close</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.parse.rule.error%22">
            javadoc.parse.rule.error</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.wrong.singleton.html.tag%22">
            javadoc.wrong.singleton.html.tag</a>
          </li>
        </ul>
        <p>
          All messages can be customized if the default message doesn't suit you.
          Please <a href="config.html#Custom_messages">see the documentation</a> to learn how to.
        </p>
      </subsection>

      <subsection name="Package" id="AtclauseOrder_Package">
        <p>
          com.puppycrawl.tools.checkstyle.checks.javadoc
        </p>
      </subsection>

      <subsection name="Parent Module" id="AtclauseOrder_Parent_Module">
        <p>
          <a href="config.html#TreeWalker">TreeWalker</a>
        </p>
      </subsection>
    </section>

    <section name="InvalidJavadocPosition">
      <p>Since Checkstyle 8.23</p>
      <subsection name="Description" id="InvalidJavadocPosition_Description">
        <p>
          Checks that Javadocs are located at the correct position.
          As specified at <a href="https://docs.oracle.com/en/java/javase/11/docs/specs/doc-comment-spec.html">
          Documentation Comment Specification for the Standard Doclet</a>,
          Javadocs are recognized only when placed immediately before module, package, class,
          interface, constructor, method, or field declarations. Any other position, like
          in the body of a method, will be ignored by the javadoc tool and is considered
          invalid by this check.
        </p>
      </subsection>

      <subsection name="Examples" id="InvalidJavadocPosition_Examples">
        <p>
          To configure the check:
        </p>
        <source>
&lt;module name=&quot;InvalidJavadocPosition&quot;/&gt;
        </source>
        <p>
          The following code produces a violation because Javadocs should be before all
          annotations of the Javadoc's target:
        </p>
        <source>
@SuppressWarnings("serial")
/**
 * This comment looks like javadoc but it at an invalid location.
 * Therefore, the text will not get into TestClass.html and the check will produce a violation.
 */
public class TestClass {
}
        </source>
      </subsection>

      <subsection name="Example of Usage" id="InvalidJavadocPosition_Example_of_Usage">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources+filename%3Agoogle_checks.xml+repo%3Acheckstyle%2Fcheckstyle+InvalidJavadocPosition">
            Google Style</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources+filename%3Asun_checks.xml+repo%3Acheckstyle%2Fcheckstyle+InvalidJavadocPosition">
            Sun Style</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Aconfig+filename%3Acheckstyle_checks.xml+repo%3Acheckstyle%2Fcheckstyle+InvalidJavadocPosition">
            Checkstyle Style</a>
          </li>
        </ul>
      </subsection>

      <subsection name="Violation Messages" id="InvalidJavadocPosition_Violation_Messages">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22invalid.position%22">
            invalid.position</a>
          </li>
        </ul>
        <p>
          All messages can be customized if the default message doesn't suit you.
          Please <a href="config.html#Custom_messages">see the documentation</a> to learn how to.
        </p>
      </subsection>

      <subsection name="Package" id="InvalidJavadocPosition_Package">
        <p>
          com.puppycrawl.tools.checkstyle.checks.javadoc
        </p>
      </subsection>

      <subsection name="Parent Module" id="InvalidJavadocPosition_Parent_Module">
        <p>
          <a href="config.html#TreeWalker">TreeWalker</a>
        </p>
      </subsection>
    </section>

    <section name="JavadocBlockTagLocation">
      <p>Since Checkstyle 8.24</p>
      <subsection name="Description" id="JavadocBlockTagLocation_Description">
        <p>
          Checks that a
          <a href="https://docs.oracle.com/en/java/javase/11/docs/specs/doc-comment-spec.html#block-tags">
          javadoc block tag</a> appears only at the beginning of a line, ignoring
          leading asterisks and white space. A block tag is a token that starts
          with <code>@</code> symbol and is preceded by a whitespace. This check
          ignores block tags in comments and inside inline tags {&#64;code } and
          {&#64;literal }.
        </p>
        <p>
          Rationale: according to
          <a href="https://docs.oracle.com/en/java/javase/11/docs/specs/doc-comment-spec.html#block-tags">
          the specification</a> all javadoc block tags should be placed at the
          beginning of a line. Tags that are not placed at the beginning are treated
          as plain text. To recognize intentional tag placement to text area
          it is better to escape the <code>@</code> symbol, and all non-escaped
          tags should be located at the beginning of the line. See NOTE section
          for details on how to escape.
        </p>
      </subsection>
      <subsection name="Notes"  id="JavadocBlockTagLocation_Notes">
        <p>
          To place a tag explicitly as text, escape the <code>@</code> symbol
          with HTML entity &amp;#64; or place it inside <code>{@code }</code>,
          for example:
        </p>
        <source>
/**
 * &amp;#64;serial literal in {&#64;code &#64;serial} Javadoc tag.
 */
        </source>
      </subsection>
      <subsection name="Properties" id="JavadocBlockTagLocation_Properties">
        <div class="wrapper">
          <table>
            <tr>
              <th>name</th>
              <th>description</th>
              <th>type</th>
              <th>default value</th>
              <th>since</th>
            </tr>
            <tr>
              <td>tags</td>
              <td>Specify the javadoc tags to process.</td>
              <td><a href="property_types.html#stringSet">String Set</a></td>
              <td><code>author, deprecated, exception, hidden, param, provides, return,
                see, serial, serialData, serialField, since, throws, uses, version</code></td>
              <td>8.24</td>
            </tr>
            <tr>
              <td>violateExecutionOnNonTightHtml</td>
              <td>
                Control when to print violations if the Javadoc being examined by this check
                violates the tight html rules defined at
                <a href="writingjavadocchecks.html#Tight-HTML_rules">Tight-HTML Rules</a>.</td>
              <td><a href="property_types.html#boolean">Boolean</a></td>
              <td><code>false</code></td>
              <td>8.24</td>
            </tr>
          </table>
        </div>
      </subsection>

      <subsection name="Examples" id="JavadocBlockTagLocation_Examples">
        <p>
          To configure the default check:
        </p>
        <source>
&lt;module name=&quot;JavadocBlockTagLocation&quot;/&gt;
        </source>
        <p>Example:</p>
        <source>
/**
 * Escaped tag &amp;#64;version (OK)
 * Plain text with {@code @see} (OK)
 * A @custom tag (OK)
 * <!-- @see commented out (OK) -->
 * email@author (OK)
 * (@param in parentheses) (OK)
 * '@param in single quotes' (OK)
 * @since 1.0 (OK)
 * text @return (violation)
 * * @param (violation)
+* @serial (violation)
 * @see first (OK) @see second (violation)
 */
public int field;
        </source>
        <p>
          To configure the check to verify tags from
          <a href="https://openjdk.java.net/jeps/8068562">JEP 8068562</a> only:
        </p>
        <source>
&lt;module name=&quot;JavadocBlockTagLocation&quot;&gt;
  &lt;property name=&quot;tags&quot; value=&quot;apiNote, implSpec, implNote&quot;/&gt;
&lt;/module&gt;
        </source>
        <p>
          To configure the check to verify all default tags and some custom tags in addition:
        </p>
        <source>
&lt;module name=&quot;JavadocBlockTagLocation&quot;&gt;
  &lt;!-- default tags --&gt;
  &lt;property name=&quot;tags&quot; value=&quot;author, deprecated, exception, hidden&quot;/&gt;
  &lt;property name=&quot;tags&quot; value=&quot;param, provides, return, see, serial&quot;/&gt;
  &lt;property name=&quot;tags&quot; value=&quot;serialData, serialField, since, throws&quot;/&gt;
  &lt;property name=&quot;tags&quot; value=&quot;uses, version&quot;/&gt;
  &lt;!-- additional tags used in the project --&gt;
  &lt;property name=&quot;tags&quot; value=&quot;noinspection&quot;/&gt;
&lt;/module&gt;
        </source>
      </subsection>

      <subsection name="Example of Usage" id="JavadocBlockTagLocation_Example_of_Usage">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Aconfig+filename%3Acheckstyle_checks.xml+repo%3Acheckstyle%2Fcheckstyle+JavadocBlockTagLocation">
              Checkstyle Style</a>
          </li>
        </ul>
      </subsection>

      <subsection name="Violation Messages" id="JavadocBlockTagLocation_Violation_Messages">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.blockTagLocation%22">
              javadoc.blockTagLocation</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.missed.html.close%22">
              javadoc.missed.html.close</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.parse.rule.error%22">
              javadoc.parse.rule.error</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.wrong.singleton.html.tag%22">
              javadoc.wrong.singleton.html.tag</a>
          </li>
        </ul>
        <p>
          All messages can be customized if the default message doesn't suit you.
          Please <a href="config.html#Custom_messages">see the documentation</a> to learn how to.
        </p>
      </subsection>

      <subsection name="Package" id="JavadocBlockTagLocation_Package">
        <p>
          com.puppycrawl.tools.checkstyle.checks.javadoc
        </p>
      </subsection>

      <subsection name="Parent Module" id="JavadocBlockTagLocation_Parent_Module">
        <p>
          <a href="config.html#TreeWalker">TreeWalker</a>
        </p>
      </subsection>
    </section>

    <section name="JavadocContentLocation">
      <p>Since Checkstyle 8.27</p>
      <subsection name="Description" id="JavadocContentLocation_Description">
        <p>
          Checks that the Javadoc content begins from the same position
          for all Javadoc comments in the project. Any leading asterisks and spaces
          are not counted as the beginning of the content and are therefore ignored.
        </p>
        <p>
          It is possible to enforce two different styles:
        </p>
        <ul>
          <li>
            {@code first_line} - Javadoc content starts from the first line:
            <source>
&#47;** Summary text.
  * More details.
  *&#47;
public void method();
            </source>
          </li>
          <li>
            {@code second_line} - Javadoc content starts from the second line:
            <source>
&#47;**
  * Summary text.
  * More details.
  *&#47;
public void method();
            </source>
          </li>
        </ul>
      </subsection>

      <subsection name="Notes" id="JavadocContentLocation_Notes">
        <p>
          This check does not validate the Javadoc summary itself nor its presence.
          The check will not report any violations for missing or malformed javadoc summary.
          To validate the Javadoc summary use <a href="config_javadoc.html#SummaryJavadoc">
          SummaryJavadoc</a> check.
        </p>
        <p>
          The <a href="https://docs.oracle.com/en/java/javase/11/docs/specs/doc-comment-spec.html">
          Documentation Comment Specification</a> permits leading asterisks on the first line.
          For these Javadoc comments:
        </p>
        <source>
/***
  * Some text.
  */
/************
  * Some text.
  */
/**           **
  * Some text.
  */
        </source>
        <p>
          The documentation generated will be just "Some text." without any asterisks.
          Since these asterisks will not appear in the generated documentation,
          they should not be considered as the beginning of the Javadoc content.
          In such cases, the check assumes that the Javadoc content begins on the second line.
        </p>
      </subsection>

      <subsection name="Properties" id="JavadocContentLocation_Properties">
        <div class="wrapper">
          <table>
            <tr>
              <th>name</th>
              <th>description</th>
              <th>type</th>
              <th>default value</th>
              <th>since</th>
            </tr>
            <tr>
              <td>location</td>
              <td>Specify the policy on placement of the Javadoc content.</td>
              <td>
                <a href="property_types.html#javadocContentLocation">Javadoc Content Location</a>
              </td>
              <td><code>second_line</code></td>
              <td>8.27</td>
            </tr>
          </table>
        </div>
      </subsection>

      <subsection name="Examples" id="JavadocContentLocation_Examples">
        <p>
          By default Check validate that the Javadoc content starts from the second line:
        </p>
        <source>
&lt;module name=&quot;JavadocContentLocationCheck&quot;/&gt;
        </source>
        <p>
          This setting produces a violation for each multi-line comment
          starting on the same line as the initial asterisks:
        </p>
        <source>
&#47;** This comment causes a violation because it starts from the first line
  * and spans several lines.
  *&#47;
&#47;**
  * This comment is OK because it starts from the second line.
  *&#47;
&#47;** This comment is OK because it is on the single line. *&#47;
        </source>

        <p>
          To ensure that Javadoc content starts from the first line:
        </p>
        <source>
&lt;module name=&quot;JavadocContentLocationCheck&quot;&gt;
  &lt;property name=&quot;location&quot; value=&quot;first_line&quot;/&gt;
&lt;/module&gt;
        </source>
        <p>
          This setting produces a violation for each comment not
          starting on the same line as the initial asterisks:
        </p>
        <source>
&#47;** This comment is OK because it starts on the first line.
   * There may be additional text.
   *&#47;
&#47;**
  * This comment causes a violation because it starts on the second line.
  *&#47;
&#47;** This single-line comment also is OK. *&#47;
        </source>
      </subsection>
      <subsection name="Example of Usage" id="JavadocContentLocation_Example_of_Usage">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Aconfig+filename%3Acheckstyle_checks.xml+repo%3Acheckstyle%2Fcheckstyle+JavadocContentLocation">
              Checkstyle Style</a>
          </li>
        </ul>
      </subsection>

      <subsection name="Violation Messages" id="JavadocContentLocation_Violation_Messages">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.content.first.line%22">
              javadoc.content.first.line</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.content.second.line%22">
              javadoc.content.second.line</a>
          </li>
        </ul>
        <p>
          All messages can be customized if the default message doesn't suit you.
          Please <a href="config.html#Custom_messages">see the documentation</a> to learn how to.
        </p>
      </subsection>

      <subsection name="Package" id="JavadocContentLocation_Package">
        <p>
          com.puppycrawl.tools.checkstyle.checks.javadoc
        </p>
      </subsection>

      <subsection name="Parent Module" id="JavadocContentLocation_Parent_Module">
        <p>
          <a href="config.html#TreeWalker">TreeWalker</a>
        </p>
      </subsection>
    </section>

    <section name="JavadocMethod">
      <p>Since Checkstyle 3.0</p>
      <subsection name="Description" id="JavadocMethod_Description">
        <p>
          Checks the Javadoc of a method or constructor. The scope
          to verify is specified using the <code>Scope</code> class and
          defaults to <code>Scope.PRIVATE</code>. To verify another
          scope, set property scope to a different
          <a href="property_types.html#scope">scope</a>.
        </p>

        <p>
          Violates parameters and type parameters
          for which no param tags are
          present can be suppressed by defining property
          <code>allowMissingParamTags</code>.
          Violates methods which return non-void but for which no return tag is
          present can be suppressed by defining property
          <code>allowMissingReturnTag</code>.
          Violates exceptions which are declared to be thrown, but for which no
          throws tag is present by activation of property
          <code>validateThrows</code>.
        </p>

        <p>
          Javadoc is not required on a method that is tagged with the
          <code>@Override</code> annotation. However under
          Java 5 it is not possible to mark a method required for an
          interface (this was <i>corrected</i> under Java 6). Hence
          Checkstyle supports using the convention of using a single
          <code>{@inheritDoc}</code> tag instead of all the
          other tags.
        </p>

        <p>
          Note that only inheritable items will allow the
          <code>{@inheritDoc}</code> tag to be used in place
          of comments. Static methods at all visibilities, private non-static
          methods and constructors are not inheritable.
        </p>

        <p>
          For example, if the following method is
          implementing a method required by an interface, then the
          Javadoc could be done as:
        </p>

        <source>
/** {@inheritDoc} */
public int checkReturnTag(final int aTagIndex,
                          JavadocTag[] aTags,
                          int aLineNo)
        </source>

      </subsection>

      <subsection name="Properties" id="JavadocMethod_Properties">
        <div class="wrapper">
          <table>
            <tr>
              <th>name</th>
              <th>description</th>
              <th>type</th>
              <th>default value</th>
              <th>since</th>
            </tr>
            <tr>
              <td>allowedAnnotations</td>
              <td>Specify the list of annotations that allow missed documentation.</td>
              <td><a href="property_types.html#stringSet">String Set</a></td>
              <td><code>Override</code></td>
              <td>6.0</td>
            </tr>
            <tr>
              <td>validateThrows</td>
              <td>Control whether to validate <code>throws</code> tags.</td>
              <td><a href="property_types.html#boolean">Boolean</a></td>
              <td><code>false</code></td>
              <td>6.0</td>
            </tr>
            <tr>
              <td>scope</td>
              <td>Specify the visibility scope where Javadoc comments are checked.</td>
              <td><a href="property_types.html#scope">Scope</a></td>
              <td><code>private</code></td>
              <td>3.0</td>
            </tr>
            <tr>
              <td>excludeScope</td>
              <td>Specify the visibility scope where Javadoc comments are not checked.</td>
              <td><a href="property_types.html#scope">Scope</a></td>
              <td><code>null</code></td>
              <td>3.4</td>
            </tr>
            <tr>
              <td>allowMissingParamTags</td>
              <td>Control whether to ignore violations when a method has parameters
              but does not have matching <code>param</code> tags in the javadoc.</td>
              <td><a href="property_types.html#boolean">Boolean</a></td>
              <td><code>false</code></td>
              <td>3.1</td>
            </tr>
            <tr>
              <td>allowMissingReturnTag</td>
              <td>Control whether to ignore violations when a method returns
              non-void type and does not have a <code>return</code> tag in the javadoc.</td>
              <td><a href="property_types.html#boolean">Boolean</a></td>
              <td><code>false</code></td>
              <td>3.1</td>
            </tr>
            <tr>
              <td>tokens</td>
              <td>tokens to check</td>

              <td>
                subset of tokens
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#METHOD_DEF">
                  METHOD_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CTOR_DEF">
                  CTOR_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_FIELD_DEF">
                  ANNOTATION_FIELD_DEF</a>.
              </td>
              <td>
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#METHOD_DEF">
                  METHOD_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CTOR_DEF">
                  CTOR_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_FIELD_DEF">
                  ANNOTATION_FIELD_DEF</a>.
              </td>
              <td>3.0</td>
            </tr>
          </table>
        </div>
      </subsection>

      <subsection name="Examples" id="JavadocMethod_Examples">
        <p>
          To configure the default check:
        </p>
        <source>
&lt;module name="JavadocMethod"/&gt;
        </source>

        <p>
          To configure the check for <code>public</code>
          scope, ignoring any missing param tags is:
        </p>

        <source>
&lt;module name=&quot;JavadocMethod&quot;&gt;
  &lt;property name=&quot;scope&quot; value=&quot;public&quot;/&gt;
  &lt;property name=&quot;allowMissingParamTags&quot; value=&quot;true&quot;/&gt;
&lt;/module&gt;
        </source>

        <p>
          To configure the check for methods which are in <code>private</code>,
          but not in <code>protected</code> scope:
        </p>
        <source>
&lt;module name="JavadocMethod"&gt;
  &lt;property name="scope" value="private"/&gt;
  &lt;property name="excludeScope" value="protected"/&gt;
&lt;/module&gt;
        </source>

        <p>
          To configure the check to validate <code>throws</code> tags, you can use following config.
          ATTENTION: Checkstyle does not have information about hierarchy of exception types
          so usage of base class is considered as separate exception type.
          As workaround you need to specify both types in javadoc (parent and exact type).
        </p>
        <source>
&lt;module name="JavadocMethod"&gt;
  &lt;property name="validateThrows" value="true"/&gt;
&lt;/module&gt;
        </source>
        <source>
/**
 * Actual exception thrown is child class of class that is declared in throws.
 * It is limitation of checkstyle (as checkstyle does not know type hierarchy).
 * Javadoc is valid not declaring FileNotFoundException
 * BUT checkstyle can not distinguish relationship between exceptions.
 * @param file some file
 * @throws IOException if some problem
 */
public void doSomething8(File file) throws IOException {
    if (file == null) {
        throw new FileNotFoundException(); // violation
    }
}

/**
 * Exact throw type referencing in javadoc even first is parent of second type.
 * It is a limitation of checkstyle (as checkstyle does not know type hierarchy).
 * This javadoc is valid for checkstyle and for javadoc tool.
 * @param file some file
 * @throws IOException if some problem
 * @throws FileNotFoundException if file is not found
 */
public void doSomething9(File file) throws IOException {
    if (file == null) {
        throw new FileNotFoundException();
    }
}
        </source>

      </subsection>

      <subsection name="Example of Usage" id="JavadocMethod_Example_of_Usage">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources+filename%3Agoogle_checks.xml+repo%3Acheckstyle%2Fcheckstyle+JavadocMethod">
            Google Style</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources+filename%3Asun_checks.xml+repo%3Acheckstyle%2Fcheckstyle+JavadocMethod">
            Sun Style</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Aconfig+filename%3Acheckstyle_checks.xml+repo%3Acheckstyle%2Fcheckstyle+JavadocMethod">
            Checkstyle Style</a>
          </li>
        </ul>
      </subsection>

      <subsection name="Violation Messages" id="JavadocMethod_Violation_Messages">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.classInfo%22">
            javadoc.classInfo</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.duplicateTag%22">
            javadoc.duplicateTag</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.expectedTag%22">
            javadoc.expectedTag</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.invalidInheritDoc%22">
            javadoc.invalidInheritDoc</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.return.expected%22">
            javadoc.return.expected</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.unusedTag%22">
            javadoc.unusedTag</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.unusedTagGeneral%22">
            javadoc.unusedTagGeneral</a>
          </li>
        </ul>
        <p>
          All messages can be customized if the default message doesn't suit you.
          Please <a href="config.html#Custom_messages">see the documentation</a> to learn how to.
        </p>
      </subsection>

      <subsection name="Package" id="JavadocMethod_Package">
        <p>
          com.puppycrawl.tools.checkstyle.checks.javadoc
        </p>
      </subsection>

      <subsection name="Parent Module" id="JavadocMethod_Parent_Module">
        <p>
          <a href="config.html#TreeWalker">TreeWalker</a>
        </p>
      </subsection>
    </section>

    <section name="JavadocPackage">
      <p>Since Checkstyle 5.0</p>
      <subsection name="Description" id="JavadocPackage_Description">
        <p>
          Checks that each Java package has a Javadoc file used for
          commenting. By default it only allows a <code>package-info.java</code> file, but can be
          configured to allow a <code>package.html</code>
          file.
        </p>
        <p>
          A violation will be reported if both files exist as this is not
          allowed by the Javadoc tool.
        </p>
      </subsection>

      <subsection name="Properties" id="JavadocPackage_Properties">
        <div class="wrapper">
          <table>
            <tr>
              <th>name</th>
              <th>description</th>
              <th>type</th>
              <th>default value</th>
              <th>since</th>
            </tr>
            <tr>
              <td>allowLegacy</td>
              <td>
                Allow legacy <code>package.html</code> file to be used.
              </td>
              <td><a href="property_types.html#boolean">Boolean</a></td>
              <td><code>false</code></td>
              <td>5.0</td>
            </tr>
            <tr>
              <td>fileExtensions</td>
              <td>Specify the file type extension of files to process.</td>
              <td><a href="property_types.html#stringSet">String Set</a></td>
              <td><code>.java</code></td>
              <td>5.0</td>
            </tr>
          </table>
        </div>
      </subsection>

      <subsection name="Examples" id="JavadocPackage_Examples">
        <p>
          To configure the check:
        </p>
        <source>
&lt;module name="JavadocPackage"/&gt;
        </source>
        <p>
          To configure the check to use legacy <code>package.html</code> file
          when <code>package-info.java</code> file is absent:
        </p>
        <source>
&lt;module name="JavadocPackage"&gt;
  &lt;property name=&quot;allowLegacy&quot; value=&quot;true&quot;/&gt;
&lt;/module&gt;
        </source>
      </subsection>

      <subsection name="Example of Usage" id="JavadocPackage_Example_of_Usage">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources+filename%3Asun_checks.xml+repo%3Acheckstyle%2Fcheckstyle+JavadocPackage">
            Sun Style</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Aconfig+filename%3Acheckstyle_checks.xml+repo%3Acheckstyle%2Fcheckstyle+JavadocPackage">
            Checkstyle Style</a>
          </li>
        </ul>
      </subsection>

      <subsection name="Violation Messages" id="JavadocPackage_Violation_Messages">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.legacyPackageHtml%22">
            javadoc.legacyPackageHtml</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.packageInfo%22">
            javadoc.packageInfo</a>
          </li>
        </ul>
        <p>
          All messages can be customized if the default message doesn't suit you.
          Please <a href="config.html#Custom_messages">see the documentation</a> to learn how to.
        </p>
      </subsection>

      <subsection name="Package" id="JavadocPackage_Package">
        <p>
          com.puppycrawl.tools.checkstyle.checks.javadoc
        </p>
      </subsection>

      <subsection name="Parent Module" id="JavadocPackage_Parent_Module">
        <p>
          <a href="config.html#Checker">Checker</a>
        </p>
      </subsection>
    </section>

    <section name="JavadocParagraph">
      <p>Since Checkstyle 6.0</p>
      <subsection name="Description" id="JavadocParagraph_Description">
        <p>
          Checks the Javadoc paragraph.
        </p>
        <p>
          Checks that:
        </p>
        <ul>
          <li>
            There is one blank line between each of two paragraphs and one blank line before the
            at-clauses block if it is present.
          </li>
          <li>
            Each paragraph but the first has &lt;p&gt; immediately before the first word, with
            no space after.
          </li>
        </ul>
      </subsection>

      <subsection name="Properties" id="JavadocParagraph_Properties">
        <div class="wrapper">
          <table>
            <tr>
              <th>name</th>
              <th>description</th>
              <th>type</th>
              <th>default value</th>
              <th>since</th>
            </tr>
            <tr>
              <td>violateExecutionOnNonTightHtml</td>
              <td>
                Control when to print violations if the Javadoc being examined by this check
                violates the tight html rules defined at
                <a href="writingjavadocchecks.html#Tight-HTML_rules">Tight-HTML Rules</a>.</td>
              <td><a href="property_types.html#boolean">Boolean</a></td>
              <td><code>false</code></td>
              <td>8.3</td>
            </tr>
            <tr>
              <td>allowNewlineParagraph</td>
              <td>
                Control whether the &lt;p&gt; tag should be placed immediately before the first
                word.
              </td>
              <td><a href="property_types.html#boolean">Boolean</a></td>
              <td><code>true</code></td>
              <td>6.9</td>
            </tr>
          </table>
        </div>
      </subsection>

      <subsection name="Examples" id="JavadocParagraph_Examples">
        <p>
          To configure the default check:
        </p>
        <source>
&lt;module name=&quot;JavadocParagraph&quot;/&gt;
        </source>
        <p>By default, the check will report a violation if there is a new line
          or whitespace after the &lt;p&gt; tag: </p>
        <source>
&#47;**
 * No tag (ok).
 *
 * &lt;p&gt;Tag immediately before the text (ok).
 * &lt;p&gt;No blank line before the tag (violation).
 *
 * &lt;p&gt;
 * New line after tag (violation).
 *
 * &lt;p&gt; Whitespace after tag (violation).
 *
 *&#47;
public class TestClass {
}
        </source>
        <p>
          To allow newlines and spaces immediately after the &lt;p&gt; tag:
        </p>
        <source>
&lt;module name=&quot;JavadocParagraph&quot;&gt;
  &lt;property name=&quot;allowNewlineParagraph&quot; value=&quot;false&quot;/&gt;
&lt;/module&gt;
        </source>
        <p>
          In case of <code>allowNewlineParagraph</code> set to <code>false</code>
          the following example will not have any violations:
        </p>
        <source>
&#47;**
 * No tag (ok).
 *
 * &lt;p&gt;Tag immediately before the text (ok).
 * &lt;p&gt;No blank line before the tag (violation).
 *
 * &lt;p&gt;
 * New line after tag (ok).
 *
 * &lt;p&gt; Whitespace after tag (ok).
 *
 *&#47;
public class TestClass {
}
        </source>
      </subsection>

      <subsection name="Example of Usage" id="JavadocParagraph_Example_of_Usage">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources+filename%3Agoogle_checks.xml+repo%3Acheckstyle%2Fcheckstyle+JavadocParagraph">
            Google Style</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Aconfig+filename%3Acheckstyle_checks.xml+repo%3Acheckstyle%2Fcheckstyle+JavadocParagraph">
            Checkstyle Style</a>
          </li>
        </ul>
      </subsection>

      <subsection name="Violation Messages" id="JavadocParagraph_Violation_Messages">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.missed.html.close%22">
            javadoc.missed.html.close</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.paragraph.line.before%22">
            javadoc.paragraph.line.before</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.paragraph.misplaced.tag%22">
            javadoc.paragraph.misplaced.tag</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.paragraph.redundant.paragraph%22">
            javadoc.paragraph.redundant.paragraph</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.paragraph.tag.after%22">
            javadoc.paragraph.tag.after</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.parse.rule.error%22">
            javadoc.parse.rule.error</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.wrong.singleton.html.tag%22">
            javadoc.wrong.singleton.html.tag</a>
          </li>
        </ul>
        <p>
          All messages can be customized if the default message doesn't suit you.
          Please <a href="config.html#Custom_messages">see the documentation</a> to learn how to.
        </p>
      </subsection>

      <subsection name="Package" id="JavadocParagraph_Package">
        <p>
          com.puppycrawl.tools.checkstyle.checks.javadoc
        </p>
      </subsection>

      <subsection name="Parent Module" id="JavadocParagraph_Parent_Module">
        <p>
          <a href="config.html#TreeWalker">TreeWalker</a>
        </p>
      </subsection>
    </section>

    <section name="JavadocStyle">
      <p>Since Checkstyle 3.2</p>
      <subsection name="Description" id="JavadocStyle_Description">
        <p>
          Validates Javadoc comments to help ensure they are well formed.
        </p>
        <p>
          The following checks are performed:
        </p>
        <ul>
          <li>
            Ensures the first sentence ends with proper punctuation
            (That is a period, question mark, or exclamation mark, by default).
            Javadoc automatically places the first sentence in the
            method summary table and index. Without proper punctuation
            the Javadoc may be malformed. All items eligible for the
            <code>{@inheritDoc}</code> tag are exempt from this
            requirement.
          </li>

          <li>
            Check text for Javadoc statements that do not have any
            description. This includes both completely empty Javadoc,
            and Javadoc with only tags such as <code>@param</code> and <code>@return</code>.
          </li>

          <li>
            Check text for incomplete HTML tags. Verifies that HTML
            tags have corresponding end tags and issues an "Unclosed
            HTML tag found:" error if not. An "Extra HTML tag found:"
            error is issued if an end tag is found without a previous
            open tag.
          </li>
          <li>
           Check that a package Javadoc comment is well-formed (as
           described above) and NOT missing from any package-info.java files.
          </li>
          <li>
            Check for allowed HTML tags. The list of allowed HTML tags
            is "a", "abbr", "acronym", "address", "area", "b", "bdo",
            "big", "blockquote", "br", "caption", "cite", "code",
            "colgroup", "dd", "del", "div", "dfn", "dl", "dt", "em",
            "fieldset", "font", "h1" to "h6", "hr", "i", "img", "ins",
            "kbd", "li", "ol", "p", "pre", "q", "samp", "small", "span",
            "strong", "sub", "sup", "table", "tbody", "td", "tfoot", "th",
            "thread", "tr", "tt", "u", "ul", "var".
          </li>
        </ul>

        <p>
          These checks were patterned after the checks made by the <a
          href="http://maven-doccheck.sourceforge.net/">DocCheck</a>
          doclet available from Sun. Note: Original Sun's DocCheck tool does not exist anymore.
        </p>
      </subsection>

      <subsection name="Properties" id="JavadocStyle_Properties">
        <div class="wrapper">
          <table>
            <tr>
              <th>name</th>
              <th>description</th>
              <th>type</th>
              <th>default value</th>
              <th>since</th>
            </tr>
            <tr>
              <td>scope</td>
              <td>Specify the visibility scope where Javadoc comments are checked.</td>
              <td><a href="property_types.html#scope">Scope</a></td>
              <td><code>private</code></td>
              <td>3.2</td>
            </tr>
            <tr>
              <td>excludeScope</td>
              <td>Specify the visibility scope where Javadoc comments are not checked.</td>
              <td><a href="property_types.html#scope">Scope</a></td>
              <td><code>null</code></td>
              <td>3.4</td>
            </tr>
            <tr>
              <td>checkFirstSentence</td>
              <td>
                Control whether to check the first sentence for proper end of sentence.
              </td>
              <td><a href="property_types.html#boolean">Boolean</a></td>
              <td><code>true</code></td>
              <td>3.2</td>
            </tr>
            <tr>
              <td>endOfSentenceFormat</td>
              <td>
                Specify the format for matching the end of a sentence.
              </td>
              <td><a href="property_types.html#regexp">Regular Expression</a></td>
              <td><code>"([.?!][ \t\n\r\f&lt;])|([.?!]$)"</code></td>
              <td>5.0</td>
            </tr>
            <tr>
              <td>checkEmptyJavadoc</td>
              <td>
                Control whether to check if the Javadoc is missing a describing text.
              </td>
              <td><a href="property_types.html#boolean">Boolean</a></td>
              <td><code>false</code></td>
              <td>3.4</td>
            </tr>
            <tr>
              <td>checkHtml</td>
              <td>Control whether to check for incomplete HTML tags.</td>
              <td><a href="property_types.html#boolean">Boolean</a></td>
              <td><code>true</code></td>
              <td>3.2</td>
            </tr>
            <tr>
              <td>tokens</td>
              <td>tokens to check</td>
              <td>subset of tokens
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_DEF">
                  ANNOTATION_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_FIELD_DEF">
                  ANNOTATION_FIELD_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CLASS_DEF">
                  CLASS_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CTOR_DEF">
                  CTOR_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_CONSTANT_DEF">
                  ENUM_CONSTANT_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_DEF">
                  ENUM_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF">
                  INTERFACE_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#METHOD_DEF">
                  METHOD_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#PACKAGE_DEF">
                  PACKAGE_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#VARIABLE_DEF">
                  VARIABLE_DEF</a>.
              </td>
              <td>
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_DEF">
                  ANNOTATION_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_FIELD_DEF">
                  ANNOTATION_FIELD_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CLASS_DEF">
                  CLASS_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CTOR_DEF">
                  CTOR_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_CONSTANT_DEF">
                  ENUM_CONSTANT_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_DEF">
                  ENUM_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF">
                  INTERFACE_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#METHOD_DEF">
                  METHOD_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#PACKAGE_DEF">
                  PACKAGE_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#VARIABLE_DEF">
                  VARIABLE_DEF</a>.
              </td>
              <td>3.2</td>
            </tr>
          </table>
        </div>
      </subsection>

      <subsection name="Examples" id="JavadocStyle_Examples">
        <p>
          To configure the default check:
        </p>

        <source>
&lt;module name="JavadocStyle"/&gt;
        </source>

        <p>
          To configure the check for <code>public</code>
          scope:
        </p>

        <source>
&lt;module name="JavadocStyle"&gt;
  &lt;property name="scope" value="public"/&gt;
&lt;/module&gt;
        </source>

        <p>
          To configure the check for javadoc which is in <code>private</code>, but not in
          <code>package</code> scope:
        </p>

        <source>
&lt;module name="JavadocStyle"&gt;
  &lt;property name="scope" value="private"/&gt;
  &lt;property name="excludeScope" value="package"/&gt;
&lt;/module&gt;
        </source>

        <p>
          To configure the check to turn off first sentence checking:
        </p>

        <source>
&lt;module name="JavadocStyle"&gt;
  &lt;property name="checkFirstSentence" value="false"/&gt;
&lt;/module&gt;
        </source>
      </subsection>

      <subsection name="Example of Usage" id="JavadocStyle_Example_of_Usage">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources+filename%3Asun_checks.xml+repo%3Acheckstyle%2Fcheckstyle+JavadocStyle">
            Sun Style</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Aconfig+filename%3Acheckstyle_checks.xml+repo%3Acheckstyle%2Fcheckstyle+JavadocStyle">
            Checkstyle Style</a>
          </li>
        </ul>
      </subsection>

      <subsection name="Violation Messages" id="JavadocStyle_Violation_Messages">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.empty%22">
            javadoc.empty</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.extraHtml%22">
            javadoc.extraHtml</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.incompleteTag%22">
            javadoc.incompleteTag</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.missing%22">
            javadoc.missing</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.noPeriod%22">
            javadoc.noPeriod</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.unclosedHtml%22">
            javadoc.unclosedHtml</a>
          </li>
        </ul>
        <p>
          All messages can be customized if the default message doesn't suit you.
          Please <a href="config.html#Custom_messages">see the documentation</a> to learn how to.
        </p>
      </subsection>

      <subsection name="Package" id="JavadocStyle_Package">
        <p>
          com.puppycrawl.tools.checkstyle.checks.javadoc
        </p>
      </subsection>

      <subsection name="Parent Module" id="JavadocStyle_Parent_Module">
        <p>
          <a href="config.html#TreeWalker">TreeWalker</a>
        </p>
      </subsection>
    </section>

    <section name="JavadocTagContinuationIndentation">
      <p>Since Checkstyle 6.0</p>
      <subsection name="Description" id="JavadocTagContinuationIndentation_Description">
        <p>
          Checks the indentation of the continuation lines in at-clauses.
        </p>
      </subsection>

      <subsection name="Properties" id="JavadocTagContinuationIndentation_Properties">
        <div class="wrapper">
          <table>
            <tr>
              <th>name</th>
              <th>description</th>
              <th>type</th>
              <th>default value</th>
              <th>since</th>
            </tr>
            <tr>
              <td>violateExecutionOnNonTightHtml</td>
              <td>
                Control when to print violations if the Javadoc being examined by this check
                violates the tight html rules defined at
                <a href="writingjavadocchecks.html#Tight-HTML_rules">Tight-HTML Rules</a>.</td>
              <td><a href="property_types.html#boolean">Boolean</a></td>
              <td><code>false</code></td>
              <td>8.3</td>
            </tr>
            <tr>
              <td>offset</td>
              <td>Specify how many spaces to use for new indentation level.</td>
              <td><a href="property_types.html#integer">Integer</a></td>
              <td><code>4</code></td>
              <td>6.0</td>
            </tr>
          </table>
        </div>
      </subsection>

      <subsection name="Examples" id="JavadocTagContinuationIndentation_Examples">
        <p>
          To configure the default check:
        </p>
        <source>
&lt;module name=&quot;JavadocTagContinuationIndentation&quot;/&gt;
        </source>
        <p>
          To configure the check with two spaces indentation:
        </p>
        <source>
&lt;module name=&quot;JavadocTagContinuationIndentation&quot;&gt;
  &lt;property name=&quot;offset&quot; value=&quot;2&quot;/&gt;
&lt;/module&gt;
        </source>
      </subsection>

      <subsection name="Example of Usage" id="JavadocTagContinuationIndentation_Example_of_Usage">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources+filename%3Agoogle_checks.xml+repo%3Acheckstyle%2Fcheckstyle+JavadocTagContinuationIndentation">
            Google Style</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Aconfig+filename%3Acheckstyle_checks.xml+repo%3Acheckstyle%2Fcheckstyle+JavadocTagContinuationIndentation">
            Checkstyle Style</a>
          </li>
        </ul>
      </subsection>

      <subsection name="Violation Messages"
                  id="JavadocTagContinuationIndentation_Violation_Messages">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.missed.html.close%22">
            javadoc.missed.html.close</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.parse.rule.error%22">
            javadoc.parse.rule.error</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.wrong.singleton.html.tag%22">
            javadoc.wrong.singleton.html.tag</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22tag.continuation.indent%22">
            tag.continuation.indent</a>
          </li>
        </ul>
        <p>
          All messages can be customized if the default message doesn't suit you.
          Please <a href="config.html#Custom_messages">see the documentation</a> to learn how to.
        </p>
      </subsection>

      <subsection name="Package" id="JavadocTagContinuationIndentation_Package">
        <p>
          com.puppycrawl.tools.checkstyle.checks.javadoc
        </p>
      </subsection>

      <subsection name="Parent Module" id="JavadocTagContinuationIndentation_Parent_Module">
        <p>
          <a href="config.html#TreeWalker">TreeWalker</a>
        </p>
      </subsection>
    </section>

    <section name="JavadocType">
      <p>Since Checkstyle 3.0</p>
      <subsection name="Description" id="JavadocType_Description">
        <p>
          Checks the Javadoc comments for annotation/enum/class/interface definitions.
          By default, does not check for author or version tags. The
          scope to verify is specified using the <code>Scope</code>
          class and defaults to <code>Scope.PRIVATE</code>. To verify
          another scope, set property scope to one of the
          <code>Scope</code> constants. To define the format for an
          author tag or a version tag, set property authorFormat or
          versionFormat respectively to a
          <a href="https://docs.oracle.com/javase/7/docs/api/java/util/regex/Pattern.html">
            regular expression</a>.
        </p>
        <p>
          Does not perform checks for author and version tags for inner
          classes, as they should be redundant because of outer class.
        </p>
        <p>
          Error messages about type parameters for which no param tags are
          present can be suppressed by defining property
          <code>allowMissingParamTags</code>.
        </p>
      </subsection>

      <subsection name="Properties" id="JavadocType_Properties">
        <div class="wrapper">
          <table>
            <tr>
              <th>name</th>
              <th>description</th>
              <th>type</th>
              <th>default value</th>
              <th>since</th>
            </tr>
            <tr>
              <td>scope</td>
              <td>Specify the visibility scope where Javadoc comments are checked.</td>
              <td><a href="property_types.html#scope">Scope</a></td>
              <td><code>private</code></td>
              <td>3.0</td>
            </tr>
            <tr>
              <td>excludeScope</td>
              <td>Specify the visibility scope where Javadoc comments are not checked.</td>
              <td><a href="property_types.html#scope">Scope</a></td>
              <td><code>null</code></td>
              <td>3.4</td>
            </tr>
            <tr>
              <td>authorFormat</td>
              <td>Specify the pattern for <code>@author</code> tag.</td>
              <td><a href="property_types.html#regexp">Regular Expression</a></td>
              <td><code>null</code></td>
              <td>3.0</td>
            </tr>
            <tr>
              <td>versionFormat</td>
              <td>Specify the pattern for <code>@version</code> tag.</td>
              <td><a href="property_types.html#regexp">Regular Expression</a></td>
              <td><code>null</code></td>
              <td>3.0</td>
            </tr>
            <tr>
              <td>allowMissingParamTags</td>
              <td>Control whether to ignore violations when a class has type parameters
                  but does not have matching param tags in the Javadoc.</td>
              <td><a href="property_types.html#boolean">Boolean</a></td>
              <td><code>false</code></td>
              <td>4.0</td>
            </tr>
            <tr>
              <td>allowUnknownTags</td>
              <td>Control whether to ignore violations when a Javadoc tag is not recognised.</td>
              <td><a href="property_types.html#boolean">Boolean</a></td>
              <td><code>false</code></td>
              <td>5.1</td>
            </tr>
            <tr>
              <td>allowedAnnotations</td>
              <td>
                Specify the list of annotations that allow missed documentation.
                Only short names are allowed, e.g. <code>Generated</code>.
              </td>
              <td><a href="property_types.html#stringSet">String Set</a></td>
              <td><code>Generated</code></td>
              <td>8.15</td>
            </tr>
            <tr>
              <td>tokens</td>
              <td>tokens to check</td>
              <td>
                subset of tokens
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF">
                  INTERFACE_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CLASS_DEF">
                  CLASS_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_DEF">
                  ENUM_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_DEF">
                  ANNOTATION_DEF</a>.
              </td>
              <td>
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF">
                  INTERFACE_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CLASS_DEF">
                  CLASS_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_DEF">
                  ENUM_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_DEF">
                  ANNOTATION_DEF</a>.
              </td>
              <td>3.0</td>
            </tr>
          </table>
        </div>
      </subsection>

      <subsection name="Examples" id="JavadocType_Examples">
        <p>
          To configure the default check:
        </p>
        <source>
&lt;module name="JavadocType"/&gt;
        </source>

        <p>
          To configure the check for <code>public</code> scope:
        </p>
        <source>
&lt;module name="JavadocType"&gt;
  &lt;property name="scope" value="public"/&gt;
&lt;/module&gt;
        </source>

        <p>
          To configure the check for an <code>@author</code> tag:
        </p>
        <source>
&lt;module name="JavadocType"&gt;
  &lt;property name="authorFormat" value="\S"/&gt;
&lt;/module&gt;
        </source>

        <p>
          To configure the check for a CVS revision version tag:
        </p>
        <source>
&lt;module name="JavadocType"&gt;
  &lt;property name="versionFormat" value="\$Revision.*\$"/&gt;
&lt;/module&gt;
        </source>

        <p>
          To configure the check for <code>private</code> classes only:
        </p>
        <source>
&lt;module name="JavadocType"&gt;
  &lt;property name="scope" value="private"/&gt;
  &lt;property name="excludeScope" value="package"/&gt;
&lt;/module&gt;
        </source>

        <p>
          Example that allows missing comments for classes annotated with
          <code>@SpringBootApplication</code> and <code>@Configuration</code>:
        </p>
        <source>
@SpringBootApplication // no violations about missing comment on class
public class Application {}

@Configuration // no violations about missing comment on class
class DatabaseConfiguration {}
        </source>
        <p>Use following configuration:</p>
        <source>
&lt;module name="JavadocType"&gt;
  &lt;property name="allowedAnnotations" value="SpringBootApplication,Configuration"/&gt;
&lt;/module&gt;
        </source>
      </subsection>

      <subsection name="Example of Usage" id="JavadocType_Example_of_Usage">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources+filename%3Asun_checks.xml+repo%3Acheckstyle%2Fcheckstyle+JavadocType">
            Sun Style</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Aconfig+filename%3Acheckstyle_checks.xml+repo%3Acheckstyle%2Fcheckstyle+JavadocType">
            Checkstyle Style</a>
          </li>
        </ul>
      </subsection>

      <subsection name="Violation Messages" id="JavadocType_Violation_Messages">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.unknownTag%22">
            javadoc.unknownTag</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.unusedTag%22">
            javadoc.unusedTag</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.unusedTagGeneral%22">
            javadoc.unusedTagGeneral</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22type.missingTag%22">
            type.missingTag</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22type.tagFormat%22">
            type.tagFormat</a>
          </li>
        </ul>
        <p>
          All messages can be customized if the default message doesn't suit you.
          Please <a href="config.html#Custom_messages">see the documentation</a> to learn how to.
        </p>
      </subsection>

      <subsection name="Package" id="JavadocType_Package">
        <p>
          com.puppycrawl.tools.checkstyle.checks.javadoc
        </p>
      </subsection>

      <subsection name="Parent Module" id="JavadocType_Parent_Module">
        <p>
          <a href="config.html#TreeWalker">TreeWalker</a>
        </p>
      </subsection>
    </section>

    <section name="JavadocVariable">
      <p>Since Checkstyle 3.0</p>
      <subsection name="Description" id="JavadocVariable_Description">
        <p>
          Checks that a variable has a Javadoc comment. Ignores <code>serialVersionUID</code>
          fields.
        </p>
      </subsection>

      <subsection name="Properties" id="JavadocVariable_Properties">
        <div class="wrapper">
          <table>
            <tr>
              <th>name</th>
              <th>description</th>
              <th>type</th>
              <th>default value</th>
              <th>since</th>
            </tr>
            <tr>
              <td>scope</td>
              <td>Specify the visibility scope where Javadoc comments are checked.</td>
              <td><a href="property_types.html#scope">Scope</a></td>
              <td><code>private</code></td>
              <td>3.0</td>
            </tr>
            <tr>
              <td>excludeScope</td>
              <td>Specify the visibility scope where Javadoc comments are not checked.</td>
              <td><a href="property_types.html#scope">Scope</a></td>
              <td><code>null</code></td>
              <td>3.4</td>
            </tr>
            <tr>
                <td>ignoreNamePattern</td>
                <td>Specify the regexp to define variable names to ignore.</td>
                <td><a href="property_types.html#regexp">Regular Expression</a></td>
                <td><code>null</code></td>
                <td>5.8</td>
            </tr>
            <tr>
              <td>tokens</td>
              <td>tokens to check</td>
              <td>subset of tokens
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_CONSTANT_DEF">ENUM_CONSTANT_DEF</a>.
              </td>
              <td>
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_CONSTANT_DEF">ENUM_CONSTANT_DEF</a>.
              </td>
              <td>3.0</td>
            </tr>
          </table>
        </div>
      </subsection>

      <subsection name="Examples" id="JavadocVariable_Examples">
        <p>
          To configure the default check:
        </p>
        <source>
&lt;module name="JavadocVariable"/&gt;
        </source>

        <p>
          To configure the check for <code>public</code>
          scope:
        </p>

        <source>
&lt;module name="JavadocVariable"&gt;
  &lt;property name="scope" value="public"/&gt;
&lt;/module&gt;
        </source>

        <p>
          To configure the check for members which are in <code>private</code>, but not in
          <code>protected</code> scope:
        </p>

        <source>
&lt;module name="JavadocVariable"&gt;
  &lt;property name="scope" value="private"/&gt;
  &lt;property name="excludeScope" value="protected"/&gt;
&lt;/module&gt;
        </source>

        <p>
            To ignore absence of Javadoc comments for variables with names <code>log</code> or
            <code>logger</code>:
        </p>

        <source>
&lt;module name="JavadocVariable"&gt;
  &lt;property name="ignoreNamePattern" value="log|logger"/&gt;
&lt;/module&gt;
        </source>
      </subsection>

      <subsection name="Example of Usage" id="JavadocVariable_Example_of_Usage">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources+filename%3Asun_checks.xml+repo%3Acheckstyle%2Fcheckstyle+JavadocVariable">
            Sun Style</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Aconfig+filename%3Acheckstyle_checks.xml+repo%3Acheckstyle%2Fcheckstyle+JavadocVariable">
            Checkstyle Style</a>
          </li>
        </ul>
      </subsection>

      <subsection name="Violation Messages" id="JavadocVariable_Violation_Messages">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.missing%22">
            javadoc.missing</a>
          </li>
        </ul>
        <p>
          All messages can be customized if the default message doesn't suit you.
          Please <a href="config.html#Custom_messages">see the documentation</a> to learn how to.
        </p>
      </subsection>

      <subsection name="Package" id="JavadocVariable_Package">
        <p>
          com.puppycrawl.tools.checkstyle.checks.javadoc
        </p>
      </subsection>

      <subsection name="Parent Module" id="JavadocVariable_Parent_Module">
        <p>
          <a href="config.html#TreeWalker">TreeWalker</a>
        </p>
      </subsection>
    </section>

    <section name="MissingJavadocMethod">
      <p>Since Checkstyle 8.21</p>
      <subsection name="Description" id="MissingJavadocMethod_Description">
        <p>
          Checks for missing Javadoc comments for a method or constructor.
          The scope to verify is specified using the <code>Scope</code> class and
          defaults to <code>Scope.PUBLIC</code>. To verify another
          scope, set property scope to a different
          <a href="property_types.html#scope">scope</a>.
        </p>

        <p>
          Javadoc is not required on a method that is tagged with the
          <code>@Override</code> annotation. However under
          Java 5 it is not possible to mark a method required for an
          interface (this was <i>corrected</i> under Java 6). Hence
          Checkstyle supports using the convention of using a single
          <code>{@inheritDoc}</code> tag instead of all the
          other tags.
        </p>

        <p>
          For getters and setters for the property <code>allowMissingPropertyJavadoc</code>,
          the methods must match exactly the structures below.
        </p>
        <div class="wrapper">
          <pre>
public void setNumber(final int number)
{
    mNumber = number;
}

public int getNumber()
{
    return mNumber;
}

public boolean isSomething()
{
    return false;
}
          </pre>
        </div>
      </subsection>

      <subsection name="Properties" id="MissingJavadocMethod_Properties">
        <div class="wrapper">
          <table>
            <tr>
              <th>name</th>
              <th>description</th>
              <th>type</th>
              <th>default value</th>
              <th>since</th>
            </tr>
            <tr>
              <td>minLineCount</td>
              <td>Control the minimal amount of lines in method to allow no documentation.</td>
              <td><a href="property_types.html#integer">Integer</a></td>
              <td><code>-1</code></td>
              <td>8.21</td>
            </tr>
            <tr>
              <td>allowedAnnotations</td>
              <td>Configure the list of annotations that allow missed documentation.</td>
              <td><a href="property_types.html#stringSet">String Set</a></td>
              <td><code>Override</code></td>
              <td>8.21</td>
            </tr>
            <tr>
              <td>scope</td>
              <td>Specify the visibility scope where Javadoc comments are checked.</td>
              <td><a href="property_types.html#scope">Scope</a></td>
              <td><code>public</code></td>
              <td>8.21</td>
            </tr>
            <tr>
              <td>excludeScope</td>
              <td>Specify the visibility scope where Javadoc comments are not checked.</td>
              <td><a href="property_types.html#scope">Scope</a></td>
              <td><code>null</code></td>
              <td>8.21</td>
            </tr>
            <tr>
              <td>allowMissingPropertyJavadoc</td>
              <td>
                Control whether to allow missing Javadoc on accessor methods for
                properties (setters and getters).
              </td>
              <td><a href="property_types.html#boolean">Boolean</a></td>
              <td><code>false</code></td>
              <td>8.21</td>
            </tr>
            <tr>
              <td>ignoreMethodNamesRegex</td>
              <td>ignore method whose names are matching specified regex.</td>
              <td><a href="property_types.html#regexp">Regular Expression</a></td>
              <td><code>null</code></td>
              <td>8.21</td>
            </tr>
            <tr>
              <td>tokens</td>
              <td>tokens to check</td>

              <td>
                subset of tokens
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#METHOD_DEF">
                  METHOD_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CTOR_DEF">
                  CTOR_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_FIELD_DEF">
                  ANNOTATION_FIELD_DEF</a>.
              </td>
              <td>
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#METHOD_DEF">
                  METHOD_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CTOR_DEF">
                  CTOR_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_FIELD_DEF">
                  ANNOTATION_FIELD_DEF</a>.
              </td>
              <td>8.21</td>
            </tr>
          </table>
        </div>
      </subsection>

      <subsection name="Examples" id="MissingJavadocMethod_Examples">
        <p>
          To configure the default check:
        </p>
        <source>
&lt;module name="MissingJavadocMethod"/&gt;
        </source>

        <p>
          To configure the check for <code>private</code>
          scope:
        </p>
        <source>
&lt;module name="MissingJavadocMethod"&gt;
  &lt;property name="scope" value="private"/&gt;
&lt;/module&gt;
        </source>

        <p>
          To configure the check for methods which are in <code>private</code>,
          but not in <code>protected</code> scope:
        </p>
        <source>
&lt;module name="MissingJavadocMethod"&gt;
  &lt;property name="scope" value="private"/&gt;
  &lt;property name="excludeScope" value="protected"/&gt;
&lt;/module&gt;
        </source>

        <p>
          To configure the check for ignoring methods named <code>foo(),foo1(),foo2()</code>, etc.:
        </p>
        <source>
&lt;module name="MissingJavadocMethod"&gt;
  &lt;property name="ignoreMethodNamesRegex" value="^foo.*$"/&gt;
&lt;/module&gt;
        </source>
      </subsection>

      <subsection name="Example of Usage" id="MissingJavadocMethod_Example_of_Usage">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources+filename%3Agoogle_checks.xml+repo%3Acheckstyle%2Fcheckstyle+MissingJavadocMethod">
            Google Style</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources+filename%3Asun_checks.xml+repo%3Acheckstyle%2Fcheckstyle+MissingJavadocMethod">
            Sun Style</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Aconfig+filename%3Acheckstyle_checks.xml+repo%3Acheckstyle%2Fcheckstyle+MissingJavadocMethod">
            Checkstyle Style</a>
          </li>
        </ul>
      </subsection>

      <subsection name="Violation Messages" id="MissingJavadocMethod_Violation_Messages">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.missing%22">
            javadoc.missing</a>
          </li>
        </ul>
        <p>
          All messages can be customized if the default message doesn't suit you.
          Please <a href="config.html#Custom_messages">see the documentation</a> to learn how to.
        </p>
      </subsection>

      <subsection name="Package" id="MissingJavadocMethod_Package">
        <p>
          com.puppycrawl.tools.checkstyle.checks.javadoc
        </p>
      </subsection>

      <subsection name="Parent Module" id="MissingJavadocMethod_Parent_Module">
        <p>
          <a href="config.html#TreeWalker">TreeWalker</a>
        </p>
      </subsection>
    </section>

    <section name="MissingJavadocPackage">
      <p>Since Checkstyle 8.22</p>
      <subsection name="Description" id="MissingJavadocPackage_Description">
        <p>
            Checks for missing Javadoc comments in package-info.java files.
        </p>

        <p>
          Rationale: description and other related documentation for a package can be written up
          in the package-info.java file and it gets used in the production of the Javadocs.
          See <a href="https://docs.oracle.com/javase/8/docs/technotes/tools/windows/javadoc.html#packagecomment">
          link</a> for more info.
        </p>
      </subsection>

      <subsection name="Examples" id="MissingJavadocPackage_Examples">
        <p>
            To configure the check:
        </p>
        <source>
&lt;module name="MissingJavadocPackage"/&gt;
        </source>
        <p>Example:</p>
        <source>
/**
* Provides API classes
*/
package com.checkstyle.api; // no violation
/*
* Block comment is not a javadoc
*/
package com.checkstyle.api; // violation
        </source>
      </subsection>

      <subsection name="Example of Usage" id="MissingJavadocPackage_Example_of_Usage">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Aconfig+filename%3Acheckstyle_checks.xml+repo%3Acheckstyle%2Fcheckstyle+MissingJavadocPackage">
                Checkstyle Style</a>
          </li>
        </ul>
      </subsection>

      <subsection name="Violation Messages" id="MissingJavadocPackage_Violation_Messages">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22package.javadoc.missing%22">
                package.javadoc.missing</a>
          </li>
        </ul>
        <p>
            All messages can be customized if the default message doesn't suit you.
            Please <a href="config.html#Custom_messages">see the documentation</a> to learn how to.
        </p>
      </subsection>

      <subsection name="Package" id="MissingJavadocPackage_Package">
        <p>
          com.puppycrawl.tools.checkstyle.checks.javadoc
        </p>
      </subsection>

      <subsection name="Parent Module" id="MissingJavadocPackage_Parent_Module">
        <p>
          <a href="config.html#TreeWalker">TreeWalker</a>
        </p>
      </subsection>
    </section>

    <section name="MissingJavadocType">
      <p>Since Checkstyle 8.20</p>
      <subsection name="Description" id="MissingJavadocType_Description">
        <p>
          Checks for missing Javadoc comments for class, enum, interface, and annotation
          interface definitions. The scope to verify is specified using the <code>Scope</code>
          class and defaults to <code>Scope.PUBLIC</code>. To verify
          another scope, set property scope to one of the
          <code>Scope</code> constants.
        </p>
      </subsection>

      <subsection name="Properties" id="MissingJavadocType_Properties">
        <div class="wrapper">
          <table>
            <tr>
              <th>name</th>
              <th>description</th>
              <th>type</th>
              <th>default value</th>
              <th>since</th>
            </tr>
            <tr>
              <td>scope</td>
              <td>specify the visibility scope where Javadoc comments are checked.</td>
              <td><a href="property_types.html#scope">Scope</a></td>
              <td><code>public</code></td>
              <td>8.20</td>
            </tr>
            <tr>
              <td>excludeScope</td>
              <td>specify the visibility scope where Javadoc comments are not checked.</td>
              <td><a href="property_types.html#scope">Scope</a></td>
              <td><code>null</code></td>
              <td>8.20</td>
            </tr>
            <tr>
              <td>skipAnnotations</td>
              <td>
                specify the list of annotations that allow missed documentation.
                Only short names are allowed, e.g. <code>Generated</code>.
              </td>
              <td><a href="property_types.html#stringSet">String Set</a></td>
              <td><code>Generated</code></td>
              <td>8.20</td>
            </tr>
            <tr>
              <td>tokens</td>
              <td>tokens to check</td>
              <td>
                subset of tokens
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF">
                  INTERFACE_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CLASS_DEF">
                  CLASS_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_DEF">
                  ENUM_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_DEF">
                  ANNOTATION_DEF</a>.
              </td>
              <td>
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF">
                  INTERFACE_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CLASS_DEF">
                  CLASS_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_DEF">
                  ENUM_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_DEF">
                  ANNOTATION_DEF</a>.
              </td>
              <td>8.20</td>
            </tr>
          </table>
        </div>
      </subsection>

      <subsection name="Examples" id="MissingJavadocType_Examples">
        <p>
          To configure the default check to make sure all public class, enum, interface, and
          annotation interface, definitions have javadocs:
        </p>
        <source>
&lt;module name="MissingJavadocType"/&gt;
        </source>

        <p>Example:</p>
        <div class="wrapper">
          <pre>
public class PublicClass {} // violation
private class PublicClass {}
protected class PublicClass {}
class PackagePrivateClass {}
          </pre>
        </div>

        <p>
          To configure the check for <code>private</code> scope:
        </p>
        <source>
&lt;module name="MissingJavadocType"&gt;
  &lt;property name="scope" value="private"/&gt;
&lt;/module&gt;
        </source>

        <p>Example:</p>
        <div class="wrapper">
          <pre>
public class PublicClass {} // violation
private class PublicClass {} // violation
protected class PublicClass {} // violation
class PackagePrivateClass {} // violation
          </pre>
        </div>

        <p>
          To configure the check for <code>private</code> classes only:
        </p>
        <source>
&lt;module name="MissingJavadocType"&gt;
  &lt;property name="scope" value="private"/&gt;
  &lt;property name="excludeScope" value="package"/&gt;
&lt;/module&gt;
        </source>

        <p>Example:</p>
        <div class="wrapper">
          <pre>
public class PublicClass {}
private class PublicClass {} // violation
protected class PublicClass {}
class PackagePrivateClass {}
          </pre>
        </div>

        <p>
          Example that allows missing comments for classes annotated with
          <code>@SpringBootApplication</code> and <code>@Configuration</code>:
        </p>
        <source>
@SpringBootApplication // no violations about missing comment on class
public class Application {}

@Configuration // no violations about missing comment on class
class DatabaseConfiguration {}
        </source>
        <p>Use following configuration:</p>
        <source>
&lt;module name="MissingJavadocType"&gt;
  &lt;property name="skipAnnotations" value="SpringBootApplication,Configuration"/&gt;
&lt;/module&gt;
        </source>
      </subsection>

      <subsection name="Example of Usage" id="MissingJavadocType_Example_of_Usage">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Aconfig+filename%3Acheckstyle_checks.xml+repo%3Acheckstyle%2Fcheckstyle+MissingJavadocType">
            Checkstyle Style</a>
          </li>
        </ul>
      </subsection>

      <subsection name="Violation Messages" id="MissingJavadocType_Violation_Messages">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.missing%22">
            javadoc.missing</a>
          </li>
        </ul>
        <p>
          All messages can be customized if the default message doesn't suit you.
          Please <a href="config.html#Custom_messages">see the documentation</a> to learn how to.
        </p>
      </subsection>

      <subsection name="Package" id="MissingJavadocType_Package">
        <p>
          com.puppycrawl.tools.checkstyle.checks.javadoc
        </p>
      </subsection>

      <subsection name="Parent Module" id="MissingJavadocType_Parent_Module">
        <p>
          <a href="config.html#TreeWalker">TreeWalker</a>
        </p>
      </subsection>
    </section>

    <section name="NonEmptyAtclauseDescription">
      <p>Since Checkstyle 6.0</p>
      <subsection name="Description" id="NonEmptyAtclauseDescription_Description">
        <p>
          Checks that the at-clause tag is followed by description.
        </p>
      </subsection>

      <subsection name="Properties" id="NonEmptyAtclauseDescription_Properties">
        <div class="wrapper">
          <table>
            <tr>
              <th>name</th>
              <th>description</th>
              <th>type</th>
              <th>default value</th>
              <th>since</th>
            </tr>
            <tr>
              <td>violateExecutionOnNonTightHtml</td>
              <td>
                Control when to print violations if the Javadoc being examined by this check
                violates the tight html rules defined at
                <a href="writingjavadocchecks.html#Tight-HTML_rules">Tight-HTML Rules</a>.</td>
              <td><a href="property_types.html#boolean">Boolean</a></td>
              <td><code>false</code></td>
              <td>8.3</td>
            </tr>
            <tr>
              <td>javadocTokens</td>
              <td>javadoc tokens to check</td>
              <td>subset of javadoc tokens
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/JavadocTokenTypes.html#PARAM_LITERAL">
                  PARAM_LITERAL</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/JavadocTokenTypes.html#RETURN_LITERAL">
                  RETURN_LITERAL</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/JavadocTokenTypes.html#THROWS_LITERAL">
                  THROWS_LITERAL</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/JavadocTokenTypes.html#EXCEPTION_LITERAL">
                  EXCEPTION_LITERAL</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/JavadocTokenTypes.html#DEPRECATED_LITERAL">
                  DEPRECATED_LITERAL</a>.
              </td>
              <td>
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/JavadocTokenTypes.html#PARAM_LITERAL">
                  PARAM_LITERAL</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/JavadocTokenTypes.html#RETURN_LITERAL">
                  RETURN_LITERAL</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/JavadocTokenTypes.html#THROWS_LITERAL">
                  THROWS_LITERAL</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/JavadocTokenTypes.html#EXCEPTION_LITERAL">
                  EXCEPTION_LITERAL</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/JavadocTokenTypes.html#DEPRECATED_LITERAL">
                  DEPRECATED_LITERAL</a>.
              </td>
              <td>7.3</td>
            </tr>
          </table>
        </div>
      </subsection>

      <subsection name="Examples" id="NonEmptyAtclauseDescription_Examples">
        <p>
          Default configuration that will check <code>@param</code>, <code>@return</code>,
          <code>@throws</code>, <code>@deprecated</code>:
        </p>
        <source>
&lt;module name=&quot;NonEmptyAtclauseDescription&quot;/&gt;
        </source>
        <p>
          To configure the check to validate only <code>@param</code> and
          <code>@return</code> tags:
        </p>
        <source>
&lt;module name=&quot;NonEmptyAtclauseDescription&quot;&gt;
  &lt;property name="javadocTokens" value="PARAM_LITERAL,RETURN_LITERAL"/&gt;
&lt;/module&gt;
        </source>
      </subsection>

      <subsection name="Example of Usage" id="NonEmptyAtclauseDescription_Example_of_Usage">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources+filename%3Agoogle_checks.xml+repo%3Acheckstyle%2Fcheckstyle+NonEmptyAtclauseDescription">
            Google Style</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Aconfig+filename%3Acheckstyle_checks.xml+repo%3Acheckstyle%2Fcheckstyle+NonEmptyAtclauseDescription">
            Checkstyle Style</a>
          </li>
        </ul>
      </subsection>

      <subsection name="Violation Messages" id="NonEmptyAtclauseDescription_Violation_Messages">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.missed.html.close%22">
            javadoc.missed.html.close</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.parse.rule.error%22">
            javadoc.parse.rule.error</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.wrong.singleton.html.tag%22">
            javadoc.wrong.singleton.html.tag</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22non.empty.atclause%22">
            non.empty.atclause</a>
          </li>
        </ul>
        <p>
          All messages can be customized if the default message doesn't suit you.
          Please <a href="config.html#Custom_messages">see the documentation</a> to learn how to.
        </p>
      </subsection>

      <subsection name="Package" id="NonEmptyAtclauseDescription_Package">
        <p>
          com.puppycrawl.tools.checkstyle.checks.javadoc
        </p>
      </subsection>

      <subsection name="Parent Module" id="NonEmptyAtclauseDescription_Parent_Module">
        <p>
          <a href="config.html#TreeWalker">TreeWalker</a>
        </p>
      </subsection>
    </section>

    <section name="SingleLineJavadoc">
      <p>Since Checkstyle 6.0</p>
      <subsection name="Description" id="SingleLineJavadoc_Description">
        <p>
           Checks that a Javadoc block can fit in a single line and doesn't
           contain at-clauses. Javadoc comment that contains at least one at-clause
           should be formatted in a few lines.
        </p>
      </subsection>

      <subsection name="Properties" id="SingleLineJavadoc_Properties">
        <div class="wrapper">
          <table>
            <tr>
              <th>name</th>
              <th>description</th>
              <th>type</th>
              <th>default value</th>
              <th>since</th>
            </tr>
            <tr>
              <td>violateExecutionOnNonTightHtml</td>
              <td>
                Control when to print violations if the Javadoc being examined by this check
                violates the tight html rules defined at
                <a href="writingjavadocchecks.html#Tight-HTML_rules">Tight-HTML Rules</a>.</td>
              <td><a href="property_types.html#boolean">Boolean</a></td>
              <td><code>false</code></td>
              <td>8.3</td>
            </tr>
            <tr>
              <td>ignoredTags</td>
              <td>Specify at-clauses which are ignored by the check.</td>
              <td><a href="property_types.html#stringSet">String Set</a></td>
              <td><code>{}</code></td>
              <td>6.8</td>
            </tr>
            <tr>
              <td>ignoreInlineTags</td>
              <td>Control whether inline tags must be ignored.</td>
              <td><a href="property_types.html#boolean">Boolean</a></td>
              <td><code>true</code></td>
              <td>6.8</td>
            </tr>
          </table>
        </div>
      </subsection>

      <subsection name="Examples" id="SingleLineJavadoc_Examples">
        <p>
          To configure the check:
        </p>
        <source>
&lt;module name=&quot;SingleLineJavadoc&quot;/&gt;
        </source>
        <p>
          To configure the check with a list of ignored at-clauses and make
          inline at-clauses not ignored:
        </p>
        <source>
&lt;module name=&quot;SingleLineJavadoc&quot;&gt;
  &lt;property name=&quot;ignoredTags&quot; value=&quot;&#64;inheritDoc, &#64;see&quot;/&gt;
  &lt;property name=&quot;ignoreInlineTags&quot; value=&quot;false&quot;/&gt;
&lt;/module&gt;
        </source>
      </subsection>

      <subsection name="Example of Usage" id="SingleLineJavadoc_Example_of_Usage">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources+filename%3Agoogle_checks.xml+repo%3Acheckstyle%2Fcheckstyle+SingleLineJavadoc">
            Google Style</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Aconfig+filename%3Acheckstyle_checks.xml+repo%3Acheckstyle%2Fcheckstyle+SingleLineJavadoc">
            Checkstyle Style</a>
          </li>
        </ul>
      </subsection>

      <subsection name="Violation Messages" id="SingleLineJavadoc_Violation_Messages">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.missed.html.close%22">
            javadoc.missed.html.close</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.parse.rule.error%22">
            javadoc.parse.rule.error</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.wrong.singleton.html.tag%22">
            javadoc.wrong.singleton.html.tag</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22singleline.javadoc%22">
            singleline.javadoc</a>
          </li>
        </ul>
        <p>
          All messages can be customized if the default message doesn't suit you.
          Please <a href="config.html#Custom_messages">see the documentation</a> to learn how to.
        </p>
      </subsection>

      <subsection name="Package" id="SingleLineJavadoc_Package">
        <p>
          com.puppycrawl.tools.checkstyle.checks.javadoc
        </p>
      </subsection>

      <subsection name="Parent Module" id="SingleLineJavadoc_Parent_Module">
        <p>
          <a href="config.html#TreeWalker">TreeWalker</a>
        </p>
      </subsection>
    </section>

   <section name="SummaryJavadoc">
     <p>Since Checkstyle 6.0</p>
     <subsection name="Description" id="SummaryJavadoc_Description">
        <p>
          Checks that
          <a href="https://www.oracle.com/technetwork/java/javase/documentation/index-137868.html#firstsentence">
          Javadoc summary sentence</a> does not contain phrases that are not recommended to use.
          Summaries that contain only the <code>{@inheritDoc}</code> tag are skipped. Check also
          violate Javadoc that does not contain first sentence.
        </p>
      </subsection>

      <subsection name="Properties" id="SummaryJavadoc_Properties">
        <div class="wrapper">
          <table>
            <tr>
              <th>name</th>
              <th>description</th>
              <th>type</th>
              <th>default value</th>
              <th>since</th>
            </tr>
            <tr>
              <td>violateExecutionOnNonTightHtml</td>
              <td>
                Control when to print violations if the Javadoc being examined by this check
                violates the tight html rules defined at
                <a href="writingjavadocchecks.html#Tight-HTML_rules">Tight-HTML Rules</a>.</td>
              <td><a href="property_types.html#boolean">Boolean</a></td>
              <td><code>false</code></td>
              <td>8.3</td>
            </tr>
            <tr>
              <td>forbiddenSummaryFragments</td>
              <td>Specify the regexp for forbidden summary fragments.</td>
              <td><a href="property_types.html#regexp">Regular Expression</a></td>
              <td><code>"^$" (empty)</code></td>
              <td>6.0</td>
            </tr>
            <tr>
              <td>period</td>
              <td>Specify the period symbol at the end of first javadoc sentence.</td>
              <td><a href="property_types.html#string">String</a></td>
              <td><code>"."</code></td>
              <td>6.2</td>
            </tr>
          </table>
        </div>
      </subsection>

      <subsection name="Examples" id="SummaryJavadoc_Examples">
        <p>
          By default Check validate that first sentence is not empty and first sentence is not
          missing:
        </p>
        <source>
&lt;module name=&quot;SummaryJavadocCheck&quot;/&gt;
        </source>
        <p>
          Example of <code>{@inheritDoc}</code> without summary.
        </p>
        <source>
public class Test extends Exception {
//Valid
  /**
   * {@inheritDoc}
   */
  public String ValidFunction(){
    return "";
  }
  //Violation
  /**
   *
   */
  public String InvalidFunction(){
    return "";
  }
}
        </source>
        <p>
          To ensure that summary do not contain phrase like "This method returns", use
          following config:
        </p>
        <source>
&lt;module name=&quot;SummaryJavadocCheck&quot;&gt;
  &lt;property name=&quot;forbiddenSummaryFragments&quot;
    value=&quot;^This method returns.*&quot;/&gt;
&lt;/module&gt;
        </source>
        <p>
          To specify period symbol at the end of first javadoc sentence:
        </p>
        <source>
&lt;module name=&quot;SummaryJavadocCheck&quot;&gt;
  &lt;property name=&quot;period&quot; value="。"/&gt;
&lt;/module&gt;
        </source>
        <p>
          Example of period property.
        </p>

        <source>
public class TestClass {
  /**
  * This is invalid java doc.
  */
  void invalidJavaDocMethod() {
  }
  /**
  * This is valid java doc。
  */
  void validJavaDocMethod() {
  }
}
        </source>
     </subsection>
     <subsection name="Example of Usage" id="SummaryJavadoc_Example_of_Usage">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources+filename%3Agoogle_checks.xml+repo%3Acheckstyle%2Fcheckstyle+SummaryJavadoc">
            Google Style</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Aconfig+filename%3Acheckstyle_checks.xml+repo%3Acheckstyle%2Fcheckstyle+SummaryJavadoc">
            Checkstyle Style</a>
          </li>
        </ul>
      </subsection>

      <subsection name="Violation Messages" id="SummaryJavadoc_Violation_Messages">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.missed.html.close%22">
            javadoc.missed.html.close</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.parse.rule.error%22">
            javadoc.parse.rule.error</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.wrong.singleton.html.tag%22">
            javadoc.wrong.singleton.html.tag</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22summary.first.sentence%22">
            summary.first.sentence</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22summary.javaDoc%22">
            summary.javaDoc</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22summary.javaDoc.missing%22">
              summary.javaDoc.missing</a>
          </li>
        </ul>
        <p>
          All messages can be customized if the default message doesn't suit you.
          Please <a href="config.html#Custom_messages">see the documentation</a> to learn how to.
        </p>
      </subsection>

      <subsection name="Package" id="SummaryJavadoc_Package">
        <p>
          com.puppycrawl.tools.checkstyle.checks.javadoc
        </p>
      </subsection>

      <subsection name="Parent Module" id="SummaryJavadoc_Parent_Module">
        <p>
          <a href="config.html#TreeWalker">TreeWalker</a>
        </p>
      </subsection>
    </section>

    <section name="WriteTag">
      <p>Since Checkstyle 4.2</p>
      <subsection name="Description" id="WriteTag_Description">
        <p>
         Requires user defined Javadoc tag to be present in Javadoc comment with
         defined format. To define the format for a tag, set property tagFormat to a regular
         expression. Property tagSeverity is used for severity of events when the tag exists.
        </p>
      </subsection>

      <subsection name="Properties" id="WriteTag_Properties">
        <div class="wrapper">
          <table>
            <tr>
              <th>name</th>
              <th>description</th>
              <th>type</th>
              <th>default value</th>
              <th>since</th>
            </tr>
            <tr>
              <td>tag</td>
              <td>Specify the name of tag.</td>
              <td><a href="property_types.html#string">String</a></td>
             <td><code>null</code></td>
             <td>4.2</td>
            </tr>
            <tr>
              <td>tagFormat</td>
              <td>Specify the regexp to match tag content.</td>
              <td><a href="property_types.html#regexp">Regular Expression</a></td>
              <td><code>null</code></td>
              <td>4.2</td>
            </tr>
            <tr>
              <td>tagSeverity</td>
              <td>Specify the severity level when tag is found and printed.</td>
              <td><a href="property_types.html#severity">Severity</a></td>
              <td><code>info</code></td>
              <td>4.2</td>
            </tr>
            <tr>
              <td>tokens</td>
              <td>tokens to check</td>
              <td>subset of tokens
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF">
                  INTERFACE_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CLASS_DEF">
                  CLASS_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_DEF">
                  ENUM_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_DEF">
                  ANNOTATION_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#METHOD_DEF">
                  METHOD_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CTOR_DEF">
                  CTOR_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_CONSTANT_DEF">
                  ENUM_CONSTANT_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_FIELD_DEF">
                  ANNOTATION_FIELD_DEF</a>.
              </td>
              <td>
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF">
                  INTERFACE_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CLASS_DEF">
                  CLASS_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_DEF">
                  ENUM_DEF</a>,
                <a href="apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_DEF">
                  ANNOTATION_DEF</a>.
              </td>
              <td>4.2</td>
            </tr>
          </table>
        </div>
      </subsection>

      <subsection name="Examples" id="WriteTag_Examples">
        <p>
        To configure the check for printing author name:
        </p>

        <source>
&lt;module name="WriteTag"&gt;
  &lt;property name="tag" value="@author"/&gt;
  &lt;property name="tagFormat" value="\S"/&gt;
&lt;/module&gt;
        </source>

        <p>
         To configure the check to print warnings if an
         "@incomplete" tag is found, and not print anything if it is not found:
        </p>

        <source>
&lt;module name="WriteTag"&gt;
  &lt;property name="tag" value="@incomplete"/&gt;
  &lt;property name="tagFormat" value="\S"/&gt;
  &lt;property name="severity" value="ignore"/&gt;
  &lt;property name="tagSeverity" value="warning"/&gt;
&lt;/module&gt;
        </source>
      </subsection>

      <subsection name="Example of Usage" id="WriteTag_Example_of_Usage">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Aconfig+filename%3Acheckstyle_checks.xml+repo%3Acheckstyle%2Fcheckstyle+WriteTag">
            Checkstyle Style</a>
          </li>
        </ul>
      </subsection>

      <subsection name="Violation Messages" id="WriteTag_Violation_Messages">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.writeTag%22">
            javadoc.writeTag</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22type.missingTag%22">
            type.missingTag</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc+filename%3Amessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22type.tagFormat%22">
            type.tagFormat</a>
          </li>
        </ul>
        <p>
          All messages can be customized if the default message doesn't suit you.
          Please <a href="config.html#Custom_messages">see the documentation</a> to learn how to.
        </p>
      </subsection>

      <subsection name="Package" id="WriteTag_Package">
        <p>
          com.puppycrawl.tools.checkstyle.checks.javadoc
        </p>
      </subsection>

      <subsection name="Parent Module" id="WriteTag_Parent_Module">
        <p>
          <a href="config.html#TreeWalker">TreeWalker</a>
        </p>
      </subsection>
    </section>

  </body>
</document>
