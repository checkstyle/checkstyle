COMPILATION_UNIT -> COMPILATION_UNIT [2:0]
|--PACKAGE_DEF -> package [2:0]
|   |--ANNOTATIONS -> ANNOTATIONS [2:47]
|   |--DOT -> . [2:47]
|   |   |--DOT -> . [2:39]
|   |   |   |--DOT -> . [2:28]
|   |   |   |   |--DOT -> . [2:22]
|   |   |   |   |   |--DOT -> . [2:11]
|   |   |   |   |   |   |--IDENT -> com [2:8]
|   |   |   |   |   |   `--IDENT -> puppycrawl [2:12]
|   |   |   |   |   `--IDENT -> tools [2:23]
|   |   |   |   `--IDENT -> checkstyle [2:29]
|   |   |   `--IDENT -> grammar [2:40]
|   |   `--IDENT -> java21 [2:48]
|   `--SEMI -> ; [2:54]
`--CLASS_DEF -> CLASS_DEF [4:0]
    |--MODIFIERS -> MODIFIERS [4:0]
    |   `--LITERAL_PUBLIC -> public [4:0]
    |--LITERAL_CLASS -> class [4:7]
    |--IDENT -> InputTextBlockTemplateInlineCodeTricky [4:13]
    `--OBJBLOCK -> OBJBLOCK [4:52]
        |--LCURLY -> { [4:52]
        |--METHOD_DEF -> METHOD_DEF [5:4]
        |   |--MODIFIERS -> MODIFIERS [5:4]
        |   |--TYPE -> TYPE [5:4]
        |   |   `--IDENT -> String [5:4]
        |   |--IDENT -> genSource [5:11]
        |   |--LPAREN -> ( [5:20]
        |   |--PARAMETERS -> PARAMETERS [5:21]
        |   |--RPAREN -> ) [5:21]
        |   `--SLIST -> { [5:23]
        |       |--LITERAL_RETURN -> return [6:8]
        |       |   |--EXPR -> EXPR [6:18]
        |       |   |   `--DOT -> . [6:18]
        |       |   |       |--IDENT -> STR [6:15]
        |       |   |       `--TEXT_BLOCK_TEMPLATE_BEGIN -> """ [6:20]
        |       |   |           |--TEXT_BLOCK_TEMPLATE_CONTENT -> \n            import java.util.FormatProcessor;\n            import java.util.Locale;\n\n            public class StringTemplateTest$ {\n                static final FormatProcessor FMT = FormatProcessor.create(Locale.US);\n                static String STR = "this is static String";\n                static char C = 'c';\n                static Character CHAR = 'C';\n                static long L = -12345678910l;\n                static Long LONG = 9876543210l;\n                static int I = 42;\n                static Integer INT = -49;\n                static boolean BO = true;\n                static Boolean BOOL = false;\n                static short S = 13;\n                static Short SHORT = -17;\n                static byte BY = -3;\n                static Byte BYTE = 12;\n                static float F = 4.789f;\n                static Float FLOAT = -0.000006f;\n                static double D = 6545745.6734654563;\n                static Double DOUBLE = -4323.7645676574;\n\n                public static void run(java.util.List<String> log) {\n                    runGeneral(log);\n                    runCharacter(log);\n                    runIntegral(log);\n                    runBigInt(log);\n                    runFloating(log);\n                    runBigFloat(log);\n                    runDate(log);\n                }\n                public static void runGeneral(java.util.List<String> log) {\n                     [6:23]
        |       |   |           |--EMBEDDED_EXPRESSION_BEGIN -> \{ [6:1443]
        |       |   |           |--EMBEDDED_EXPRESSION -> EMBEDDED_EXPRESSION [40:35]
        |       |   |           |   `--METHOD_CALL -> ( [40:35]
        |       |   |           |       |--IDENT -> genFragments [40:23]
        |       |   |           |       |--ELIST -> ELIST [40:44]
        |       |   |           |       |   `--EXPR -> EXPR [40:44]
        |       |   |           |       |       `--DOT -> . [40:44]
        |       |   |           |       |           |--IDENT -> Category [40:36]
        |       |   |           |       |           `--IDENT -> GENERAL [40:45]
        |       |   |           |       `--RPAREN -> ) [40:52]
        |       |   |           |--EMBEDDED_EXPRESSION_END -> } [40:54]
        |       |   |           |--EMBEDDED_EXPRESSION -> EMBEDDED_EXPRESSION [43:35]
        |       |   |           |   `--METHOD_CALL -> ( [43:35]
        |       |   |           |       |--IDENT -> genFragments [43:23]
        |       |   |           |       |--ELIST -> ELIST [43:44]
        |       |   |           |       |   `--EXPR -> EXPR [43:44]
        |       |   |           |       |       `--DOT -> . [43:44]
        |       |   |           |       |           |--IDENT -> Category [43:36]
        |       |   |           |       |           `--IDENT -> CHARACTER [43:45]
        |       |   |           |       `--RPAREN -> ) [43:54]
        |       |   |           |--TEXT_BLOCK_TEMPLATE_CONTENT -> \n                }\n                public static void runCharacter(java.util.List<String> log) {\n                     [40:55]
        |       |   |           |--EMBEDDED_EXPRESSION_BEGIN -> \{ [40:172]
        |       |   |           |--EMBEDDED_EXPRESSION_END -> } [43:56]
        |       |   |           |--EMBEDDED_EXPRESSION -> EMBEDDED_EXPRESSION [46:35]
        |       |   |           |   `--METHOD_CALL -> ( [46:35]
        |       |   |           |       |--IDENT -> genFragments [46:23]
        |       |   |           |       |--ELIST -> ELIST [46:44]
        |       |   |           |       |   `--EXPR -> EXPR [46:44]
        |       |   |           |       |       `--DOT -> . [46:44]
        |       |   |           |       |           |--IDENT -> Category [46:36]
        |       |   |           |       |           `--IDENT -> INTEGRAL [46:45]
        |       |   |           |       `--RPAREN -> ) [46:53]
        |       |   |           |--TEXT_BLOCK_TEMPLATE_CONTENT -> \n                }\n                public static void runIntegral(java.util.List<String> log) {\n                     [43:57]
        |       |   |           |--EMBEDDED_EXPRESSION_BEGIN -> \{ [43:173]
        |       |   |           |--EMBEDDED_EXPRESSION_END -> } [46:55]
        |       |   |           |--EMBEDDED_EXPRESSION -> EMBEDDED_EXPRESSION [49:35]
        |       |   |           |   `--METHOD_CALL -> ( [49:35]
        |       |   |           |       |--IDENT -> genFragments [49:23]
        |       |   |           |       |--ELIST -> ELIST [49:44]
        |       |   |           |       |   `--EXPR -> EXPR [49:44]
        |       |   |           |       |       `--DOT -> . [49:44]
        |       |   |           |       |           |--IDENT -> Category [49:36]
        |       |   |           |       |           `--IDENT -> BIG_INT [49:45]
        |       |   |           |       `--RPAREN -> ) [49:52]
        |       |   |           |--TEXT_BLOCK_TEMPLATE_CONTENT -> \n                }\n                public static void runBigInt(java.util.List<String> log) {\n                     [46:56]
        |       |   |           |--EMBEDDED_EXPRESSION_BEGIN -> \{ [46:170]
        |       |   |           |--EMBEDDED_EXPRESSION_END -> } [49:54]
        |       |   |           |--EMBEDDED_EXPRESSION -> EMBEDDED_EXPRESSION [52:35]
        |       |   |           |   `--METHOD_CALL -> ( [52:35]
        |       |   |           |       |--IDENT -> genFragments [52:23]
        |       |   |           |       |--ELIST -> ELIST [52:44]
        |       |   |           |       |   `--EXPR -> EXPR [52:44]
        |       |   |           |       |       `--DOT -> . [52:44]
        |       |   |           |       |           |--IDENT -> Category [52:36]
        |       |   |           |       |           `--IDENT -> FLOATING [52:45]
        |       |   |           |       `--RPAREN -> ) [52:53]
        |       |   |           |--TEXT_BLOCK_TEMPLATE_CONTENT -> \n                }\n                public static void runFloating(java.util.List<String> log) {\n                     [49:55]
        |       |   |           |--EMBEDDED_EXPRESSION_BEGIN -> \{ [49:171]
        |       |   |           |--EMBEDDED_EXPRESSION_END -> } [52:55]
        |       |   |           |--EMBEDDED_EXPRESSION -> EMBEDDED_EXPRESSION [55:35]
        |       |   |           |   `--METHOD_CALL -> ( [55:35]
        |       |   |           |       |--IDENT -> genFragments [55:23]
        |       |   |           |       |--ELIST -> ELIST [55:44]
        |       |   |           |       |   `--EXPR -> EXPR [55:44]
        |       |   |           |       |       `--DOT -> . [55:44]
        |       |   |           |       |           |--IDENT -> Category [55:36]
        |       |   |           |       |           `--IDENT -> BIG_FLOAT [55:45]
        |       |   |           |       `--RPAREN -> ) [55:54]
        |       |   |           |--TEXT_BLOCK_TEMPLATE_CONTENT -> \n                }\n                public static void runBigFloat(java.util.List<String> log) {\n                     [52:56]
        |       |   |           |--EMBEDDED_EXPRESSION_BEGIN -> \{ [52:172]
        |       |   |           |--EMBEDDED_EXPRESSION_END -> } [55:56]
        |       |   |           |--EMBEDDED_EXPRESSION -> EMBEDDED_EXPRESSION [58:35]
        |       |   |           |   `--METHOD_CALL -> ( [58:35]
        |       |   |           |       |--IDENT -> genFragments [58:23]
        |       |   |           |       |--ELIST -> ELIST [58:44]
        |       |   |           |       |   `--EXPR -> EXPR [58:44]
        |       |   |           |       |       `--DOT -> . [58:44]
        |       |   |           |       |           |--IDENT -> Category [58:36]
        |       |   |           |       |           `--IDENT -> DATE [58:45]
        |       |   |           |       `--RPAREN -> ) [58:49]
        |       |   |           |--TEXT_BLOCK_TEMPLATE_CONTENT -> \n                }\n                public static void runDate(java.util.List<String> log) {\n                     [55:57]
        |       |   |           |--EMBEDDED_EXPRESSION_BEGIN -> \{ [55:169]
        |       |   |           |--EMBEDDED_EXPRESSION_END -> } [58:51]
        |       |   |           |--TEXT_BLOCK_TEMPLATE_CONTENT -> \n                }\n                static void test(String fmt, String format, String expression, Object value, java.util.List<String> log) {\n                    var formatted = String.format(java.util.Locale.US, format, value);\n                    if (!fmt.equals(formatted)) {\n                        log.add("  format: '%s' expression: '%s' value: '%s' expected: '%s' found: '%s'".formatted(format, expression, value, formatted, fmt));\n                    }\n                }\n            }\n             [58:52]
        |       |   |           `--STRING_TEMPLATE_END -> """ [58:557]
        |       |   `--SEMI -> ; [67:16]
        |       `--RCURLY -> } [68:4]
        |--METHOD_DEF -> METHOD_DEF [70:4]
        |   |--MODIFIERS -> MODIFIERS [70:4]
        |   |   `--LITERAL_PRIVATE -> private [70:4]
        |   |--TYPE -> TYPE [70:12]
        |   |   `--IDENT -> String [70:12]
        |   |--IDENT -> genFragments [70:19]
        |   |--LPAREN -> ( [70:31]
        |   |--PARAMETERS -> PARAMETERS [70:32]
        |   |   `--PARAMETER_DEF -> PARAMETER_DEF [70:32]
        |   |       |--MODIFIERS -> MODIFIERS [70:32]
        |   |       |--TYPE -> TYPE [70:32]
        |   |       |   `--IDENT -> Category [70:32]
        |   |       `--IDENT -> category [70:41]
        |   |--RPAREN -> ) [70:49]
        |   `--SLIST -> { [70:51]
        |       |--LITERAL_RETURN -> return [71:8]
        |       |   |--EXPR -> EXPR [71:15]
        |       |   |   `--STRING_LITERAL -> "whatever" [71:15]
        |       |   `--SEMI -> ; [71:25]
        |       `--RCURLY -> } [72:4]
        |--ENUM_DEF -> ENUM_DEF [74:4]
        |   |--MODIFIERS -> MODIFIERS [74:4]
        |   |   |--LITERAL_PRIVATE -> private [74:4]
        |   |   `--LITERAL_STATIC -> static [74:12]
        |   |--ENUM -> enum [74:19]
        |   |--IDENT -> Category [74:24]
        |   `--OBJBLOCK -> OBJBLOCK [74:33]
        |       |--LCURLY -> { [74:33]
        |       |--ENUM_CONSTANT_DEF -> ENUM_CONSTANT_DEF [75:8]
        |       |   |--ANNOTATIONS -> ANNOTATIONS [75:8]
        |       |   `--IDENT -> GENERAL [75:8]
        |       |--COMMA -> , [75:15]
        |       |--ENUM_CONSTANT_DEF -> ENUM_CONSTANT_DEF [75:17]
        |       |   |--ANNOTATIONS -> ANNOTATIONS [75:17]
        |       |   `--IDENT -> CHARACTER [75:17]
        |       |--COMMA -> , [75:26]
        |       |--ENUM_CONSTANT_DEF -> ENUM_CONSTANT_DEF [75:28]
        |       |   |--ANNOTATIONS -> ANNOTATIONS [75:28]
        |       |   `--IDENT -> INTEGRAL [75:28]
        |       |--COMMA -> , [75:36]
        |       |--ENUM_CONSTANT_DEF -> ENUM_CONSTANT_DEF [75:38]
        |       |   |--ANNOTATIONS -> ANNOTATIONS [75:38]
        |       |   `--IDENT -> BIG_INT [75:38]
        |       |--COMMA -> , [75:45]
        |       |--ENUM_CONSTANT_DEF -> ENUM_CONSTANT_DEF [75:47]
        |       |   |--ANNOTATIONS -> ANNOTATIONS [75:47]
        |       |   `--IDENT -> FLOATING [75:47]
        |       |--COMMA -> , [75:55]
        |       |--ENUM_CONSTANT_DEF -> ENUM_CONSTANT_DEF [75:57]
        |       |   |--ANNOTATIONS -> ANNOTATIONS [75:57]
        |       |   `--IDENT -> BIG_FLOAT [75:57]
        |       |--COMMA -> , [75:66]
        |       |--ENUM_CONSTANT_DEF -> ENUM_CONSTANT_DEF [75:68]
        |       |   |--ANNOTATIONS -> ANNOTATIONS [75:68]
        |       |   `--IDENT -> DATE [75:68]
        |       |--SEMI -> ; [75:72]
        |       `--RCURLY -> } [76:4]
        `--RCURLY -> } [77:0]
