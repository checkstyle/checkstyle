/*xml
<module name="Checker">
  <module name="TreeWalker">
    <module name="IllegalType">
      <property name="illegalClassNames" value="Boolean, Foo"/>
    </module>
  </module>
</module>
*/

// xdoc section -- start
public class Test {

  public Set<Boolean> set; // violation
  public java.util.List<Map<Boolean, Foo>> list; // violation

  private void method(List<Foo> list, Boolean value) { // violation
    SomeType.<Boolean>foo(); // violation
    final Consumer<Foo> consumer = Foo<Boolean>::foo; // violation
  }

  public <T extends Boolean, U extends Serializable> void typeParam(T a) {} // violation

  public void fullName(java.util.ArrayList<? super Boolean> a) {} // violation

  public abstract Set<Boolean> shortName(Set<? super Boolean> a); // violation

  public Set<? extends Foo> typeArgument() { // violation
    return new TreeSet<Foo<Boolean>>();
  }

}
// xdoc section -- end
