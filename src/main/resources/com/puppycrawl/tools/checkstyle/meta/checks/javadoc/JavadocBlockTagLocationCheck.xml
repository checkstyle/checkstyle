<?xml version="1.0" encoding="UTF-8"?>

<checkstyle-metadata>
  <module>
    <check name="JavadocBlockTagLocation" fully-qualified-name="com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocBlockTagLocationCheck" parent="com.puppycrawl.tools.checkstyle.TreeWalker">
      <description><![CDATA[<p>
 Checks that a
 <a href="https://docs.oracle.com/en/java/javase/11/docs/specs/doc-comment-spec.html#block-tags">
 javadoc block tag</a> appears only at the beginning of a line, ignoring
 leading asterisks and white space. A block tag is a token that starts with
 {@code @} symbol and is preceded by a whitespace. This check ignores block
 tags in comments and inside inline tags {&#64;code } and {&#64;literal }.
 </p>
 <p>
 Rationale: according to
 <a href="https://docs.oracle.com/en/java/javase/11/docs/specs/doc-comment-spec.html#block-tags">
 the specification</a> all javadoc block tags should be placed at the beginning
 of a line. Tags that are not placed at the beginning are treated as plain text.
 To recognize intentional tag placement to text area it is better to escape the
 {@code @} symbol, and all non-escaped tags should be located at the beginning
 of the line. See NOTE section for details on how to escape.
 </p>
 <p>
 To place a tag explicitly as text, escape the {@code @} symbol with HTML entity
 &amp;#64; or place it inside {@code {@code }}, for example:
 </p>
 <pre>
 &#47;**
  * &amp;#64;serial literal in {&#64;code &#64;serial} Javadoc tag.
  *&#47;
 </pre>]]></description>
      <properties>
        <property name="tags" type="java.lang.String[]" default-value="author, deprecated, exception, hidden, param, provides,">
          <description><![CDATA[Specify the javadoc tags to process.]]></description>
        </property>
        <property name="violateExecutionOnNonTightHtml" type="boolean" default-value="false">
          <description><![CDATA[Control when to print violations
 if the Javadoc being examined by this check violates the tight html rules defined at
 <a href="https://checkstyle.org/writingjavadocchecks.html#TightHTML_rules">TightHTML Rules</a>.]]></description>
        </property>
      </properties>
      <message-keys>
        <message-key key="javadoc.blockTagLocation"/>
        <message-key key="javadoc.missed.html.close"/>
        <message-key key="javadoc.parse.rule.error"/>
        <message-key key="javadoc.wrong.singleton.html.tag"/>
      </message-keys>
    </check>
  </module>
</checkstyle-metadata>
