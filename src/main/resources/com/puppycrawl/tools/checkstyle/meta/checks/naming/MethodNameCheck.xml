<?xml version="1.0" encoding="UTF-8"?>
<checkstyle-metadata>
   <module>
      <check fully-qualified-name="com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck"
             name="MethodName"
             parent="com.puppycrawl.tools.checkstyle.TreeWalker">
         <description>&lt;p&gt;
 Checks that method names conform to a specified pattern.
 &lt;/p&gt;

 &lt;p&gt;Also, checks if a method name has the same name as the residing class.
 The default is false (it is not allowed). It is legal in Java to have
 method with the same name as a class. As long as a return type is specified
 it is a method and not a constructor which it could be easily confused as.
 Does not check-style the name of an overridden methods because the developer does not
 have a choice in renaming such methods.
 &lt;/p&gt;</description>
         <properties>
            <property default-value="false" name="allowClassName" type="boolean">
               <description>Control whether to allow a method name to have the same name
 as the enclosing class name. Setting this property {@code false} helps to avoid
 confusion between constructors and methods.</description>
            </property>
            <property default-value="true" name="applyToPackage" type="boolean">
               <description>Control if check should apply to package-private members.</description>
            </property>
            <property default-value="true" name="applyToPrivate" type="boolean">
               <description>Control if check should apply to private members.</description>
            </property>
            <property default-value="true" name="applyToProtected" type="boolean">
               <description>Control if check should apply to protected members.</description>
            </property>
            <property default-value="true" name="applyToPublic" type="boolean">
               <description>Control if check should apply to public members.</description>
            </property>
            <property default-value="^[a-z][a-zA-Z0-9]*$"
                      name="format"
                      type="java.util.regex.Pattern">
               <description>Sets the pattern to match valid identifiers.</description>
            </property>
         </properties>
         <message-keys>
            <message-key key="method.name.equals.class.name"/>
            <message-key key="name.invalidPattern"/>
         </message-keys>
      </check>
   </module>
</checkstyle-metadata>
