<?xml version="1.0" encoding="UTF-8"?>

<checkstyle-metadata>
  <module>
    <check name="JavadocType" fully-qualified-name="com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck" parent="com.puppycrawl.tools.checkstyle.TreeWalker">
      <description><![CDATA[<p>
 Checks the Javadoc comments for annotation/enum/class/interface definitions. By default, does
 not check for author or version tags. The scope to verify is specified using the {@code Scope}
 class and defaults to {@code Scope.PRIVATE}. To verify another scope, set property
 scope to one of the {@code Scope} constants. To define the format for an author
 tag or a version tag, set property authorFormat or versionFormat respectively to a
 <a href="https://docs.oracle.com/javase/7/docs/api/java/util/regex/Pattern.html">
 regular expression</a>.
 </p>
 <p>
 Does not perform checks for author and version tags for inner classes,
 as they should be redundant because of outer class.
 </p>
 <p>
 Error messages about type parameters for which no param tags are present
 can be suppressed by defining property {@code allowMissingParamTags}.
 </p>]]></description>
      <properties>
        <property name="scope" type="com.puppycrawl.tools.checkstyle.api.Scope" default-value="private">
          <description><![CDATA[Specify the visibility scope where Javadoc comments are checked.]]></description>
        </property>
        <property name="excludeScope" type="com.puppycrawl.tools.checkstyle.api.Scope">
          <description><![CDATA[Specify the visibility scope where Javadoc
 comments are not checked.]]></description>
        </property>
        <property name="authorFormat" type="java.util.regex.Pattern">
          <description><![CDATA[Specify the pattern for {@code @author} tag.]]></description>
        </property>
        <property name="versionFormat" type="java.util.regex.Pattern">
          <description><![CDATA[Specify the pattern for {@code @version} tag.]]></description>
        </property>
        <property name="allowMissingParamTags" type="boolean" default-value="false">
          <description><![CDATA[Control whether to ignore violations
 when a class has type parameters but does not have matching param tags in the Javadoc.]]></description>
        </property>
        <property name="allowUnknownTags" type="boolean" default-value="false">
          <description><![CDATA[Control whether to ignore violations when
 a Javadoc tag is not recognised.]]></description>
        </property>
        <property name="allowedAnnotations" type="java.lang.String[]" default-value="Generated">
          <description><![CDATA[Specify the list of annotations that allow
 missed documentation. Only short names are allowed, e.g. {@code Generated}.]]></description>
        </property>
        <property name="tokens" type="java.lang.String[]" default-value="INTERFACE_DEF,CLASS_DEF,ENUM_DEF,ANNOTATION_DEF" validation-type="tokenSet">
          <description><![CDATA[tokens to check]]></description>
        </property>
      </properties>
      <message-keys>
        <message-key key="javadoc.unknownTag"/>
        <message-key key="javadoc.unusedTag"/>
        <message-key key="javadoc.unusedTagGeneral"/>
        <message-key key="type.missingTag"/>
        <message-key key="type.tagFormat"/>
      </message-keys>
    </check>
  </module>
</checkstyle-metadata>
