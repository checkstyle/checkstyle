<?xml version="1.0" encoding="UTF-8"?>
<checkstyle-metadata>
   <module>
      <check fully-qualified-name="com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck"
             name="EqualsAvoidNull"
             parent="com.puppycrawl.tools.checkstyle.TreeWalker">
         <description>&lt;div&gt;
 Checks that any combination of String literals
 is on the left side of an &lt;code&gt;equals()&lt;/code&gt; comparison.
 Also checks for String literals assigned to some field
 (such as &lt;code&gt;someString.equals(anotherString = "text")&lt;/code&gt;).
 &lt;/div&gt;

 &lt;p&gt;Rationale: Calling the &lt;code&gt;equals()&lt;/code&gt; method on String literals
 will avoid a potential &lt;code&gt;NullPointerException&lt;/code&gt;. Also, it is
 pretty common to see null checks right before equals comparisons
 but following this rule such checks are not required.
 &lt;/p&gt;</description>
         <properties>
            <property default-value="false" name="ignoreEqualsIgnoreCase" type="boolean">
               <description>Control whether to ignore &lt;code&gt;String.equalsIgnoreCase(String)&lt;/code&gt; invocations.</description>
            </property>
         </properties>
         <message-keys>
            <message-key key="equals.avoid.null"/>
            <message-key key="equalsIgnoreCase.avoid.null"/>
         </message-keys>
      </check>
   </module>
</checkstyle-metadata>
