<?xml version="1.0" encoding="UTF-8"?>
<checkstyle-metadata>
   <module>
      <check fully-qualified-name="com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
             name="FinalParameters"
             parent="com.puppycrawl.tools.checkstyle.TreeWalker">
         <description>&lt;p&gt;
 Checks that parameters for methods, constructors, catch and for-each blocks are final.
 Interface, abstract, and native methods are not checked: the final keyword
 does not make sense for interface, abstract, and native method parameters as
 there is no code that could modify the parameter.
 &lt;/p&gt;
 &lt;p&gt;
 Rationale: Changing the value of parameters during the execution of the method's
 algorithm can be confusing and should be avoided. A great way to let the Java compiler
 prevent this coding style is to declare parameters final.
 &lt;/p&gt;</description>
         <properties>
            <property default-value="false" name="ignorePrimitiveTypes" type="boolean">
               <description>Ignore primitive types as parameters.</description>
            </property>
            <property default-value="METHOD_DEF,CTOR_DEF"
                      name="tokens"
                      type="java.lang.String[]"
                      validation-type="tokenSet">
               <description>tokens to check</description>
            </property>
         </properties>
         <message-keys>
            <message-key key="final.parameter"/>
         </message-keys>
      </check>
   </module>
</checkstyle-metadata>
