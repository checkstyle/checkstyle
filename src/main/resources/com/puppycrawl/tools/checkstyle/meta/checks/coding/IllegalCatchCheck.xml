<?xml version="1.0" encoding="UTF-8"?>
<checkstyle-metadata>
   <module>
      <check fully-qualified-name="com.puppycrawl.tools.checkstyle.checks.coding.IllegalCatchCheck"
             name="IllegalCatch"
             parent="com.puppycrawl.tools.checkstyle.TreeWalker">
         <description>&lt;p&gt;
 Checks that certain exception types do not appear in a {@code catch} statement.
 &lt;/p&gt;
 &lt;p&gt;
 Rationale: catching {@code java.lang.Exception}, {@code java.lang.Error} or
 {@code java.lang.RuntimeException} is almost never acceptable.
 Novice developers often simply catch Exception in an attempt to handle
 multiple exception classes. This unfortunately leads to code that inadvertently
 catches {@code NullPointerException}, {@code OutOfMemoryError}, etc.
 &lt;/p&gt;</description>
         <properties>
            <property default-value="Error, Exception, RuntimeException, Throwable, java.lang.Error,"
                      name="illegalClassNames"
                      type="java.lang.String[]">
               <description>Specify exception class names to reject.</description>
            </property>
         </properties>
         <message-keys>
            <message-key key="illegal.catch"/>
         </message-keys>
      </check>
   </module>
</checkstyle-metadata>
