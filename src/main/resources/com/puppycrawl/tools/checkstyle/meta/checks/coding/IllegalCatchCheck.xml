<?xml version="1.0" encoding="UTF-8"?>

<checkstyle-metadata>
  <module>
    <check name="IllegalCatch" fully-qualified-name="com.puppycrawl.tools.checkstyle.checks.coding.IllegalCatchCheck" parent="com.puppycrawl.tools.checkstyle.TreeWalker">
      <description><![CDATA[<p>
 Checks that certain exception types do not appear in a {@code catch} statement.
 </p>
 <p>
 Rationale: catching {@code java.lang.Exception}, {@code java.lang.Error} or
 {@code java.lang.RuntimeException} is almost never acceptable.
 Novice developers often simply catch Exception in an attempt to handle
 multiple exception classes. This unfortunately leads to code that inadvertently
 catches {@code NullPointerException}, {@code OutOfMemoryError}, etc.
 </p>]]></description>
      <properties>
        <property name="illegalClassNames" type="java.lang.String[]" default-value="Error, Exception, RuntimeException, Throwable, java.lang.Error,">
          <description><![CDATA[Specify exception class names to reject.]]></description>
        </property>
      </properties>
      <message-keys>
        <message-key key="illegal.catch"/>
      </message-keys>
    </check>
  </module>
</checkstyle-metadata>
