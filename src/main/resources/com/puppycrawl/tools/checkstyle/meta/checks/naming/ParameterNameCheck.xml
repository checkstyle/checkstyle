<?xml version="1.0" encoding="UTF-8"?>

<checkstyle-metadata>
  <module>
    <check name="ParameterName" fully-qualified-name="com.puppycrawl.tools.checkstyle.checks.naming.ParameterNameCheck" parent="com.puppycrawl.tools.checkstyle.TreeWalker">
      <description><![CDATA[<p>
 Checks that method parameter names conform to a specified pattern.
 By using {@code accessModifiers} property it is possible
 to specify different formats for methods at different visibility levels.
 </p>
 <p>
 To validate {@code catch} parameters please use
 <a href="https://checkstyle.org/config_naming.html#CatchParameterName">CatchParameterName</a>.
 </p>
 <p>
 To validate lambda parameters please use
 <a href="https://checkstyle.org/config_naming.html#LambdaParameterName">LambdaParameterName</a>.
 </p>]]></description>
      <properties>
        <property name="format" type="java.util.regex.Pattern" default-value="^[a-z][a-zA-Z0-9]*$">
          <description><![CDATA[Specifies valid identifiers.]]></description>
        </property>
        <property name="ignoreOverridden" type="boolean" default-value="false">
          <description><![CDATA[Allows to skip methods with Override annotation from
 validation.]]></description>
        </property>
        <property name="accessModifiers" type="com.puppycrawl.tools.checkstyle.checks.naming.AccessModifierOption[]" default-value="public, protected, package, private">
          <description><![CDATA[Access modifiers of methods where parameters are
 checked.]]></description>
        </property>
      </properties>
      <message-keys>
        <message-key key="name.invalidPattern"/>
      </message-keys>
    </check>
  </module>
</checkstyle-metadata>
