array.trailing.comma=The array should contain a trailing comma.
assignment.inner.avoid=Inner assignments should be avoided.
avoid.clone.method=Avoid using the ''clone()'' method.
avoid.double.brace.init=Avoid double brace initialization.
avoid.finalizer.method=Avoid using the ''finalize()'' method.
covariant.equals=The covariant ''equals(...)'' method was defined without overriding the ''equals(java.lang.Object)'' method.
declaration.order.access=Variable access definition in wrong order.
declaration.order.constructor=Constructor definition in wrong order.
declaration.order.instance=Instance variable definition in wrong order.
declaration.order.static=Static variable definition in wrong order.
default.comes.last=The \"default\" should be the last label in the \"switch\".
default.comes.last.in.casegroup=The \"default\" should be last label in the \"case\" group.
empty.statement=Empty statement.
equals.avoid.null=String literal expressions should be on the left side of a comparison with ''equals(java.lang.Object)''.
equals.noEquals=Definition of ''hashCode()'' without corresponding definition of ''equals(java.lang.Object)''.
equals.noHashCode=Definition of ''equals(java.lang.Object)'' without corresponding definition of ''hashCode()''.
equalsIgnoreCase.avoid.null=String literal expressions should be on the left side of a comparison with ''equalsIgnoreCase(java.lang.String)''.
explicit.init=The variable ''{0}'' is explicitly initialized to ''{1}'', which is useless because that is its default value type.
fall.through=Fall through from previous branch of the switch statement.
fall.through.last=Fall through from the last branch of the switch statement.
final.variable=Variable ''{0}'' should be declared final.
hidden.field=''{0}'' hides a field.
illegal.catch=Catching ''{0}'' is not allowed.
illegal.throw=Throwing ''{0}'' is not allowed.
illegal.token=Using ''{0}'' is not allowed.
illegal.token.text=Token text matches the illegal pattern ''{0}''.
illegal.type=Usage of type ''{0}'' is not allowed.
inline.conditional.avoid=Avoid inline conditionals.
instantiation.avoid=Instantiation of {0} should be avoided.
magic.number=''{0}'' is a magic number.
matchxpath.match=Illegal code structure detected.
mismatch.package.directory=Package name is not same as directory.
missing.ctor=The class should define a constructor.
missing.package.declaration=Missing package declaration.
missing.super.call=Method ''{0}'' should call ''super.{0}''.
missing.switch.default=\"switch\" without \"default\" clause.
modified.control.variable=The control variable ''{0}'' should not be modified.
multiple.statements.line=Only one statement per line is allowed.
multiple.string.literal=The String {0} appears {1} times in the file.
multiple.variable.declarations=Only one variable definition per line is allowed.
multiple.variable.declarations.comma=Each variable declaration should be in its own statement.
nested.for.depth=The nested for depth is {0,number,integer}, but the maximum allowed is {1,number,integer}.
nested.if.depth=The nested if-else depth is {0,number,integer}, but the maximum allowed is {1,number,integer}.
nested.try.depth=The nested try depth is {0,number,integer}, but the maximum allowed is {1,number,integer}.
no.array.trailing.comma=The array should not contain a trailing comma.
no.enum.trailing.comma=The enum should not contain a trailing comma.
overload.methods.declaration=All overloaded methods should be placed next to each other. Placing non-overloaded methods in between overloaded methods with the same name is a violation. Previous overloaded method located at line {0}.
parameter.assignment=Assignment of parameter ''{0}'' is not allowed.
require.this.method=Method call to ''{0}'' needs \"{1}this.\".
require.this.variable=Reference to instance variable ''{0}'' needs \"{1}this.\".
return.count=Return count is {0,number,integer}, but the maximum allowed for non-void methods and lambdas is {1,number,integer}.
return.countVoid=Return count is {0,number,integer}, but the maximum allowed for void methods, constructors and lambdas is {1,number,integer}.
simplify.boolReturn=The conditional logic can be removed.
simplify.expression=The expression can be simplified.
string.literal.equality=Literal Strings should be compared using ''equals(java.lang.Object)'', not ''{0}''.
super.constructor.call=Unnecessary call to superclass constructor with no arguments.
unnecessary.paren.assign=Unnecessary parentheses around assignment right-hand side.
unnecessary.paren.expr=Unnecessary parentheses around expression.
unnecessary.paren.ident=Unnecessary parentheses around identifier ''{0}''.
unnecessary.paren.lambda=Unnecessary parentheses around lambda value.
unnecessary.paren.literal=Unnecessary parentheses around literal ''{0}''.
unnecessary.paren.return=Unnecessary parentheses around return value.
unnecessary.paren.string=Unnecessary parentheses around string ''{0}''.
unnecessary.semicolon=Unnecessary semicolon.
unused.local.var=Unused local variable ''{0}''.
variable.declaration.usage.distance=Distance between variable ''{0}'' declaration and its first usage is {1}, but allowed {2}.
variable.declaration.usage.distance.extend=Distance between variable ''{0}'' declaration and its first usage is {1}, but allowed {2}. Consider making that variable final if you still need to store its value in advance (before method calls that might have side effects on the original value).
