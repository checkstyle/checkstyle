design.forExtension=クラス ''{0}'' は拡張できるように設計されている（サブクラスを作れる）\
  ようですが、メソッド ''{1}'' には安全な拡張方法を説明した Javadoc がありません。\
  拡張できるように設計していないのであれば、クラス ''{0}'' を final にするか、\
  メソッド ''{1}'' を static/final/abstract にするか、メソッドを空にするか、\
  Javadoc がないことを許可するアノテーションをつけることを検討してください。
final.class=クラス {0} は final として宣言すべきです。
interface.type=インタフェースは型を記述するものであり、メソッドを持つべきです。
variable.notPrivate=変数 ''{0}'' は private とし、アクセッサメソッドを持つべきです。
mutable.exception=フィールド ''{0}'' は final 宣言しなければなりません。
throws.count=throws の数が {0,number,integer} （最大 {1,number,integer} まで）です。

arrangement.members.before.inner = フィールドとメソッドは、内部クラスの前でなければなりません。
hide.utility.class = ユーティリティクラスは、パブリックまたはデフォルトコンストラクタを持つべきではありません。
one.top.level.class = トップレベルのクラス {0} 、独自のソースファイル内に存在する必要があります。
