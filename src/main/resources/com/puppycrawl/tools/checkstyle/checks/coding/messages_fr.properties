array.trailing.comma=La dernière valeur d''un tableau devrait être suivie d''une virgule.

assignment.inner.avoid=Evitez d''affecter une valeur à une variable au sein d''une expression.

covariant.equals=Votre méthode equals compare uniquement les objets de votre classe. N''oubliez pas de surcharger la méthode equals(java.lang.Object).

empty.statement=Instruction vide.

equals.noHashCode=La définition de la méthode ''equals()'' doit toujours être accompagnée de la définition de la méthode ''hashCode()''.

final.variable=La variable ''{0}'' devrait être finale.

hidden.field=''{0}'' masque un attribut.

illegal.token=Il est interdit d''utiliser ''{0}''.

illegal.token.text=Chaîne de caractères interdite ''{0}''.

instantiation.avoid=L''instantiation de la classe {0} est prohibée.

inline.conditional.avoid=L''utilisation de l''opérateur conditionel est prohibée.

magic.number=''{0}'' devrait être défini comme une constante.

missing.super.call=La méthode ''{0}'' devrait appeler ''super.{0}''.
missing.switch.default=Il manque le cas \"default\" dans le bloc \"switch\".

multiple.string.literal=La chaîne {0} apparait {1} fois dans le fichier.

redundant.throws.classInfo=Impossible d''obtenir les informations relatives à {0}.
redundant.throws.duplicate=Clause throws redondante : ''{0}'' est présent plus d''une fois.
redundant.throws.subclass=Clause throws redondante : ''{0}'' est une sous-classe de ''{1}''.
redundant.throws.unchecked=Clause throws redondante : ''{0}'' est une exception non vérifiée.

simplify.boolReturn=Le test peut être supprimé et l''expression directement retournée.
simplify.expression=L''expression peut être simplifiée.

nested.if.depth=Le nombre de ''if'' imbriqué est de {0,number,integer}, alors que le maximum autorisé est de {1,number,integer}.
nested.try.depth=Le nombre de ''try'' imbriqué est de {0,number,integer}, alors que le maximum autorisé est de {1,number,integer}.

string.literal.equality=Les chaines de caractères littérales devraient être comparées avec la méthode equals() et pas avec ''{0}''.

illegal.catch=Catcher l''exception ''{0}'' est prohibé.
missing.package.declaration=Déclaration de package manquante.

return.count=Le nombre de return est de {0,number,integer} alors que le maximum autorisé est de {1,number,integer}.

illegal.type=Déclarer des variables, des valeurs de retour ou des paramètres de type ''{0}'' est interdit.

declaration.order.constructor=La définition des constructeurs n''apparait pas dans le bon ordre.
declaration.order.method=La définition des méthodes n''apparait pas dans le bon ordre.
declaration.order.static=La définition des variables statiques n''apparait pas dans le bon ordre.
declaration.order.instance=La définition des variables d''instance n''apparait pas dans le bon ordre.
declaration.order.access=La définition des variables n''est pas triée suivant leur portée.

parameter.assignment=Il est interdit d''affecter une valeur au paramètre ''{0}''.

modified.control.variable=La variable de controle ''{0}'' est modifiée.

explicit.init=L''initialisation explicite de la variable ''{0}'' à la valeur ''{1}'' est inutile, c''est la valeur par défaut pour ce type.
default.comes.last=Le cas \"default\" devrait apparaitre en dernier dans le bloc \"switch\".
missing.ctor=Il manque un constructeur à la classe.
fall.through=Le cas précédent du \"switch\" ne contient pas de break, return, throw ou continue.
require.this.variable=La référence à la variable d''instance ''{0}'' doit utiliser \"this.\".
require.this.unfound.variable=Impossible de trouver où ''{0}'' est déclaré.
require.this.method=L''appel à la méthode ''{0}'' nécessite l''utilisation de  \"this.\".
multiple.variable.declarations=Ne déclarez pas plus d''une variable par ligne.
multiple.variable.declarations.comma=Chaque déclaration de variable doit faire l''objet d''une instruction à part.

unnecessary.paren.assign=Parenthèses inutiles autour la partie droite de l''affectation.
unnecessary.paren.expr=Parenthèses inutiles autour de l''expression.
unnecessary.paren.ident=Parenthèses inutiles autour de l''identifiant ''{0}''.
unnecessary.paren.literal=Parenthèses inutiles autour de la chaîne littérale ''{0}''.
unnecessary.paren.return=Parenthèses inutiles autour de la valeur de retour.
unnecessary.paren.string=Parenthèses inutiles autour de la chaîne {0}.

