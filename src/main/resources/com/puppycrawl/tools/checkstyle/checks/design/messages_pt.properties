arrangement.members.before.inner=Campos e métodos deveriam aparecer antes de classes internas.
design.forExtension=A classe ''{0}'' parece ter sido projetada para extensão (permite subclasses), \
  mas o método ''{1}'' não tem um javadoc que explica como fazer isso de forma segura. \
  Se a classe não é projetada para extensão, considere fazer a classe ''{0}'' ser final, tornar \
  o método ''{1}'' estático/final/abstrato/vazio ou adicione as anotações permitidas ao método.
final.class=A classe {0} deveria ser declarada como final.
hide.utility.class=Classes utilitárias não deveriam ter construtores públicos ou com visibilidade de pacote.
interface.type=As interfaces deveriam descrever um tipo e portanto devem ter métodos.
mutable.exception=O campo ''{0}'' deveria ser declarado final.
one.top.level.class=A classe de nível superior {0} deveria residir no seu próprio arquivo de origem.
throws.count=O número de \"throws\" é {0,number,integer} (o máximdo permitido é {1,number,integer}).
variable.notPrivate=A variável ''{0}'' deveria ser privada e ter métodos acessores.
