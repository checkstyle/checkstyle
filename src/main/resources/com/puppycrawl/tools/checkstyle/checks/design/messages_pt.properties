arrangement.members.before.inner=Campos e métodos deve ser antes de classes internas.
design.forExtension=Classe ''{0}'' olha como projetado para extensão (pode ser uma subclasse), \
  mas o método ''{1}'' não tem javadoc que explica como fazer isso de forma segura. \
  Se a classe não é projetado para a extensão considerar fazer a classe ''{0}'' final ou tornando \
  o método ''{1}'' anotação static/final/abstract/empty, ou adicionando permitido para o método.
final.class=A classe {0} deve ser declarada como final.
hide.utility.class=Classes de utilitário não deve ter um construtor público ou padrão.
interface.type=As interfaces devem descrever um tipo e portanto devem ter métodos.
mutable.exception=O campo ''{0}'' deve ser declarado final.
one.top.level.class=Classe de nível superior {0} tem de residir no seu próprio arquivo de origem.
throws.count=O número de \"throws\" é {0,number,integer} (máx. permitido é {1,number,integer}).
variable.notPrivate=Variável ''{0}'' deve ser privada e ter métodos acessores.
