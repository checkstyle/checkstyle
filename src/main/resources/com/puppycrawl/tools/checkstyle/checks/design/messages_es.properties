arrangement.members.before.inner=Campos y métodos deben ser antes de las clases internas.
design.forExtension=Clase ''{0}'' se parece a diseñada para la extensión (puede ser una subclase), \
  pero el método ''{1}'' no tiene javadoc que explica cómo hacerlo de forma segura. \
  Si la clase no está diseñado para la extensión de considerar la posibilidad de la clase ''{0}'' \
  final o haciendo el método ''{1}'' anotación  static/final/abstract/empty, o la \
  adición permitido para el método.
final.class=La clase {0} debería declararse final.
hide.utility.class=Clases de servicios públicos no deben tener un constructor público o por defecto.
interface.type=Los interfaces deberían describir tipos y por tanto tener métodos.
mutable.exception=El campo ''{0}'' debe declararse final.
one.top.level.class=Clase de nivel superior {0} tiene que residir en su propio archivo de origen.
throws.count=El número de throws es {0,number,integer} (máximo permitido es {1,number,integer}).
variable.notPrivate=La variable ''{0}'' debe ser privada y tener métodos de acceso.
