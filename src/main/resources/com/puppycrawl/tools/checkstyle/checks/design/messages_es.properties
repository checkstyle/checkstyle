arrangement.members.before.inner=Los bloques de inicio, los constructores, los campos y los métodos deben estar antes de los tipos internos.
design.forExtension=La clase ''{0}'' se parece a diseñada para la extensión (puede ter subclases),\n pero el método ''{1}'' no tiene Javadoc que explica cómo hacerlo de forma segura. Si la clase ''{0}'' no es diseñada para la extensión, Considere la posibilidad de hacerla ser final o hacer el método ''{1}'' ser estático, final, abstracto o vacío, o agregue la anotación permitida al método.
final.class=La clase {0} debería declararse final.
hide.utility.class=Clases de servicios públicos no deben tener un constructor público o por defecto.
interface.type=Los interfaces deberían describir tipos y por tanto tener métodos.
mutable.exception=El campo ''{0}'' debe declararse final.
one.top.level.class=Clase de nivel superior {0} tiene que residir en su propio archivo de origen.
throws.count=El número de throws es {0,number,integer} (máximo permitido es {1,number,integer}).
variable.notPrivate=La variable ''{0}'' debe ser privada y tener métodos de acceso.
