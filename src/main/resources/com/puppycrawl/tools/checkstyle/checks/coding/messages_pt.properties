array.trailing.comma=O array deveria ter uma virgula final.
assignment.inner.avoid=Atribui\u00C3\u00A7\u00C3\u00B5es aninhadas devem ser evitadas.
avoid.clone.method=Evite o uso do m\u00C3\u00A9todo ''clone()''.
avoid.double.brace.init=Evite a inicializa\u00C3\u00A7\u00C3\u00A3o entre chaves.
avoid.finalizer.method=Evite o uso do m\u00C3\u00A9todo ''finalize()''.
constructors.declaration.grouping=Todos os construtores sobrecarregados devem ser agrupados. O construtor anterior estava no n\u00FAmero de linha ''{0}''.
covariant.equals="equals" covariante sem sobrescrever ''equals(java.lang.Object)''.
declaration.order.access=Defini\u00C3\u00A7\u00C3\u00A3o de acesso a vari\u00C3\u00A1vel em ordem errada.
declaration.order.constructor=Defini\u00C3\u00A7\u00C3\u00A3o de construtor em ordem errada.
declaration.order.instance=Defini\u00C3\u00A7\u00C3\u00A3o de vari\u00C3\u00A1vel de inst\u00C3\u00A2ncia em ordem errada.
declaration.order.static=Defini\u00C3\u00A7\u00C3\u00A3o de vari\u00C3\u00A1vel est\u00C3\u00A1tica em ordem errada.
default.comes.last=O "default" deve ser a \u00C3\u00BAltima entrada no "switch".
default.comes.last.in.casegroup=O "default" deve ser a \u00C3\u00BAltima entrada no grupo de "case"s.
empty.statement=Instru\u00C3\u00A7\u00C3\u00A3o vazia.
equals.avoid.null=Literais de String deveriam estar no lado esquerdo de compara\u00C3\u00A7\u00C3\u00B5es feitas com "equals".
equals.noEquals=O m\u00C3\u00A9todo ''hashCode()'' deveria ser acompanhado de um m\u00C3\u00A9todo ''equals(Object)''.
equals.noHashCode=O m\u00C3\u00A9todo ''equals(Object)'' deveria ser acompanhado de um m\u00C3\u00A9todo ''hashCode()''.
equalsIgnoreCase.avoid.null=Literais de String deveriam estar no lado esquerdo de compara\u00C3\u00A7\u00C3\u00B5es feitas com equalsIgnoreCase.
explicit.init=A vari\u00C3\u00A1vel ''{0}'' foi inicializada explicitamente com ''{1}'' (valor padr\u00C3\u00A3o para o seu tipo).
fall.through=Continua\u00C3\u00A7\u00C3\u00A3o (fallthrough) vindo da ramifica\u00C3\u00A7\u00C3\u00A3o anterior da instru\u00C3\u00A7\u00C3\u00A3o switch.
fall.through.last=Continua\u00C3\u00A7\u00C3\u00A3o (fallthrough) para al\u00C3\u00A9m da \u00C3\u00BAltimo ramifica\u00C3\u00A7\u00C3\u00A3o da instru\u00C3\u00A7\u00C3\u00A3o switch.
final.variable=A vari\u00C3\u00A1vel ''{0}'' deveria ser declarada final.
hidden.field=''{0}'' esconde um campo.
illegal.catch=Capturar ''{0}'' n\u00C3\u00A3o \u00C3\u00A9 permitido.
illegal.throw=Lan\u00C3\u00A7ar ''{0}'' n\u00C3\u00A3o \u00C3\u00A9 permitido.
illegal.token=N\u00C3\u00A3o \u00C3\u00A9 permitida a utiliza\u00C3\u00A7\u00C3\u00A3o de ''{0}''.
illegal.token.text=Elemento de texto coincide com o padr\u00C3\u00A3o ilegal ''{0}''.
illegal.type=O uso do tipo ''{0}'' n\u00C3\u00A3o \u00C3\u00A9 permitido.
inline.conditional.avoid=Evite condicionais inline.
instantiation.avoid=A instancia\u00C3\u00A7\u00C3\u00A3o de {0} deve ser evitada.
magic.number=''{0}'' \u00C3\u00A9 um n\u00C3\u00BAmero m\u00C3\u00A1gico.
matchxpath.match=Estrutura de c\u00C3\u00B3digo ilegal detectada.
mismatch.package.directory=O nome do pacote n\u00C3\u00A3o \u00C3\u00A9 o mesmo que o do diret\u00C3\u00B3rio.
missing.ctor=A classe deve definir um construtor.
missing.package.declaration=Falta a declara\u00C3\u00A7\u00C3\u00A3o de pacote.
missing.super.call=O m\u00C3\u00A9todo ''{0}'' deveria invocar ''super.{0}''.
missing.switch.default="switch" sem a ramifica\u00C3\u00A7\u00C3\u00A3o "default".
modified.control.variable=Vari\u00C3\u00A1vel de controle ''{0}'' \u00C3\u00A9 modificada.
multiple.statements.line=Apenas uma instru\u00C3\u00A7\u00C3\u00A3o por linha \u00C3\u00A9 permitida.
multiple.string.literal=A String {0} aparece {1} vezes no arquivo.
multiple.variable.declarations=Apenas uma defini\u00C3\u00A7\u00C3\u00A3o de vari\u00C3\u00A1vel por linha \u00C3\u00A9 permitida.
multiple.variable.declarations.comma=Cada declara\u00C3\u00A7\u00C3\u00A3o de vari\u00C3\u00A1vel deve estar em sua pr\u00C3\u00B3pria instru\u00C3\u00A7\u00C3\u00A3o.
nested.for.depth=A profundidade de aninhamento do "for" \u00C3\u00A9 {0, number, integer} (o m\u00C3\u00A1ximo permitido \u00C3\u00A9 {1,number,integer}).
nested.if.depth=A profundidade de aninhamento do "if-else" \u00C3\u00A9 {0,number,integer} (o m\u00C3\u00A1ximo permitido \u00C3\u00A9 {1,number,integer}).
nested.try.depth=A profundidade de aninhamento do "try" \u00C3\u00A9 {0,number,integer} (o m\u00C3\u00A1ximo permitido \u00C3\u00A9 {1,number,integer}).
no.array.trailing.comma=A matriz n\u00C3\u00A3o deve conter v\u00C3\u00ADrgula \u00C3\u00A0 direita.
no.enum.trailing.comma=O enum n\u00C3\u00A3o deve conter v\u00C3\u00ADrgula \u00C3\u00A0 direita.
overload.methods.declaration=Todos os m\u00C3\u00A9todos sobrecarregados devem ser colocados juntos. A coloca\u00C3\u00A7\u00C3\u00A3o de m\u00C3\u00A9todos n\u00C3\u00A3o sobrecarregados entre m\u00C3\u00A9todos sobrecarregados com o mesmo tipo \u00C3\u00A9 uma viola\u00C3\u00A7\u00C3\u00A3o. O m\u00C3\u00A9todo sobrecarregado anterior foi encontrado na linha '' {0} ''.
parameter.assignment=A atribui\u00C3\u00A7\u00C3\u00A3o ao par\u00C3\u00A2metro ''{0}'' n\u00C3\u00A3o \u00C3\u00A9 permitida.
require.this.method=A chamada de m\u00C3\u00A9todo no ''{0}'' precisa de "{1}this.".
require.this.variable=A refer\u00C3\u00AAncia \u00C3\u00A0 vari\u00C3\u00A1vel de inst\u00C3\u00A2ncia ''{0}'' precisa de "{1}this.".
return.count=O n\u00C3\u00BAmero de "return"s \u00C3\u00A9 {0,number,integer} (o m\u00C3\u00A1ximo permitido para m\u00C3\u00A9todos n\u00C3\u00A3o vazios/lambdas \u00C3\u00A9 {1,number,integer}).
return.countVoid=O n\u00C3\u00BAmero de "return"s \u00C3\u00A9 {0,number,integer} (o m\u00C3\u00A1ximo permitido para vazios m\u00C3\u00A9todos/construtores/lambdas \u00C3\u00A9 {1,number,integer}).
simplify.boolReturn=A l\u00C3\u00B3gica condicional pode ser removida.
simplify.expression=A express\u00C3\u00A3o pode ser simplificada.
string.literal.equality=Literais de String deveriam ser comparados com "equals()", n\u00C3\u00A3o com ''{0}''.
super.constructor.call=Chamada desnecess\u00C3\u00A1ria ao construtor da superclasse sem argumentos.
unnecessary.paren.assign=Par\u00C3\u00AAnteses desnecess\u00C3\u00A1rios ao redor do lado direito da atribui\u00C3\u00A7\u00C3\u00A3o.
unnecessary.paren.expr=Par\u00C3\u00AAnteses desnecess\u00C3\u00A1rios ao redor da express\u00C3\u00A3o.
unnecessary.paren.ident=Par\u00C3\u00AAnteses desnecess\u00C3\u00A1rios ao redor do identificador ''{0}''.
unnecessary.paren.lambda=Par\u00C3\u00AAnteses desnecess\u00C3\u00A1rios em torno do valor lambda.
unnecessary.paren.literal=Par\u00C3\u00AAnteses desnecess\u00C3\u00A1rios em torno do literal ''{0}''.
unnecessary.paren.return=Par\u00C3\u00AAnteses desnecess\u00C3\u00A1rios em torno do valor de retorno.
unnecessary.paren.string=Par\u00C3\u00AAnteses desnecess\u00C3\u00A1rios em torno da cadeia {0}.
unnecessary.semicolon=Ponto-e-v\u00C3\u00ADrgula desnecess\u00C3\u00A1rio.
unused.local.var=Vari\u00C3\u00A1vel local n\u00C3\u00A3o utilizada '' {0} ''.
variable.declaration.usage.distance=A dist\u00C3\u00A2ncia entre a declara\u00C3\u00A7\u00C3\u00A3o da vari\u00C3\u00A1vel ''{0}'' e o seu primeiro uso \u00C3\u00A9 {1}. O m\u00C3\u00A1ximo permitido \u00C3\u00A9 {2}.
variable.declaration.usage.distance.extend=A dist\u00C3\u00A2ncia entre a declara\u00C3\u00A7\u00C3\u00A3o da vari\u00C3\u00A1vel ''{0}'' e o seu primeiro uso \u00C3\u00A9 {1}. O m\u00C3\u00A1ximo permitido \u00C3\u00A9 {2}. Considere tornar essa vari\u00C3\u00A1vel final se voc\u00C3\u00AA ainda precisa armazenar o seu valor com anteced\u00C3\u00AAncia (antes que chamadas de m\u00C3\u00A9todos que possam causar efeitos colaterais sobre o seu valor original).
