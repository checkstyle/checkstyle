array.trailing.comma=O vector deve ter uma virgula final.
assignment.inner.avoid=As atribuições internas devem ser evitadas.
covariant.equals=\"equals\" covariante sem implementar equals(java.lang.Object).
declaration.order.access=Definição de acesso a variável em ordem errada.
declaration.order.constructor=Definição de construtor em ordem errada.
declaration.order.instance=Definição de variável de instância em ordem errada.
declaration.order.method=Definição de método em ordem errada.
declaration.order.static=Definição de variável estática em ordem errada.
empty.statement=Declaração vazia.
equals.noHashCode=Definição de ''equals()'' sem a definição de ''hashCode()''.
explicit.init=Variável ''{0}'' inicializada explicitamente para ''{1}'' (valor por omissão para o seu tipo).
final.variable=Variável ''{0}'' deve ser declarada final.
hidden.field=''{0}'' esconde um campo.
illegal.catch=O tratamento de ''{0}'' não é permitido.
illegal.token.text=Texto do elemento coincide com o padrão ilegal ''{0}''.
illegal.token=Não é permitida a utilização de ''{0}''.
illegal.type=A declaração de variáveis, valores de retorno ou parâmetros do tipo ''{0}'' não é permitida.
instantiation.avoid=A instanciação de {0} deve ser evitada.
magic.number=''{0}'' é um número mágico.
missing.package.declaration=Falta a declaração do pacote.
missing.super.call=Method ''{0}'' deve chamar ''super.{0}''.
missing.switch.default=switch sem o ramo \"default\".
nested.if.depth=Profundidade de \"if-else\" é {0,number,integer} (máximo permitido é {1,number,integer}).
nested.try.depth=Profundidade de \"try\" é {0,number,integer} (máximo permitido é {1,number,integer}).
parameter.assignment=A atribuição ao parâmetro ''{0}'' não é permitda.
redundant.throws.classInfo=Não foi possível obter os dados da classe {0}.
redundant.throws.duplicate=throws redundante: ''{0}'' listado mais do que uma vez.
redundant.throws.subclass=throws redundante: ''{0}'' é uma sub-classe de ''{1}''.
redundant.throws.unchecked=throws redundante: ''{0}'' é um excepção não-verificada.
return.count=O número de \"return\"s é {0,number,integer} (máximo permitido é {1,number,integer}).
simplify.boolreturn=A lógica condicional pode ser removida.
simplify.expression=Expressão pode ser simplicada.
string.literal.equality=\"Strings\" literais devem ser comparadas com equals(), não ''{0}''.
