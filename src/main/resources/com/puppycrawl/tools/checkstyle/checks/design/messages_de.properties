arrangement.members.before.inner=Die Felder und Methoden sollten vor inneren Klassen deklariert werden.
design.forExtension=Klasse ''{0}'' sieht wie zur Erweiterung entworfen aus (kann subclassed werden), \
  aber die Methode ''{1}'' besitzt keinen Javadoc-Kommentar, der erkl채rt, wie Sie das sicher tun. Wenn die Klasse \
  nicht f체r Erweiterungen ausgelegt ist, sollten sie die Klasse ''{0}'' final oder \
  die Methode ''{1}'' static/final/abstract/empty machen oder die zugelassene Annotation f체r \
  die Methode hinzuf체gen.
final.class=Die Klasse {0} sollte als final deklariert werden.
hide.utility.class=Hilfsklassen sollten keinen Standard-Konstruktur und keinen als public deklarierten Konstruktor haben.
interface.type=Interfaces sollten einen Typ beschreiben und daher Methoden beinhalten.
mutable.exception=Das Feld ''{0}'' muss als final deklariert werden.
one.top.level.class=Die Top-Level-Klasse {0} muss in einer eigenen Datei liegen.
throws.count=Die Methode umfasst insgesamt {0,number,integer} throws-Anweisungen (Obergrenze ist {1,number,integer}).
variable.notPrivate=Das Feld ''{0}'' muss als private deklariert werden und Zugriffsmethoden haben.
