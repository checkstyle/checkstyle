<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 https://maven.apache.org/xsd/xdoc-2.0.xsd">
  <head>
    <title>Regexp</title>
  </head>
  <body>
    <section name="Regexp">
      <p>Since Checkstyle 4.0</p>
      <subsection name="Description" id="Description">
        <macro name="description">
            <param name="modulePath"
                   value="src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpCheck.java"/>
        </macro>
      </subsection>

      <subsection name="Properties" id="Properties">
        <div class="wrapper">
          <macro name="properties">
            <param name="modulePath"
                   value="src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpCheck.java"/>
          </macro>
        </div>
      </subsection>

      <subsection name="Examples" id="Examples">
        <p id="Example0-config"> Default configuration does nothing: </p>
        <macro name="example">
          <param name="path"
            value="resources/com/puppycrawl/tools/checkstyle/checks/regexp/regexp/Example0.java"/>
          <param name="type" value="config"/>
        </macro><hr class="example-separator"/>
        <p id="Example1-config">
          An example of how to configure the check to make sure a copyright
          statement is included in the file:
        </p>
        <macro name="example">
          <param name="path"
            value="resources/com/puppycrawl/tools/checkstyle/checks/regexp/regexp/Example1.java"/>
          <param name="type" value="config"/>
        </macro>
        <p id="Example1-code"> Example1: </p>
        <macro name="example">
          <param name="path"
            value="resources/com/puppycrawl/tools/checkstyle/checks/regexp/regexp/Example1.java"/>
          <param name="type" value="code"/>
        </macro><hr class="example-separator"/>
        <p id="Example2-code">Example2 with violation:</p>
        <macro name="example">
          <param name="path"
            value="resources/com/puppycrawl/tools/checkstyle/checks/regexp/regexp/Example2.java"/>
          <param name="type" value="code"/>
        </macro><hr class="example-separator"/>
        <p id="Example3-config"> Your statement may be multiline. </p>
        <macro name="example">
          <param name="path"
            value="resources/com/puppycrawl/tools/checkstyle/checks/regexp/regexp/Example3.java"/>
          <param name="type" value="config"/>
        </macro>
        <p id="Example3-code">Example3:</p>
        <macro name="example">
          <param name="path"
            value="resources/com/puppycrawl/tools/checkstyle/checks/regexp/regexp/Example3.java"/>
          <param name="type" value="code"/>
        </macro><hr class="example-separator"/>
        <p id="Example4-config">Configure Check to make sure that it appear only once:</p>
        <macro name="example">
          <param name="path"
            value="resources/com/puppycrawl/tools/checkstyle/checks/regexp/regexp/Example4.java"/>
          <param name="type" value="config"/>
        </macro><hr class="example-separator"/>
        <p id="Example4-code">Example4:</p>
        <macro name="example">
          <param name="path"
            value="resources/com/puppycrawl/tools/checkstyle/checks/regexp/regexp/Example4.java"/>
          <param name="type" value="code"/>
        </macro><hr class="example-separator"/>
        <p id="Example5-config">Instead of printing whole regexp that might be unnecessary for
          user, you can substitute it to some static text:
        </p>
        <macro name="example">
          <param name="path"
            value="resources/com/puppycrawl/tools/checkstyle/checks/regexp/regexp/Example5.java"/>
          <param name="type" value="config"/>
        </macro>
        <p id="Example5-code">Example5 with violation:</p>
        <macro name="example">
          <param name="path"
            value="resources/com/puppycrawl/tools/checkstyle/checks/regexp/regexp/Example5.java"/>
          <param name="type" value="code"/>
        </macro><hr class="example-separator"/>

        <p id="Example6-config">
          Configure the check to make sure there are no calls to <code>System.out.println</code>:
        </p>
        <macro name="example">
          <param name="path"
            value="resources/com/puppycrawl/tools/checkstyle/checks/regexp/regexp/Example6.java"/>
          <param name="type" value="config"/>
        </macro>
        <p id="Example6-code">Example6:</p>
        <macro name="example">
          <param name="path"
            value="resources/com/puppycrawl/tools/checkstyle/checks/regexp/regexp/Example6.java"/>
          <param name="type" value="code"/>
        </macro><hr class="example-separator"/>
        <p id="Example7-config">Configure to ignore comments:</p>
        <macro name="example">
          <param name="path"
            value="resources/com/puppycrawl/tools/checkstyle/checks/regexp/regexp/Example7.java"/>
          <param name="type" value="config"/>
        </macro>
        <p id="Example7-code">Example7:</p>
        <macro name="example">
          <param name="path"
            value="resources/com/puppycrawl/tools/checkstyle/checks/regexp/regexp/Example7.java"/>
          <param name="type" value="code"/>
        </macro><hr class="example-separator"/>
        <p id="Example8-config">
          Configure the check to find trailing whitespace at the end of a line:
        </p>
        <macro name="example">
          <param name="path"
            value="resources/com/puppycrawl/tools/checkstyle/checks/regexp/regexp/Example8.java"/>
          <param name="type" value="config"/>
        </macro>
        <p id="Example8-code">Example8:</p>
        <macro name="example">
          <param name="path"
            value="resources/com/puppycrawl/tools/checkstyle/checks/regexp/regexp/Example8.java"/>
          <param name="type" value="code"/>
        </macro><hr class="example-separator"/>
        <p id="Example9-config">
          Configure the check to find case-insensitive occurrences of "debug":
        </p>
        <macro name="example">
          <param name="path"
            value="resources/com/puppycrawl/tools/checkstyle/checks/regexp/regexp/Example9.java"/>
          <param name="type" value="config"/>
        </macro>
        <p>
          <b>Note:</b> The (?i) at the beginning of the regular expression
          tells the regexp engine to ignore the case.
        </p>
        <p id="Example9-code">Example9:</p>
        <macro name="example">
          <param name="path"
            value="resources/com/puppycrawl/tools/checkstyle/checks/regexp/regexp/Example9.java"/>
          <param name="type" value="code"/>
        </macro><hr class="example-separator"/>
        <p id="Example10-config">
          There is also a feature to limit the number of violations reported.
          When the limit is reached the check aborts with a message
          reporting that the limit has been reached.
        </p>
        <macro name="example">
          <param name="path"
            value="resources/com/puppycrawl/tools/checkstyle/checks/regexp/regexp/Example10.java"/>
          <param name="type" value="config"/>
        </macro>
        <p id="Example10-code">Example10:</p>
        <macro name="example">
          <param name="path"
            value="resources/com/puppycrawl/tools/checkstyle/checks/regexp/regexp/Example10.java"/>
          <param name="type" value="code"/>
        </macro><hr class="example-separator"/>
        <p id="Example11-config">
          To configure the check to verify that each file has the
          multiline header where year could be any digits.
        </p>
        <macro name="example">
          <param name="path"
            value="resources/com/puppycrawl/tools/checkstyle/checks/regexp/regexp/Example11.java"/>
          <param name="type" value="config"/>
        </macro>
        <p id="Example11-code">Example:</p>
        <macro name="example">
          <param name="path"
            value="resources/com/puppycrawl/tools/checkstyle/checks/regexp/regexp/Example11.java"/>
          <param name="type" value="code"/>
        </macro>
        <p>
          To configure the check to verify that each file start with the
          multiline header, you should append '\A' to 'regexp' at left.
        </p>
      </subsection>

      <subsection name="Example of Usage" id="Example_of_Usage">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Aconfig%20path%3A**%2Fcheckstyle-checks.xml+repo%3Acheckstyle%2Fcheckstyle+Regexp">
            Checkstyle Style</a>
          </li>
        </ul>
      </subsection>

      <subsection name="Violation Messages" id="Violation_Messages">
        <macro name="violation-messages">
          <param name="checkName" value="Regexp"/>
        </macro>
        <p>
          All messages can be customized if the default message doesn't suit you.
          Please <a href="../../config.html#Custom_messages">see the documentation</a>
          to learn how to.
        </p>
      </subsection>

      <subsection name="Package" id="Package">
        <p>
          com.puppycrawl.tools.checkstyle.checks.regexp
        </p>
      </subsection>

      <subsection name="Parent Module" id="Parent_Module">
        <macro name="parent-module">
          <param name="moduleName" value="Regexp"/>
        </macro>
      </subsection>
    </section>
  </body>
</document>
