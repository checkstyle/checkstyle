<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 https://maven.apache.org/xsd/xdoc-2.0.xsd">
  <head>
    <title>MagicNumber</title>
  </head>
  <body>
    <section name="MagicNumber">
      <p>Since Checkstyle 3.1</p>
      <subsection name="Description" id="MagicNumber_Description">
        <div>
          Checks that there are no
          <a href="https://en.wikipedia.org/wiki/Magic_number_%28programming%29">
          &quot;magic numbers&quot;</a> where a magic
          number is a numeric literal that is not defined as a constant.
          By default, -1, 0, 1, and 2 are not considered to be magic numbers.
        </div>

        <p>Constant definition is any variable/field that has 'final' modifier.
          It is fine to have one constant defining multiple numeric literals within one expression:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
static final int SECONDS_PER_DAY = 24 * 60 * 60;
static final double SPECIAL_RATIO = 4.0 / 3.0;
static final double SPECIAL_SUM = 1 + Math.E;
static final double SPECIAL_DIFFERENCE = 4 - Math.PI;
static final Border STANDARD_BORDER = BorderFactory.createEmptyBorder(3, 3, 3, 3);
static final Integer ANSWER_TO_THE_ULTIMATE_QUESTION_OF_LIFE = new Integer(42);
        </code></pre></div>
      </subsection>

      <subsection name="Properties" id="MagicNumber_Properties">
        <div class="wrapper">
          <table>
            <tr>
              <th>name</th>
              <th>description</th>
              <th>type</th>
              <th>default value</th>
              <th>since</th>
            </tr>
            <tr>
              <td><a id="constantWaiverParentToken"/><a href="#constantWaiverParentToken">constantWaiverParentToken</a></td>
              <td>Specify tokens that are allowed in the AST path from the number literal to the enclosing constant definition.</td>
              <td>subset of tokens <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html">TokenTypes</a></td>
              <td><code>ARRAY_INIT, ASSIGN, BAND, BNOT, BOR, BSR, BXOR, COLON, DIV, ELIST, EQUAL, EXPR, GE, GT, LE, LITERAL_NEW, LT, METHOD_CALL, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR, TYPECAST, UNARY_MINUS, UNARY_PLUS</code></td>
              <td>6.11</td>
            </tr>
            <tr>
              <td><a id="ignoreAnnotation"/><a href="#ignoreAnnotation">ignoreAnnotation</a></td>
              <td>Ignore magic numbers in annotation declarations.</td>
              <td><a href="../../property_types.html#boolean">boolean</a></td>
              <td><code>false</code></td>
              <td>5.4</td>
            </tr>
            <tr>
              <td><a id="ignoreAnnotationElementDefaults"/><a href="#ignoreAnnotationElementDefaults">ignoreAnnotationElementDefaults</a></td>
              <td>Ignore magic numbers in annotation elements defaults.</td>
              <td><a href="../../property_types.html#boolean">boolean</a></td>
              <td><code>true</code></td>
              <td>8.23</td>
            </tr>
            <tr>
              <td><a id="ignoreFieldDeclaration"/><a href="#ignoreFieldDeclaration">ignoreFieldDeclaration</a></td>
              <td>Ignore magic numbers in field declarations.</td>
              <td><a href="../../property_types.html#boolean">boolean</a></td>
              <td><code>false</code></td>
              <td>6.6</td>
            </tr>
            <tr>
              <td><a id="ignoreHashCodeMethod"/><a href="#ignoreHashCodeMethod">ignoreHashCodeMethod</a></td>
              <td>Ignore magic numbers in hashCode methods.</td>
              <td><a href="../../property_types.html#boolean">boolean</a></td>
              <td><code>false</code></td>
              <td>5.3</td>
            </tr>
            <tr>
              <td><a id="ignoreNumbers"/><a href="#ignoreNumbers">ignoreNumbers</a></td>
              <td>Specify non-magic numbers.</td>
              <td><a href="../../property_types.html#double.5B.5D">double[]</a></td>
              <td><code>-1, 0, 1, 2</code></td>
              <td>3.1</td>
            </tr>
            <tr>
              <td><a id="tokens"/><a href="#tokens">tokens</a></td>
              <td>tokens to check</td>
              <td>subset of tokens
                <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#NUM_DOUBLE">
                    NUM_DOUBLE</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#NUM_FLOAT">
                    NUM_FLOAT</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#NUM_INT">
                    NUM_INT</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#NUM_LONG">
                    NUM_LONG</a>
                  .
              </td>
              <td>
                <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#NUM_DOUBLE">
                    NUM_DOUBLE</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#NUM_FLOAT">
                    NUM_FLOAT</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#NUM_INT">
                    NUM_INT</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#NUM_LONG">
                    NUM_LONG</a>
                  .
              </td>
              <td>3.1</td>
            </tr>
          </table>
        </div>
      </subsection>

      <subsection name="Examples" id="MagicNumber_Examples">
        <p id="Example1-config">
          To configure the check with default configuration:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;module name="TreeWalker"&gt;
    &lt;module name="MagicNumber"/&gt;
  &lt;/module&gt;
&lt;/module&gt;
</code></pre></div>
        <p id="Example1-code">
          results in the following violations:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
@Example1.Annotation(6) // violation, ''6' is a magic number.'
public class Example1 {
  private int field = 7; // violation, ''7' is a magic number.'

  void method1() {
    int i = 1;
    int j = 8; // violation, ''8' is a magic number.'
  }
  public void method2() {
    final TestClass testObject = new TestClass(62);
    final int a = 3;
    final int[] b = {4, 5};
    final int c = -3;
    final int d = +4;
    final int e = method3(10, 20);
    final int f = 3 * 4;
    final int g = 3 / 4;
    final int h = 3 + 4;
    final int i = 3 - 4;
    final int j = (int) 3.4;
  }
  private int method3(int a, int b) {
    return a + b;
  }
  public int hashCode() {
    return 10; // violation, ''10' is a magic number.'
  }
  @interface Annotation {
    int value() default 10;
    int[] value2() default {10};
  }
  class TestClass {
    TestClass(int field) {}
  }
}
</code></pre></div><hr class="example-separator"/>
        <p id="Example2-config">
          To configure the check so that it checks floating-point numbers
          that are not 0, 0.5, or 1:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;module name="TreeWalker"&gt;
    &lt;module name="MagicNumber"&gt;
      &lt;property name="tokens" value="NUM_DOUBLE, NUM_FLOAT"/&gt;
      &lt;property name="ignoreNumbers" value="0, 0.5, 1"/&gt;
      &lt;property name="ignoreFieldDeclaration" value="true"/&gt;
      &lt;property name="ignoreAnnotation" value="true"/&gt;
    &lt;/module&gt;
  &lt;/module&gt;
&lt;/module&gt;
</code></pre></div>
        <p id="Example2-code">
          results in no violations:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
@Example2.Annotation(6)
public class Example2 {
  private int field = 7;

  void method1() {
    int i = 1;
    int j = 8;
  }
  public void method2() {
    final TestClass testObject = new TestClass(62);
    final int a = 3;
    final int[] b = {4, 5};
    final int c = -3;
    final int d = +4;
    final int e = method3(10, 20);
    final int f = 3 * 4;
    final int g = 3 / 4;
    final int h = 3 + 4;
    final int i = 3 - 4;
    final int j = (int) 3.4;
  }
  private int method3(int a, int b) {
    return a + b;
  }
  public int hashCode() {
    return 10;
  }
  @interface Annotation {
    int value() default 10;
    int[] value2() default {10};
  }
  class TestClass {
    TestClass(int field) {}
  }
}
</code></pre></div><hr class="example-separator"/>
        <p id="Example3-config">
          To configure the check so that it ignores magic numbers in field declarations:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;module name="TreeWalker"&gt;
    &lt;module name="MagicNumber"&gt;
        &lt;property name="ignoreFieldDeclaration" value="true"/&gt;
    &lt;/module&gt;
  &lt;/module&gt;
&lt;/module&gt;
</code></pre></div>
        <p id="Example3-code">
          results in the following violations:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
@Example3.Annotation(6) // violation, ''6' is a magic number.'
public class Example3 {
  private int field = 7;

  void method1() {
    int i = 1;
    int j = 8; // violation, ''8' is a magic number.'
  }
  public void method2() {
    final TestClass testObject = new TestClass(62);
    final int a = 3;
    final int[] b = {4, 5};
    final int c = -3;
    final int d = +4;
    final int e = method3(10, 20);
    final int f = 3 * 4;
    final int g = 3 / 4;
    final int h = 3 + 4;
    final int i = 3 - 4;
    final int j = (int) 3.4;
  }
  private int method3(int a, int b) {
    return a + b;
  }
  public int hashCode() {
    return 10; // violation, ''10' is a magic number.'
  }
  @interface Annotation {
    int value() default 10;
    int[] value2() default {10};
  }
  class TestClass {
    TestClass(int field) {}
  }
}
</code></pre></div><hr class="example-separator"/>
        <p id="Example4-config">
        To configure the check to check annotation element defaults:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;module name="TreeWalker"&gt;
    &lt;module name="MagicNumber"&gt;
      &lt;property name="ignoreAnnotationElementDefaults" value="false"/&gt;
    &lt;/module&gt;
  &lt;/module&gt;
&lt;/module&gt;
</code></pre></div>
        <p id="Example4-code">
          results in the following violations:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
@Example4.Annotation(6) // violation, ''6' is a magic number.'
public class Example4 {
  private int field = 7; // violation, ''7' is a magic number.'

  void method1() {
    int i = 1;
    int j = 8; // violation, ''8' is a magic number.'
  }
  public void method2() {
    final TestClass testObject = new TestClass(62);
    final int a = 3;
    final int[] b = {4, 5};
    final int c = -3;
    final int d = +4;
    final int e = method3(10, 20);
    final int f = 3 * 4;
    final int g = 3 / 4;
    final int h = 3 + 4;
    final int i = 3 - 4;
    final int j = (int) 3.4;
  }
  private int method3(int a, int b) {
    return a + b;
  }
  public int hashCode() {
    return 10; // violation, ''10' is a magic number.'
  }
  @interface Annotation {
    int value() default 10; // violation, ''10' is a magic number.'
    int[] value2() default {10}; // violation, ''10' is a magic number.'
  }
  class TestClass {
    TestClass(int field) {}
  }
}
</code></pre></div><hr class="example-separator"/>
        <p id="Example5-config">
        Config example of constantWaiverParentToken option:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;module name="TreeWalker"&gt;
    &lt;module name="MagicNumber"&gt;
      &lt;property name="constantWaiverParentToken" value="ASSIGN, ARRAY_INIT, EXPR,
      UNARY_PLUS, UNARY_MINUS, TYPECAST, ELIST, DIV, PLUS"/&gt;
    &lt;/module&gt;
  &lt;/module&gt;
&lt;/module&gt;
</code></pre></div>
        <p id="Example5-code">results in the following violations:</p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
@Example5.Annotation(6) // violation, ''6' is a magic number.'
public class Example5 {
  private int field = 7; // violation, ''7' is a magic number.'

  void method1() {
    int i = 1;
    int j = 8; // violation, ''8' is a magic number.'
  }
  public void method2() {
    final TestClass testObject = new TestClass(62);
    // violation above, ''62' is a magic number.'
    final int a = 3; // ok as waiver is ASSIGN
    final int[] b = {4, 5}; // ok as waiver is ARRAY_INIT
    final int c = -3; // ok as waiver is UNARY_MINUS
    final int d = +4; // ok as waiver is UNARY_PLUS
    final int e = method3(10, 20);
    // 2 violations above:
    //  ''10' is a magic number.'
    //  ''20' is a magic number.'
    final int f = 3 * 4;
    // 2 violations above:
    //  ''3' is a magic number.'
    //  ''4' is a magic number.'
    final int g = 3 / 4; // ok as waiver is DIV
    final int h = 3 + 4; // ok as waiver is PLUS
    final int i = 3 - 4;
    // 2 violations above:
    //  ''3' is a magic number.'
    //  ''4' is a magic number.'
    final int j = (int) 3.4; // ok as waiver is TYPECAST
  }
  private int method3(int a, int b) {
    return a + b;
  }
  public int hashCode() {
    return 10; // violation, ''10' is a magic number.'
  }
  @interface Annotation {
    int value() default 10;
    int[] value2() default {10};
  }
  class TestClass {
    TestClass(int field) {}
  }
}
</code></pre></div><hr class="example-separator"/>
        <p id="Example6-config">
        Config example of ignoreHashCodeMethod option:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;module name="TreeWalker"&gt;
    &lt;module name="MagicNumber"&gt;
        &lt;property name="ignoreHashCodeMethod" value="true"/&gt;
    &lt;/module&gt;
  &lt;/module&gt;
&lt;/module&gt;
</code></pre></div>
        <p id="Example6-code">results in the following violations:</p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
@Example6.Annotation(6) // violation, ''6' is a magic number.'
public class Example6 {
  private int field = 7; // violation, ''7' is a magic number.'

  void method1() {
    int i = 1;
    int j = 8; // violation, ''8' is a magic number.'
  }
  public void method2() {
    final TestClass testObject = new TestClass(62);
    final int a = 3;
    final int[] b = {4, 5};
    final int c = -3;
    final int d = +4;
    final int e = method3(10, 20);
    final int f = 3 * 4;
    final int g = 3 / 4;
    final int h = 3 + 4;
    final int i = 3 - 4;
    final int j = (int) 3.4;
  }
  private int method3(int a, int b) {
    return a + b;
  }
  public int hashCode() {
    return 10;
  }
  @interface Annotation {
    int value() default 10;
    int[] value2() default {10};
  }
  class TestClass {
    TestClass(int field) {}
  }
}
</code></pre></div>

      </subsection>

      <subsection name="Example of Usage" id="MagicNumber_Example_of_Usage">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%20path%3A**%2Fsun_checks.xml+repo%3Acheckstyle%2Fcheckstyle+MagicNumber">
            Sun Style</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Aconfig%20path%3A**%2Fcheckstyle-checks.xml+repo%3Acheckstyle%2Fcheckstyle+MagicNumber">
            Checkstyle Style</a>
          </li>
        </ul>
      </subsection>

      <subsection name="Violation Messages" id="MagicNumber_Violation_Messages">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fcoding%20path%3A**%2Fmessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22magic.number%22">
              magic.number
            </a>
          </li>
        </ul>
        <p>
          All messages can be customized if the default message doesn't suit you.
          Please <a href="../../config.html#Custom_messages">see the documentation</a>
          to learn how to.
        </p>
      </subsection>

      <subsection name="Package" id="MagicNumber_Package">
        <p>
          com.puppycrawl.tools.checkstyle.checks.coding
        </p>
      </subsection>

      <subsection name="Parent Module" id="MagicNumber_Parent_Module">
        <p>
          <a href="../../config.html#TreeWalker">TreeWalker</a>
        </p>
      </subsection>
    </section>
  </body>
</document>
