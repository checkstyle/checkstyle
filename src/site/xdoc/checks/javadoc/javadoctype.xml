<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 https://maven.apache.org/xsd/xdoc-2.0.xsd">
  <head>
    <title>JavadocType</title>
  </head>
  <body>
    <section name="JavadocType">
      <p>Since Checkstyle 3.0</p>
      <subsection name="Description" id="Description">
        <div>
          Checks the Javadoc comments for type definitions.
          By default, does not check for author or version tags. The
          scope to verify is specified using the <code>Scope</code>
          class and defaults to <code>Scope.PRIVATE</code>. To verify
          another scope, set property scope to one of the
          <code>Scope</code> constants. To define the format for an
          author tag or a version tag, set property authorFormat or
          versionFormat respectively to a
          <a href="https://docs.oracle.com/javase/7/docs/api/java/util/regex/Pattern.html">
            pattern</a>.
        </div>
        <p>
          Does not perform checks for author and version tags for inner
          classes, as they should be redundant because of outer class.
        </p>
        <p>
          Does not perform checks for type definitions that do not have
          any Javadoc comments.
        </p>
        <p>
          Error messages about type parameters and record components for which no
          param tags are present can be suppressed by defining property
          <code>allowMissingParamTags</code>.
        </p>
      </subsection>

      <subsection name="Properties" id="Properties">
        <div class="wrapper">
          <table>
            <tr>
              <th>name</th>
              <th>description</th>
              <th>type</th>
              <th>default value</th>
              <th>since</th>
            </tr>
            <tr>
              <td>allowMissingParamTags</td>
              <td>Control whether to ignore violations when a class has type parameters but does not have matching param tags in the Javadoc.</td>
              <td><a href="../../property_types.html#boolean">boolean</a></td>
              <td><code>false</code></td>
              <td>4.0</td>
            </tr>
            <tr>
              <td>allowUnknownTags</td>
              <td>Control whether to ignore violations when a Javadoc tag is not recognised.</td>
              <td><a href="../../property_types.html#boolean">boolean</a></td>
              <td><code>false</code></td>
              <td>5.1</td>
            </tr>
            <tr>
              <td>allowedAnnotations</td>
              <td>Specify annotations that allow skipping validation at all. Only short names are allowed, e.g. <code>Generated</code>.</td>
              <td><a href="../../property_types.html#String.5B.5D">String[]</a></td>
              <td><code>Generated</code></td>
              <td>8.15</td>
            </tr>
            <tr>
              <td>authorFormat</td>
              <td>Specify the pattern for <code>@author</code> tag.</td>
              <td><a href="../../property_types.html#Pattern">Pattern</a></td>
              <td><code>null</code></td>
              <td>3.0</td>
            </tr>
            <tr>
              <td>excludeScope</td>
              <td>Specify the visibility scope where Javadoc comments are not checked.</td>
              <td><a href="../../property_types.html#Scope">Scope</a></td>
              <td><code>null</code></td>
              <td>3.4</td>
            </tr>
            <tr>
              <td>scope</td>
              <td>Specify the visibility scope where Javadoc comments are checked.</td>
              <td><a href="../../property_types.html#Scope">Scope</a></td>
              <td><code>private</code></td>
              <td>3.0</td>
            </tr>
            <tr>
              <td>versionFormat</td>
              <td>Specify the pattern for <code>@version</code> tag.</td>
              <td><a href="../../property_types.html#Pattern">Pattern</a></td>
              <td><code>null</code></td>
              <td>3.0</td>
            </tr>
            <tr>
              <td>tokens</td>
              <td>tokens to check</td>
              <td>subset of tokens
                <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF">
                    INTERFACE_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CLASS_DEF">
                    CLASS_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_DEF">
                    ENUM_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_DEF">
                    ANNOTATION_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#RECORD_DEF">
                    RECORD_DEF</a>
                  .
              </td>
              <td>
                <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#INTERFACE_DEF">
                    INTERFACE_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#CLASS_DEF">
                    CLASS_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_DEF">
                    ENUM_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ANNOTATION_DEF">
                    ANNOTATION_DEF</a>
                , <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#RECORD_DEF">
                    RECORD_DEF</a>
                  .
              </td>
              <td>3.0</td>
            </tr>
          </table>
        </div>
      </subsection>

      <subsection name="Examples" id="Examples">
        <p id="Example1-config">
          To configure the default check:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;module name="TreeWalker"&gt;
    &lt;module name="JavadocType"/&gt;
  &lt;/module&gt;
&lt;/module&gt;
</code></pre></div>
        <p id="Example1-code">Example1:</p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
/**
 * @author a
 * @version $Revision1$
 */
public class Example1 {
  /**
   * @author a
   * @version $Revision1$
   */
  public class ClassA {
    /** */
    private class ClassB {}
  }

  /**
   * @author
   * @version abc
   * @unknownTag value
   */
  public class ClassC {}
  // violation 3 lines above 'Unknown tag 'unknownTag''
  /** */
  public class ClassD {}

  /** */
  public class ClassE&lt;T&gt; {} // violation, as param tag for &lt;T&gt; is missing

  /** */
  private class ClassF&lt;T&gt; {} // violation, as param tag for &lt;T&gt; is missing

  /** */
  @Generated
  public class ClassG&lt;T&gt; {}
}
</code></pre></div>

        <p id="Example2-config">
          To configure the check for <code>public</code> scope:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;module name="TreeWalker"&gt;
    &lt;module name="JavadocType"&gt;
      &lt;property name="scope" value="public"/&gt;
    &lt;/module&gt;
  &lt;/module&gt;
&lt;/module&gt;
</code></pre></div>
        <p id="Example2-code">Example2:</p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
/**
 * @author a
 * @version $Revision1$
 */
public class Example2 {
  /**
   * @author a
   * @version $Revision1$
   */
  public class ClassA {
    /** */
    private class ClassB {}
  }

  /**
   * @author
   * @version abc
   * @unknownTag value
   */
  public class ClassC {}
  // violation 3 lines above 'Unknown tag 'unknownTag''
  /** */
  public class ClassD {}

  /** */
  public class ClassE&lt;T&gt; {} // violation, as param tag for &lt;T&gt; is missing

  /** */
  private class ClassF&lt;T&gt; {}

  /** */
  @Generated
  public class ClassG&lt;T&gt; {}
}
</code></pre></div>

        <p id="Example3-config">
          To configure the check for an <code>@author</code> tag:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;module name="TreeWalker"&gt;
    &lt;module name="JavadocType"&gt;
      &lt;property name="authorFormat" value="\S"/&gt;
    &lt;/module&gt;
  &lt;/module&gt;
&lt;/module&gt;
</code></pre></div>
        <p id="Example3-code">Example3:</p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
/**
 * @author a
 * @version $Revision1$
 */
public class Example3 {
  /**
   * @author a
   * @version $Revision1$
   */
  public class ClassA {
    /** */
    private class ClassB {}
  }

  /**
   * @author
   * @version abc
   * @unknownTag value
   */
  public class ClassC {}
  // violation 3 lines above 'Unknown tag 'unknownTag''
  /** */
  public class ClassD {}

  /** */
  public class ClassE&lt;T&gt; {} // violation, as param tag for &lt;T&gt; is missing

  /** */
  private class ClassF&lt;T&gt; {} // violation, as param tag for &lt;T&gt; is missing

  /** */
  @Generated
  public class ClassG&lt;T&gt; {}
}
</code></pre></div>

        <p id="Example4-config">
          To configure the check for a CVS revision version tag:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;module name="TreeWalker"&gt;
    &lt;module name="JavadocType"&gt;
      &lt;property name="versionFormat" value="\$Revision.*\$"/&gt;
    &lt;/module&gt;
  &lt;/module&gt;
&lt;/module&gt;
</code></pre></div>
        <p id="Example4-code">Example4:</p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
/**
 * @author a
 * @version $Revision1$
 */
public class Example4 {
  /**
   * @author a
   * @version $Revision1$
   */
  public class ClassA {
    /** */
    private class ClassB {}
  }

  /**
   * @author
   * @version abc
   * @unknownTag value
   */
  public class ClassC {}
  // violation 3 lines above 'Unknown tag 'unknownTag''
  /** */
  public class ClassD {}

  /** */
  public class ClassE&lt;T&gt; {} // violation, as param tag for &lt;T&gt; is missing

  /** */
  private class ClassF&lt;T&gt; {} // violation, as param tag for &lt;T&gt; is missing

  /** */
  @Generated
  public class ClassG&lt;T&gt; {}
}
</code></pre></div>

        <p id="Example5-config">
          To configure the check for <code>private</code> classes only:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;module name="TreeWalker"&gt;
    &lt;module name="JavadocType"&gt;
      &lt;property name="scope" value="private"/&gt;
      &lt;property name="excludeScope" value="package"/&gt;
    &lt;/module&gt;
  &lt;/module&gt;
&lt;/module&gt;
</code></pre></div>
        <p id="Example5-code">Example5:</p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
/**
 * @author a
 * @version $Revision1$
 */
public class Example5 {
  /**
   * @author a
   * @version $Revision1$
   */
  public class ClassA {
    /** */
    private class ClassB {}
  }

  /**
   * @author
   * @version abc
   * @unknownTag value
   */
  public class ClassC {}

  /** */
  public class ClassD {}

  /** */
  public class ClassE&lt;T&gt; {}

  /** */
  private class ClassF&lt;T&gt; {} // violation, as param tag for &lt;T&gt; is missing

  /** */
  @Generated
  public class ClassG&lt;T&gt; {}
}
</code></pre></div>

        <p id="Example6-config">
          To configure the check that allows missing <code>@param</code> tags:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;module name="TreeWalker"&gt;
    &lt;module name="JavadocType"&gt;
      &lt;property name="allowMissingParamTags" value="true"/&gt;
    &lt;/module&gt;
  &lt;/module&gt;
&lt;/module&gt;
</code></pre></div>
        <p id="Example6-code">Example6:</p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
/**
 * @author a
 * @version $Revision1$
 */
public class Example6 {
  /**
   * @author a
   * @version $Revision1$
   */
  public class ClassA {
    /** */
    private class ClassB {}
  }

  /**
   * @author
   * @version abc
   * @unknownTag value
   */
  public class ClassC {}
  // violation 3 lines above 'Unknown tag 'unknownTag''
  /** */
  public class ClassD {}

  /** */
  public class ClassE&lt;T&gt; {}

  /** */
  private class ClassF&lt;T&gt; {}

  /** */
  @Generated
  public class ClassG&lt;T&gt; {}
}
</code></pre></div>

        <p id="Example7-config">
            To configure the check that allows unknown tags:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;module name="TreeWalker"&gt;
    &lt;module name="JavadocType"&gt;
      &lt;property name="allowUnknownTags" value="true"/&gt;
    &lt;/module&gt;
  &lt;/module&gt;
&lt;/module&gt;
</code></pre></div>
        <p id="Example7-code">Example7:</p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
/**
 * @author a
 * @version $Revision1$
 */
public class Example7 {
  /**
   * @author a
   * @version $Revision1$
   */
  public class ClassA {
    /** */
    private class ClassB {}
  }

  /**
   * @author
   * @version abc
   * @unknownTag value
   */
  public class ClassC {}

  /** */
  public class ClassD {}

  /** */
  public class ClassE&lt;T&gt; {} // violation, as param tag for &lt;T&gt; is missing

  /** */
  private class ClassF&lt;T&gt; {} // violation, as param tag for &lt;T&gt; is missing

  /** */
  @Generated
  public class ClassG&lt;T&gt; {}
}
</code></pre></div>

        <p id="Example8-config">
          To configure a check that allows skipping validation at all
          for classes annotated with <code>@unknownTag</code>
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;module name="TreeWalker"&gt;
    &lt;module name="JavadocType"&gt;
      &lt;property name="allowedAnnotations" value="unknownTag"/&gt;
    &lt;/module&gt;
  &lt;/module&gt;
&lt;/module&gt;
</code></pre></div>
        <p id="Example8-code">
          Example8:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
/**
 * @author a
 * @version $Revision1$
 */
public class Example8 {
  /**
   * @author a
   * @version $Revision1$
   */
  public class ClassA {
    /** */
    private class ClassB {}
  }

  /**
   * @author
   * @version abc
   * @unknownTag value
   */
  public class ClassC {}
  // violation 3 lines above 'Unknown tag 'unknownTag''
  /** */
  public class ClassD {}

  /** */
  public class ClassE&lt;T&gt; {} // violation, as param tag for &lt;T&gt; is missing

  /** */
  private class ClassF&lt;T&gt; {} // violation, as param tag for &lt;T&gt; is missing

  /** */
  @Generated // violation, 'Type Javadoc comment is missing @param &lt;T&gt; tag'
  public class ClassG&lt;T&gt; {}
}
</code></pre></div>
      </subsection>

      <subsection name="Example of Usage" id="Example_of_Usage">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%20path%3A**%2Fsun_checks.xml+repo%3Acheckstyle%2Fcheckstyle+JavadocType">
            Sun Style</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Aconfig%20path%3A**%2Fcheckstyle-checks.xml+repo%3Acheckstyle%2Fcheckstyle+JavadocType">
            Checkstyle Style</a>
          </li>
        </ul>
      </subsection>

      <subsection name="Violation Messages" id="Violation_Messages">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc%20path%3A**%2Fmessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.unknownTag%22">
              javadoc.unknownTag
            </a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc%20path%3A**%2Fmessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.unusedTag%22">
              javadoc.unusedTag
            </a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc%20path%3A**%2Fmessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.unusedTagGeneral%22">
              javadoc.unusedTagGeneral
            </a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc%20path%3A**%2Fmessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22type.missingTag%22">
              type.missingTag
            </a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc%20path%3A**%2Fmessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22type.tagFormat%22">
              type.tagFormat
            </a>
          </li>
        </ul>
        <p>
          All messages can be customized if the default message doesn't suit you.
          Please <a href="../../config.html#Custom_messages">see the documentation</a>
          to learn how to.
        </p>
      </subsection>

      <subsection name="Package" id="Package">
        <p>
          com.puppycrawl.tools.checkstyle.checks.javadoc
        </p>
      </subsection>

      <subsection name="Parent Module" id="Parent_Module">
        <p>
          <a href="../../config.html#TreeWalker">TreeWalker</a>
        </p>
      </subsection>
    </section>
  </body>
</document>
