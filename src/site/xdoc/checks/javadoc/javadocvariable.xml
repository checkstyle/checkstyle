<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 https://maven.apache.org/xsd/xdoc-2.0.xsd">
  <head>
    <title>JavadocVariable</title>
  </head>
  <body>
    <section name="JavadocVariable">
      <p>Since Checkstyle 3.0</p>
      <subsection name="Description" id="Description">
        <div>
          Checks that a variable has a Javadoc comment. Ignores <code>serialVersionUID</code>
          fields.
        </div>
      </subsection>

      <subsection name="Properties" id="Properties">
        <div class="wrapper">
          <table>
            <tr>
              <th>name</th>
              <th>description</th>
              <th>type</th>
              <th>default value</th>
              <th>since</th>
            </tr>
            <tr>
              <td>accessModifiers</td>
              <td>Specify the set of access modifiers used to determine which fields should be checked. This includes both explicitly declared modifiers and implicit ones, such as package-private for fields without an explicit modifier. It also accounts for special cases where fields have implicit modifiers, such as <code>public static final</code> for interface fields and <code>public static</code> for enum constants. Only fields matching the specified modifiers will be analyzed.</td>
              <td><a href="../../property_types.html#AccessModifierOption.5B.5D">AccessModifierOption[]</a></td>
              <td><code>public, protected, package, private</code></td>
              <td>10.22.0</td>
            </tr>
            <tr>
              <td>ignoreNamePattern</td>
              <td>Specify the regexp to define variable names to ignore.</td>
              <td><a href="../../property_types.html#Pattern">Pattern</a></td>
              <td><code>null</code></td>
              <td>5.8</td>
            </tr>
            <tr>
              <td>tokens</td>
              <td>tokens to check</td>
              <td>subset of tokens
                <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_CONSTANT_DEF">
                    ENUM_CONSTANT_DEF</a>
                  .
              </td>
              <td>
                <a href="../../apidocs/com/puppycrawl/tools/checkstyle/api/TokenTypes.html#ENUM_CONSTANT_DEF">
                    ENUM_CONSTANT_DEF</a>
                  .
              </td>
              <td>3.0</td>
            </tr>
          </table>
        </div>
      </subsection>

      <subsection name="Examples" id="Examples">
        <p id="Example1-config">
          To configure the default check:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;module name="TreeWalker"&gt;
    &lt;module name="JavadocVariable"/&gt;
  &lt;/module&gt;
&lt;/module&gt;
</code></pre></div>
        <p id="Example1-code">
          By default, this setting will report a violation if
          there is no javadoc for a field with any access modifier.
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
public class Example1 {
  private int a; // violation, 'Missing a Javadoc comment'

  /**
   * Some description here
   */
  private int b;
  protected int c; // violation, 'Missing a Javadoc comment'
  public int d; // violation, 'Missing a Javadoc comment'
  /*package*/ int e; // violation, 'Missing a Javadoc comment'

}
</code></pre></div>

        <p id="Example2-config">
          To configure the check <code>public</code>
          access modifier:
        </p>

        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;module name="TreeWalker"&gt;
    &lt;module name="JavadocVariable"&gt;
      &lt;property name="accessModifiers" value="public"/&gt;
    &lt;/module&gt;
  &lt;/module&gt;
&lt;/module&gt;
</code></pre></div>
        <p id="Example2-code">
          This setting will report a violation if there
          is no javadoc for <code>public</code> field.
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
public class Example2 {
  private int a;

  /**
   * Some description here
   */
  private int b;
  protected int c;
  public int d; // violation, 'Missing a Javadoc comment'
  /*package*/ int e;
}
</code></pre></div>

        <p id="Example3-config">
          To configure the check for fields which are in <code>private</code> or
          <code>package</code> access modifier:
        </p>

        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;module name="TreeWalker"&gt;
    &lt;module name="JavadocVariable"&gt;
      &lt;property name="accessModifiers" value="private,package"/&gt;
    &lt;/module&gt;
  &lt;/module&gt;
&lt;/module&gt;
</code></pre></div>
        <p id="Example3-code">
          This setting will report a violation if there is no
          javadoc for <code>private</code>  or <code>package</code> field.
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
public class Example3 {
  private int a; // violation, 'Missing a Javadoc comment'

  /**
   * Some description here
   */
  private int b;
  protected int c;
  public int d;
  /*package*/ int e; // violation, 'Missing a Javadoc comment'
}
</code></pre></div>
        <p id="Example4-config">
          To ignore absence of Javadoc comments for fields with names <code>log</code> or
          <code>logger</code>:
        </p>

        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;module name="TreeWalker"&gt;
    &lt;module name="JavadocVariable"&gt;
      &lt;property name="ignoreNamePattern" value="log|logger"/&gt;
    &lt;/module&gt;
  &lt;/module&gt;
&lt;/module&gt;
</code></pre></div>
        <p id="Example4-code">
          This setting will report a violation if there is no
          javadoc for any scope field and ignores fields with
          name <code>log</code> or <code>logger</code>.
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
public class Example4 {
  private int a; // violation, 'Missing a Javadoc comment'

  /**
   * Some description here
  */
  private int b;
  protected int c; // violation, 'Missing a Javadoc comment'
  public int d; // violation, 'Missing a Javadoc comment'
  /*package*/ int e; // violation, 'Missing a Javadoc comment'
}
</code></pre></div>

        <p id="Example5-code">
          This check will not report a violation for local and
           anonymous inner classes with any configuration.
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
public class Example5 {
  public int variablePublic; // violation, 'Missing a Javadoc comment'
  protected int variableProtected; // violation, 'Missing a Javadoc comment'
  int variablePackage; // violation, 'Missing a Javadoc comment'
  private int variablePrivate; // violation, 'Missing a Javadoc comment'

  public void testMethodInnerClass() {

    // This check ignores local classes.
    class InnerClass {
      public int innerClassVariablePublic;
      protected int innerClassVariableProtected;
      int innerClassVariablePackage;
      private int innerClassVariablePrivate;
    }

    // This check ignores anonymous inner classes.
    Runnable runnable = new Runnable() {
      public int innerClassVariablePublic;
      protected int innerClassVariableProtected;
      int innerClassVariablePackage;
      private int innerClassVariablePrivate;
      public void run()
        {
          System.identityHashCode("running");
        }
    };
  }
}
</code></pre></div>
      </subsection>

      <subsection name="Example of Usage" id="Example_of_Usage">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%20path%3A**%2Fsun_checks.xml+repo%3Acheckstyle%2Fcheckstyle+JavadocVariable">
            Sun Style</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Aconfig%20path%3A**%2Fcheckstyle-checks.xml+repo%3Acheckstyle%2Fcheckstyle+JavadocVariable">
            Checkstyle Style</a>
          </li>
        </ul>
      </subsection>

      <subsection name="Violation Messages" id="Violation_Messages">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc%20path%3A**%2Fmessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.missing%22">
              javadoc.missing
            </a>
          </li>
        </ul>
        <p>
          All messages can be customized if the default message doesn't suit you.
          Please <a href="../../config.html#Custom_messages">see the documentation</a>
          to learn how to.
        </p>
      </subsection>

      <subsection name="Package" id="Package">
        <p>
          com.puppycrawl.tools.checkstyle.checks.javadoc
        </p>
      </subsection>

      <subsection name="Parent Module" id="Parent_Module">
        <p>
          <a href="../../config.html#TreeWalker">TreeWalker</a>
        </p>
      </subsection>
    </section>
  </body>
</document>
