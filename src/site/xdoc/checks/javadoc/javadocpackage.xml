<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 https://maven.apache.org/xsd/xdoc-2.0.xsd">
  <head>
    <title>JavadocPackage</title>
  </head>
  <body>
    <section name="JavadocPackage">
      <p>Since Checkstyle 5.0</p>
      <subsection name="Description" id="Description">
        <div>
          Checks that each Java package has a Javadoc file used for
          commenting. By default, it only allows a <code>package-info.java</code> file, but can be
          configured to allow a <code>package.html</code>
          file.
        </div>
        <p>
          A violation will be reported if both files exist as this is not
          allowed by the Javadoc tool.
        </p>
      </subsection>

      <subsection name="Properties" id="Properties">
        <div class="wrapper">
          <table>
            <tr>
              <th>name</th>
              <th>description</th>
              <th>type</th>
              <th>default value</th>
              <th>since</th>
            </tr>
            <tr>
              <td>allowLegacy</td>
              <td>Allow legacy <code>package.html</code> file to be used.</td>
              <td><a href="../../property_types.html#boolean">boolean</a></td>
              <td><code>false</code></td>
              <td>5.0</td>
            </tr>
            <tr>
              <td>fileExtensions</td>
              <td>Specify the file extensions of the files to process.</td>
              <td><a href="../../property_types.html#String.5B.5D">String[]</a></td>
              <td><code>.java</code></td>
              <td>5.0</td>
            </tr>
          </table>
        </div>
      </subsection>

      <subsection name="Examples" id="Examples">
        <p id="Example1-config">
          To configure the check:
        </p>
        <source>
&lt;module name=&quot;Checker&quot;&gt;
  &lt;module name=&quot;JavadocPackage&quot;/&gt;
&lt;/module&gt;
        </source>
        <p id="Example1-structure">
          Directory structure with no package-info.java file in directory:<br/><br/>
          Example1.java
        </p>
        <p id="Example1-code">
          The following violation is raised in default when
          package-info.java file is missing from directory.
        </p>
        <source>
package com.puppycrawl.tools.checkstyle.checks.javadoc.javadocpackage.nonlegacy;
/* violation on first line 'Missing package-info.java file' */
public class Example1 { }
        </source>

        <p id="Example2-config">
          To configure the check with allowlegacy set to true:
        </p>
        <source>
&lt;module name=&quot;Checker&quot;&gt;
  &lt;module name=&quot;JavadocPackage&quot;&gt;
    &lt;property name=&quot;allowLegacy&quot; value=&quot;true&quot;/&gt;
  &lt;/module&gt;
&lt;/module&gt;
        </source>
        <p id="Example2-structure">
          Directory structure with with package.html file in same directory:<br/><br/>
          Example2.java<br/><br/>
          package.html
        </p>
        <p id="Example2-code">
          The legacy configuration (allowLegacy=true) allows the use of the legacy package.html
          file as an alternative to package-info.java removing violation
        </p>
        <source>
package com.puppycrawl.tools.checkstyle.checks.javadoc.javadocpackage.legacy;
//as package.html file is present in directory
public class Example2 { }
        </source>

        <p id="Example3-config">
          To configure the check with allowlegacy set to true:
        </p>
        <source>
&lt;module name=&quot;Checker&quot;&gt;
  &lt;module name=&quot;JavadocPackage&quot;&gt;
    &lt;property name=&quot;allowLegacy&quot; value=&quot;true&quot;/&gt;
  &lt;/module&gt;
&lt;/module&gt;
        </source>
        <p id="Example3-structure">
          Directory structure with both package-info.java and package.html
          file in same directory:<br/><br/>
          Example3.java<br/><br/>
          package.html<br/><br/>
          package-info.java
        </p>
        <p id="Example3-code">
          The legacy configuration (allowLegacy=true) allows the use of package.html files
          in place of package-info.java but still enforces that only one file
          (either package-info.java or package.html) exists in a package.
        </p>
        <source>
package com.puppycrawl.tools.checkstyle.checks.javadoc.javadocpackage.legacywithboth;
/* violation on first line 'Legacy package.html file should be removed' */
public class Example3 { }
        </source>
      </subsection>

      <subsection name="Example of Usage" id="Example_of_Usage">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%20path%3A**%2Fsun_checks.xml+repo%3Acheckstyle%2Fcheckstyle+JavadocPackage">
            Sun Style</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Aconfig%20path%3A**%2Fcheckstyle-checks.xml+repo%3Acheckstyle%2Fcheckstyle+JavadocPackage">
            Checkstyle Style</a>
          </li>
        </ul>
      </subsection>

      <subsection name="Violation Messages" id="Violation_Messages">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc%20path%3A**%2Fmessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.legacyPackageHtml%22">
              javadoc.legacyPackageHtml
            </a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fjavadoc%20path%3A**%2Fmessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22javadoc.packageInfo%22">
              javadoc.packageInfo
            </a>
          </li>
        </ul>
        <p>
          All messages can be customized if the default message doesn't suit you.
          Please <a href="../../config.html#Custom_messages">see the documentation</a>
          to learn how to.
        </p>
      </subsection>

      <subsection name="Package" id="Package">
        <p>
          com.puppycrawl.tools.checkstyle.checks.javadoc
        </p>
      </subsection>

      <subsection name="Parent Module" id="Parent_Module">
        <p>
          <a href="../../config.html#Checker">Checker</a>
        </p>
      </subsection>
    </section>
  </body>
</document>
