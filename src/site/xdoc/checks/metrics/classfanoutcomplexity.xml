<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 https://maven.apache.org/xsd/xdoc-2.0.xsd">
  <head>
    <title>ClassFanOutComplexity</title>
  </head>
  <body>
    <section name="ClassFanOutComplexity">
      <p>Since Checkstyle 3.4</p>
      <subsection name="Description" id="Description">
        <div>
          Checks the number of other types a given class/record/interface/enum/annotation
          relies on. Also, the square of this has been shown to indicate the amount of
          maintenance required in functional programs (on a file basis) at least.
        </div>
        <p>
          This check processes files in the following way:
        </p>
        <ol>
          <li>
            Iterates over all tokens that might contain type reference.
          </li>
          <li>
            If a class was imported with direct import (i.e.
            <code>import java.math.BigDecimal</code>), or the class was referenced with the
            package name (i.e. <code>java.math.BigDecimal value</code>) and the package was
            added to the <code>excludedPackages</code> parameter, the class does not increase
            complexity.
          </li>
          <li>
            If a class name was added to the <code>excludedClasses</code> parameter,
            the class does not increase complexity.
          </li>
        </ol>
      </subsection>

      <subsection name="Properties" id="Properties">
        <div class="wrapper">
          <table>
            <tr>
              <th>name</th>
              <th>description</th>
              <th>type</th>
              <th>default value</th>
              <th>since</th>
            </tr>
            <tr>
              <td>excludeClassesRegexps</td>
              <td>Specify user-configured regular expressions to ignore classes.</td>
              <td><a href="../../property_types.html#Pattern.5B.5D">Pattern[]</a></td>
              <td><code>^$</code></td>
              <td>7.7</td>
            </tr>
            <tr>
              <td>excludedClasses</td>
              <td>Specify user-configured class names to ignore.</td>
              <td><a href="../../property_types.html#String.5B.5D">String[]</a></td>
              <td><code>ArrayIndexOutOfBoundsException, ArrayList, Boolean, Byte, Character, Class, Collection, Deprecated, Deque, Double, DoubleStream, EnumSet, Exception, Float, FunctionalInterface, HashMap, HashSet, IllegalArgumentException, IllegalStateException, IndexOutOfBoundsException, IntStream, Integer, LinkedHashMap, LinkedHashSet, LinkedList, List, Long, LongStream, Map, NullPointerException, Object, Optional, OptionalDouble, OptionalInt, OptionalLong, Override, Queue, RuntimeException, SafeVarargs, SecurityException, Set, Short, SortedMap, SortedSet, Stream, String, StringBuffer, StringBuilder, SuppressWarnings, Throwable, TreeMap, TreeSet, UnsupportedOperationException, Void, boolean, byte, char, double, float, int, long, short, var, void</code></td>
              <td>5.7</td>
            </tr>
            <tr>
              <td>excludedPackages</td>
              <td>Specify user-configured packages to ignore.</td>
              <td><a href="../../property_types.html#String.5B.5D">String[]</a></td>
              <td><code>{}</code></td>
              <td>7.7</td>
            </tr>
            <tr>
              <td>max</td>
              <td>Specify the maximum threshold allowed.</td>
              <td><a href="../../property_types.html#int">int</a></td>
              <td><code>20</code></td>
              <td>3.4</td>
            </tr>
          </table>
        </div>
      </subsection>

      <subsection name="Examples" id="Examples">
        <p id="Example1-config">
          To configure the check:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;module name="TreeWalker"&gt;
    &lt;module name="ClassFanOutComplexity"/&gt;
  &lt;/module&gt;
&lt;/module&gt;
</code></pre></div>
        <p>
          Example1:
        </p>
        <p id="Example1-code">
          The check passes without violations in the following:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
class Example1{
  Set set = new HashSet(); // Set, HashSet ignored
  Map map = new HashMap(); // Map, HashMap ignored
  Date date = new Date(); // Counted, 1
  Time1 time = new Time1(); // Counted, 2
  Place1 place = new Place1(); // Counted, 3
  int value = 10; // int is ignored
  BufferedReader br;
  File file;
  void method() {
    var result = "result"; // var is ignored
  }
}
class Place1 {}
class Time1 {}
</code></pre></div>
        <p id="Example2-config">
          To configure the check with a threshold of 2:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;module name="TreeWalker"&gt;
    &lt;module name="ClassFanOutComplexity"&gt;
      &lt;property name="max" value="2"/&gt;
    &lt;/module&gt;
  &lt;/module&gt;
&lt;/module&gt;
</code></pre></div>
        <p>
          Example2:
        </p>
        <p id="Example2-code">
          The check results in a violation in the following:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
class Example2{ // violation 'Class Fan-Out Complexity is 5 (max allowed is 2)'
  Set set = new HashSet(); // Set, HashSet ignored
  Map map = new HashMap(); // Map, HashMap ignored
  Date date = new Date(); // Counted, 1
  Time2 time = new Time2(); // Counted, 2
  Place2 place = new Place2(); // Counted, 3
  int value = 10; // int is ignored
  BufferedReader br; // Counted, 4
  File file; // Counted, 5
  void method() {
    var result = "result"; // var is ignored
  }
}
class Place2 {}
class Time2 {}
</code></pre></div>

        <p id="Example3-config">
          To configure the check with three excluded classes <code>HashMap</code>,
          <code>HashSet</code> and <code>Place3</code>:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;module name="TreeWalker"&gt;
    &lt;module name="ClassFanOutComplexity"&gt;
      &lt;property name="excludedClasses" value="HashMap, HashSet, Place3"/&gt;
      &lt;property name="max" value="3"/&gt;
    &lt;/module&gt;
  &lt;/module&gt;
&lt;/module&gt;
</code></pre></div>
        <p>
          Example3:
        </p>
        <p id="Example3-code">
          The check results in a violation in the following:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
class Example3{ // violation 'Class Fan-Out Complexity is 7 (max allowed is 3)'
  Set set = new HashSet(); // Set counted 1, HashSet ignored
  Map map = new HashMap(); // Map counted 2, HashMap ignored
  Date date = new Date(); // Counted, 3
  Time3 time = new Time3(); // Counted, 4
  Place3 place = new Place3(); // Counted, 5
  int value = 10; // int is ignored
  BufferedReader br; // Counted, 6
  File file; // Counted, 7
  void method() {
    var result = "result"; // var is ignored
  }
}
class Place3 {}
class Time3 {}
</code></pre></div>
        <p id="Example4-config">
          To configure the check to exclude classes with a regular expression
          <code>.*Reader$</code>:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;module name="TreeWalker"&gt;
    &lt;module name="ClassFanOutComplexity"&gt;
      &lt;property name="excludeClassesRegexps" value=".*Reader$"/&gt;
      &lt;property name="max" value="3"/&gt;
    &lt;/module&gt;
  &lt;/module&gt;
&lt;/module&gt;
</code></pre></div>
        <p>
          Example4:
        </p>
        <p id="Example4-code">
          The check results in a violation in the following:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
class Example4{ // violation 'Class Fan-Out Complexity is 4 (max allowed is 3)'
  Set set = new HashSet(); // Set, HashSet ignored
  Map map = new HashMap(); // Map, HashMap ignored
  Date date = new Date(); // Counted, 1
  Time4 time = new Time4(); // Counted, 2
  Place4 place = new Place4(); // Counted, 3
  int value = 10; // int is ignored
  BufferedReader br; // Ignored
  File file; // Counted, 4
  void method() {
    var result = "result"; // var is ignored
  }
}
class Place4 {}
class Time4 {}
</code></pre></div>

        <p id="Example5-config">
          To configure the check with an excluded package <code>java.io</code>:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;module name="TreeWalker"&gt;
    &lt;module name="ClassFanOutComplexity"&gt;
      &lt;property name="excludedPackages" value="java.io"/&gt;
      &lt;property name="max" value="5"/&gt;
    &lt;/module&gt;
  &lt;/module&gt;
&lt;/module&gt;
</code></pre></div>
        <p>
          Example5:
        </p>
        <p id="Example5-code">
          The check passes without violations in the following:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
class Example5{
  Set set = new HashSet(); // Set, HashSet ignored
  Map map = new HashMap(); // Map, HashMap ignored
  Date date = new Date(); // Counted, 1
  Time5 time = new Time5(); // Counted, 2
  Place5 place = new Place5(); // Counted, 3
  int value = 10; // int is ignored
  BufferedReader br; // Ignored
  File file; // Ignored
  void method() {
    var result = "result"; // var is ignored
  }
}
class Place5 {}
class Time5 {}
</code></pre></div>
        <p>
          Override property <code>excludedPackages</code> to mark some packages as excluded.
          Each member of <code>excludedPackages</code> should be a valid identifier:
        </p>
        <ul>
          <li>
            <code>java.util</code> - valid, excludes all classes inside <code>java.util</code>,
            but not from the subpackages.
          </li>
          <li>
            <code>java.util.</code> - invalid, should not end with a dot.
          </li>
          <li>
            <code>java.util.*</code> - invalid, should not end with a star.
          </li>
        </ul>
        <p>
          Note, that checkstyle will ignore all classes from the <code>java.lang</code>
          package and its subpackages, even if the <code>java.lang</code> was not listed in
          the <code>excludedPackages</code> parameter.
        </p>
        <p>
          Also note, that <code>excludedPackages</code> will not exclude classes, imported via
          wildcard (e.g. <code>import java.math.*</code>). Instead of wildcard import you should
          use direct import (e.g. <code>import java.math.BigDecimal</code>).
        </p>
        <p id="Example6-config">
          Also note, that checkstyle will not exclude classes within the same file
          even if it was listed in the <code>excludedPackages</code> parameter. For example,
          assuming the config is
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;module name="TreeWalker"&gt;
    &lt;module name="ClassFanOutComplexity"&gt;
      &lt;property name="excludedPackages" value="java.util"/&gt;
      &lt;property name="max" value="3"/&gt;
    &lt;/module&gt;
  &lt;/module&gt;
&lt;/module&gt;
</code></pre></div>
        <p>
          Example6:
        </p>
        <p id="Example6-code">
          And the file is:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
class Example6{ // violation 'Class Fan-Out Complexity is 4 (max allowed is 3)'
  Set set = new HashSet(); // Set, HashSet ignored
  Map map = new HashMap(); // Map, HashMap ignored
  Date date = new Date(); // Ignored
  Time6 time = new Time6(); // Counted, 1
  Place6 place = new Place6(); // Counted, 2
  int value = 10; // int is ignored
  BufferedReader br; // Counted, 3
  File file; // Counted, 4
  void method() {
    var result = "result"; // var is ignored
  }
}
class Place6 {}
class Time6 {}
</code></pre></div>
        <p>
          The <code>Set, Map, HashMap, HashSet, Date</code> member will not be counted,
          since the <code>java.util</code> added to the <code>excludedPackages</code>.
          The <code>BufferReader, File</code> member will be counted,
        </p>
      </subsection>

      <subsection name="Example of Usage" id="Example_of_Usage">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Aconfig%20path%3A**%2Fcheckstyle-checks.xml+repo%3Acheckstyle%2Fcheckstyle+ClassFanOutComplexity">
            Checkstyle Style</a>
          </li>
        </ul>
      </subsection>

      <subsection name="Violation Messages" id="Violation_Messages">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2Fchecks%2Fmetrics%20path%3A**%2Fmessages*.properties+repo%3Acheckstyle%2Fcheckstyle+%22classFanOutComplexity%22">
              classFanOutComplexity
            </a>
          </li>
        </ul>
        <p>
          All messages can be customized if the default message doesn't suit you.
          Please <a href="../../config.html#Custom_messages">see the documentation</a>
          to learn how to.
        </p>
      </subsection>

      <subsection name="Package" id="Package">
        <p>
          com.puppycrawl.tools.checkstyle.checks.metrics
        </p>
      </subsection>

      <subsection name="Parent Module" id="Parent_Module">
        <p>
          <a href="../../config.html#TreeWalker">TreeWalker</a>
        </p>
      </subsection>
    </section>
  </body>
</document>
