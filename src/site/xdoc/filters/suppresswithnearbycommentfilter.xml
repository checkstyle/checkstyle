<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 https://maven.apache.org/xsd/xdoc-2.0.xsd">
  <head>
    <title>SuppressWithNearbyCommentFilter</title>
  </head>
  <body>
    <section name="SuppressWithNearbyCommentFilter">
      <p>Since Checkstyle 5.0</p>
      <subsection name="Description" id="Description">
        <div>
          Filter <code>SuppressWithNearbyCommentFilter</code> uses
          nearby comments to suppress audit events.
        </div>
        <p>
          Rationale: Same as <code>SuppressionCommentFilter</code>.
          Whereas the SuppressionCommentFilter uses matched pairs of
          filters to turn on/off comment matching,
          <code>SuppressWithNearbyCommentFilter</code> uses
          single comments. This requires fewer lines to mark a region, and
          may be aesthetically preferable in some contexts.
        </p>
        <p>
          Attention: This filter may only be specified within the TreeWalker module
          (<code>&lt;module name=&quot;TreeWalker&quot;/&gt;</code>) and only
          applies to checks which are also defined within this module.
          To filter non-TreeWalker checks like <code>RegexpSingleline</code>,
          a <a href="suppresswithplaintextcommentfilter.html#SuppressWithPlainTextCommentFilter">
          SuppressWithPlainTextCommentFilter</a> or similar filter must be used.
        </p>
      </subsection>
      <subsection name="Notes" id="Notes">
        <p>
          SuppressWithNearbyCommentFilter can suppress Checks that have
          Treewalker as parent module.
        </p>
      </subsection>
      <subsection name="Properties" id="Properties">
        <div class="wrapper">
          <table>
            <tr>
              <th>name</th>
              <th>description</th>
              <th>type</th>
              <th>default value</th>
              <th>since</th>
            </tr>
            <tr>
              <td>checkC</td>
              <td>Control whether to check C style comments (<code>&#47;* ... *&#47;</code>).</td>
              <td><a href="../property_types.html#boolean">boolean</a></td>
              <td><code>true</code></td>
              <td>5.0</td>
            </tr>
            <tr>
              <td>checkCPP</td>
              <td>Control whether to check C++ style comments (<code>//</code>).</td>
              <td><a href="../property_types.html#boolean">boolean</a></td>
              <td><code>true</code></td>
              <td>5.0</td>
            </tr>
            <tr>
              <td>checkFormat</td>
              <td>Specify check pattern to suppress.</td>
              <td><a href="../property_types.html#Pattern">Pattern</a></td>
              <td><code>&quot;.*&quot;</code></td>
              <td>5.0</td>
            </tr>
            <tr>
              <td>commentFormat</td>
              <td>Specify comment pattern to trigger filter to begin suppression.</td>
              <td><a href="../property_types.html#Pattern">Pattern</a></td>
              <td><code>&quot;SUPPRESS CHECKSTYLE (\w+)&quot;</code></td>
              <td>5.0</td>
            </tr>
            <tr>
              <td>idFormat</td>
              <td>Specify check ID pattern to suppress.</td>
              <td><a href="../property_types.html#Pattern">Pattern</a></td>
              <td><code>null</code></td>
              <td>8.24</td>
            </tr>
            <tr>
              <td>influenceFormat</td>
              <td>Specify negative/zero/positive value that defines the number of lines preceding/at/following the suppression comment.</td>
              <td><a href="../property_types.html#String">String</a></td>
              <td><code>&quot;0&quot;</code></td>
              <td>5.0</td>
            </tr>
            <tr>
              <td>messageFormat</td>
              <td>Define message pattern to suppress.</td>
              <td><a href="../property_types.html#Pattern">Pattern</a></td>
              <td><code>null</code></td>
              <td>5.0</td>
            </tr>
          </table>
        </div>
      </subsection>
      <subsection name="Examples" id="Examples">
        <p id="Example1-config">
          To configure a filter to suppress audit events for <i>check</i>
          on any line with a comment <code>SUPPRESS CHECKSTYLE <i>check</i></code>:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;module name="TreeWalker"&gt;
    &lt;module name="SuppressWithNearbyCommentFilter"/&gt;
    &lt;module name="NoWhitespaceAfter"/&gt;
  &lt;/module&gt;
&lt;/module&gt;
</code></pre></div>
        <p id="Example1-code">Example:</p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
public class Example1 {
  private int [] array; // SUPPRESS CHECKSTYLE NoWhitespaceAfter
}
</code></pre></div>
        <p id="Example2-config">
          To configure a filter to suppress all audit events on any line
          containing the comment <code>CHECKSTYLE IGNORE THIS LINE</code>:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;module name="TreeWalker"&gt;
    &lt;module name="SuppressWithNearbyCommentFilter"&gt;
      &lt;property name="commentFormat" value="CHECKSTYLE IGNORE THIS LINE"/&gt;
      &lt;property name="checkFormat" value=".*"/&gt;
      &lt;property name="influenceFormat" value="0"/&gt;
    &lt;/module&gt;
    &lt;module name="ConstantName"/&gt;
  &lt;/module&gt;
&lt;/module&gt;
</code></pre></div>
        <p id="Example2-code">Example:</p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
public class Example2 {
  public static final int lowerCaseConstant = 1; // CHECKSTYLE IGNORE THIS LINE
}
</code></pre></div>
        <p id="Example3-config">
          To configure a filter so that
          <code>// OK to catch (Throwable|Exception|RuntimeException) here</code>
          permits the current and previous line to avoid generating an IllegalCatch
          audit event:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;module name="TreeWalker"&gt;
    &lt;module name="SuppressWithNearbyCommentFilter"&gt;
      &lt;property name="commentFormat" value="OK to catch (\w+) here"/&gt;
      &lt;property name="checkFormat" value="IllegalCatchCheck"/&gt;
      &lt;property name="messageFormat" value="$1"/&gt;
      &lt;property name="influenceFormat" value="-1"/&gt;
    &lt;/module&gt;
    &lt;module name="IllegalCatch"/&gt;
  &lt;/module&gt;
&lt;/module&gt;
</code></pre></div>
        <p id="Example3-code">Example:</p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
public class Example3 {
  public void doStuff() {
    try {
      // blah blah blah
    }
    catch(RuntimeException re) {
      // OK to catch RuntimeException here
    }
  }
}
</code></pre></div>
        <p id="Example4-config">
          To configure a filter so that
          <code>CHECKSTYLE IGNORE <i>check</i> FOR NEXT<i>var</i> LINES</code>
          avoids triggering any audits for the given check for
          the current line and the next <i>var</i> lines (for a total of <i>var</i>+1 lines):
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;module name="TreeWalker"&gt;
    &lt;module name="SuppressWithNearbyCommentFilter"&gt;
      &lt;property name="commentFormat"
          value="CHECKSTYLE IGNORE (\w+) FOR NEXT (\d+) LINES"/&gt;
      &lt;property name="checkFormat" value="$1"/&gt;
      &lt;property name="influenceFormat" value="$2"/&gt;
    &lt;/module&gt;
    &lt;module name="ConstantName"/&gt;
  &lt;/module&gt;
&lt;/module&gt;
</code></pre></div>
        <p id="Example4-code">Example:</p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
public class Example4 {
  // CHECKSTYLE IGNORE ConstantNameCheck FOR NEXT 4 LINES
  static final int lowerCaseConstant1 = 1;
  static final int lowerCaseConstant2 = 2;
  static final int lowerCaseConstant3 = 3;
  static final int lowerCaseConstant4 = 4;
  static final int lowerCaseConstant5 = 5; // violation 'must match pattern'
}
</code></pre></div>
        <p id="Example5-config">
          To configure a filter to avoid any audits on code like:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;module name="TreeWalker"&gt;
    &lt;module name="SuppressWithNearbyCommentFilter"&gt;
      &lt;property name="commentFormat"
                value="ALLOW (\w+) ON PREVIOUS LINE"/&gt;
      &lt;property name="influenceFormat" value="-1"/&gt;
    &lt;/module&gt;
    &lt;module name="MemberName"/&gt;
  &lt;/module&gt;
&lt;/module&gt;
</code></pre></div>
        <p id="Example5-code">Example:</p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
public class Example5 {
  private int D2;
  // ALLOW MemberName ON PREVIOUS LINE
}
</code></pre></div>

        <p id="Example6-config">
          To configure a filter to allow suppress one or more Checks
          (separated by &quot;|&quot;) and demand comment no less than 14 symbols:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;module name="TreeWalker"&gt;
    &lt;module name="SuppressWithNearbyCommentFilter"&gt;
      &lt;property name="commentFormat"
                value="@cs\.suppress \[(\w+(\|\w+)*)\] \w[-\.'`,:;\w ]{13,}"/&gt;
      &lt;property name="checkFormat" value="$1"/&gt;
      &lt;property name="influenceFormat" value="1"/&gt;
    &lt;/module&gt;
    &lt;module name="ConstantName"/&gt;
    &lt;module name="NoWhitespaceAfter"/&gt;
  &lt;/module&gt;
&lt;/module&gt;
</code></pre></div>
        <p id="Example6-code">Example:</p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
public class Example6 {
  // @cs.suppress [ConstantName|NoWhitespaceAfter] A comment here
  public static final int [] array = {};
}
</code></pre></div>
        <p>
          It is possible to specify an ID of checks, so that it can be leveraged by the
          SuppressWithNearbyCommentFilter to skip validations. The following examples
          show how to skip validations near code that has comment like
          <code>// @cs-: &lt;ID/&gt; (reason)</code>, where ID is the ID of checks you want to
          suppress.
        </p>
        <p id="Example7-config">
          Example of Checkstyle checks and
          SuppressWithNearbyCommentFilter configuration (idFormat which
          is set to '$1' points that ID of the checks is in the first group of
          commentFormat regular expressions):
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;module name="TreeWalker"&gt;
    &lt;module name="SuppressWithNearbyCommentFilter"&gt;
      &lt;property name="commentFormat"
        value="@cs\.suppress \[(\w+(\|\w+)*)\] \w[-\.'`,:;\w ]{14,}"/&gt;
      &lt;property name="checkFormat" value="$1"/&gt;
      &lt;property name="influenceFormat" value="1"/&gt;
    &lt;/module&gt;
    &lt;module name="RegexpSinglelineJava"&gt;
      &lt;property name="id" value="ignore"/&gt;
      &lt;property name="format" value="^.*@Ignore\s*$"/&gt;
      &lt;property name="message" value="@Ignore should have a reason."/&gt;
    &lt;/module&gt;
    &lt;module name="RegexpSinglelineJava"&gt;
      &lt;property name="id" value="systemout"/&gt;
      &lt;property name="format" value="^.*System\.\(out|err\).*$"/&gt;
      &lt;property name="message" value="Don't use System.out/err, use SLF4J instead."/&gt;
    &lt;/module&gt;
  &lt;/module&gt;
&lt;/module&gt;
</code></pre></div>
        <p id="Example7-code">Example:</p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
public class Example7 {
  @Ignore // @cs-: ignore (test has not been implemented yet)
  @Test
  public void testMethod() {}

  public static void foo() {

    System.out.println("Debug info."); // @cs-: systemout (should not fail)
  }
}
</code></pre></div>
        <p id="Example8-config">
          Example of how to configure the check to suppress more than one checks.
          The influence format is specified in the second regexp group.
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;module name="TreeWalker"&gt;
    &lt;module name="SuppressWithNearbyCommentFilter"&gt;
      &lt;property name="commentFormat" value="@cs-\: ([\w\|]+) influence (\d+)"/&gt;
      &lt;property name="checkFormat" value="$1"/&gt;
      &lt;property name="influenceFormat" value="$2"/&gt;
    &lt;/module&gt;
    &lt;module name="ClassDataAbstractionCoupling"&gt;
      &lt;property name="max" value="1" /&gt;
    &lt;/module&gt;
    &lt;module name="MagicNumber"/&gt;
  &lt;/module&gt;
&lt;/module&gt;
</code></pre></div>
        <p id="Example8-code">Example:</p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
// @cs-: ClassDataAbstractionCoupling influence 2
// @cs-: MagicNumber influence 4
public class Example8 { // no violations from ClassDataAbstractionCoupling here
  private Example1 foo = new Example1();
  private Example2 bar = new Example2();
  private int value = 10022; // no violations from MagicNumber here
}
</code></pre></div>
      </subsection>
      <subsection name="Example of Usage" id="Example_of_Usage">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Aconfig%20path%3A**%2Fcheckstyle-checks.xml+repo%3Acheckstyle%2Fcheckstyle+SuppressWithNearbyCommentFilter">
            Checkstyle Style</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%20path%3A**%2Fgoogle_checks.xml+repo%3Acheckstyle%2Fcheckstyle+SuppressWithNearbyCommentFilter">
            Google Style</a>
          </li>
        </ul>
      </subsection>
      <subsection name="Package" id="Package">
        <p> com.puppycrawl.tools.checkstyle.filters </p>
      </subsection>

      <subsection name="Parent Module" id="Parent_Module">
        <p>
          <a href="../config.html#TreeWalker">TreeWalker</a>
        </p>
      </subsection>
    </section>
  </body>
</document>
