<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 https://maven.apache.org/xsd/xdoc-2.0.xsd">
  <head>
    <title>SuppressWithPlainTextCommentFilter</title>
  </head>
  <body>
    <section name="SuppressWithPlainTextCommentFilter">
      <p>Since Checkstyle 8.6</p>
      <subsection name="Description" id="Description">
        <div>
          Filter <code>SuppressWithPlainTextCommentFilter</code> uses plain text to suppress
          audit events. The filter can be used only to suppress audit events received from
          the checks which implement FileSetCheck interface. In other words, the checks
          which have Checker as a parent module. The filter knows nothing about AST,
          it treats only plain text comments and extracts the information required
          for suppression from the plain text comments. Currently, the filter supports
          only single-line comments.
        </div>
        <p>
          Please, be aware of the fact that, it is not recommended to use the filter
          for Java code anymore, however you still are able to use it to suppress audit
          events received from the checks which implement FileSetCheck interface.
        </p>
        <p>
          Rationale: Sometimes there are legitimate reasons for violating
          a check. When this is a matter of the code in question and not
          personal preference, the best place to override the policy is in
          the code itself. Semi-structured comments can be associated
          with the check. This is sometimes superior to a separate
          suppressions file, which must be kept up-to-date as the source
          file is edited.
        </p>
        <p>
          Note that the suppression comment should be put before the violation.
          You can use more than one suppression comment each on separate line.
        </p>
      </subsection>
      <subsection name="Properties" id="Properties">
        <div class="wrapper">
          <macro name="properties">
            <param name="modulePath"
                   value="src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithPlainTextCommentFilter.java"/>
          </macro>
        </div>
      </subsection>
      <subsection name="Notes" id="Notes">
        <p>
          Properties <code>offCommentFormat</code> and <code>onCommentFormat</code>
          must have equal
          <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/regex/Matcher.html#groupCount()">
          paren counts</a>.
        </p>
        <p>
          SuppressionWithPlainTextCommentFilter can suppress Checks that have Treewalker or
          Checker as parent module.
        </p>
      </subsection>
      <subsection name="Examples" id="Examples">
        <p id="Example1-config">
          To configure a filter to suppress audit events between a comment
          containing <code>// CHECKSTYLE:OFF</code> and a comment containing
          <code>// CHECKSTYLE:ON</code> (the default comments).
          Checker is configured to check only properties files using UniqueProperties check:
        </p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/filters/suppresswithplaintextcommentfilter/Example1.java"/>
          <param name="type" value="config"/>
        </macro>
        <p id="Example1-raw">Example:</p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/filters/suppresswithplaintextcommentfilter/Example1.properties"/>
          <param name="type" value="raw"/>
        </macro>
        <p id="Example2-config">
          To configure a filter to suppress audit events between a comment
          containing <code>STOP CHECK</code> and a comment
          containing <code>RESUME CHECK</code>.
          Checker is configured to check only properties files using UniqueProperties check:
        </p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/filters/suppresswithplaintextcommentfilter/Example2.java"/>
          <param name="type" value="config"/>
        </macro>
        <p id="Example2-raw">Example:</p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/filters/suppresswithplaintextcommentfilter/Example2.properties"/>
          <param name="type" value="raw"/>
        </macro>
        <p id="Example3-config">
          To configure a filter to suppress UniqueProperties check audit events between a comment
          containing <code>STOP UNIQUE CHECK</code> and a comment containing
          <code>RESUME UNIQUE CHECK</code>.
          Checker is configured to check only properties files using both UniqueProperties check
          and OrderedProperties check:
        </p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/filters/suppresswithplaintextcommentfilter/Example3.java"/>
          <param name="type" value="config"/>
        </macro>
        <p id="Example3-raw">Example:</p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/filters/suppresswithplaintextcommentfilter/Example3.properties"/>
          <param name="type" value="raw"/>
        </macro>
        <p id="Example4-config">
          To configure a filter to suppress audit events for the check mentioned in the comment
          <code>CSOFF: <i>regexp</i></code> and <code>CSON: <i>regexp</i></code>.
          Checker is configured to check only XML files using RegexpSingleline check to detect
          disallowed 'code' values for the 'type' parameter:
        </p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/filters/suppresswithplaintextcommentfilter/Example4.java"/>
          <param name="type" value="config"/>
        </macro>
        <p id="Example4-raw">Example:</p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/filters/suppresswithplaintextcommentfilter/Example4.xml"/>
          <param name="type" value="raw"/>
        </macro>
        <p id="Example5-config">
          To configure a filter to suppress all audit events between a comment
          containing <code>CSOFF: ALMOST_ALL</code> and a comment containing
          <code>CSON: ALMOST_ALL</code>, except for the RegexpSingleline
          check.
          Checker is configured to check only XML files using RegexpSingleline check to detect
          disallowed 'code' values for the 'type' parameter:
        </p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/filters/suppresswithplaintextcommentfilter/Example5.java"/>
          <param name="type" value="config"/>
        </macro>
        <p id="Example5-raw">Example:</p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/filters/suppresswithplaintextcommentfilter/Example5.xml"/>
          <param name="type" value="raw"/>
        </macro>
        <p id="Example6-config">
          To configure a filter to suppress audit events <b>that match a
          specific message in the messageFormat</b> (allowing suppression not only by the
          check's name but also by the message content, as the same check can report
          violations with different message formats) between a comment
          containing <code>CSOFF</code> and comment containing <code>CSON</code>.
          Checker is configured to check only XML files using RegexpSingleline check to detect
          disallowed 'code' and 'config' values for the 'type' parameter:
        </p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/filters/suppresswithplaintextcommentfilter/Example6.java"/>
          <param name="type" value="config"/>
        </macro>
        <p id="Example6-raw">Example:</p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/filters/suppresswithplaintextcommentfilter/Example6.xml"/>
          <param name="type" value="raw"/>
        </macro>
        <p>
          It is possible to specify the ID of checks, which can be used by the
          SuppressWithPlainTextCommentFilter to suppress audit events.
          The following examples show how to suppress audit events in code surrounded
          by <code>CSOFF &lt;ID&gt; (reason)</code> and <code>CSON &lt;ID&gt;</code>,
          where ID is the ID of the check you want to suppress.
        </p>
        <p id="Example7-config">
          Example of Checkstyle checks and SuppressWithPlainTextCommentFilter configuration -
          the checkFormat, set to '$1', indicates that the ID of the check
          is in the first group of offCommentFormat and onCommentFormat
          regular expressions.
          Checker is configured to check only XML files using RegexpSingleline check to detect
          disallowed 'code' and 'config' values for the 'type' parameter:
        </p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/filters/suppresswithplaintextcommentfilter/Example7.java"/>
          <param name="type" value="config"/>
        </macro>
        <p id="Example7-raw">Example:</p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/filters/suppresswithplaintextcommentfilter/Example7.xml"/>
          <param name="type" value="raw"/>
        </macro>
        <p id="Example8-config">
          Example of how to configure the check to suppress more than one check.
          Checker is configured to check only SQL files using RegexpSingleline check to detect
          usage of JOIN operations and LineLength check to detect lines exceeding 60
          characters:
        </p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/filters/suppresswithplaintextcommentfilter/Example8.java"/>
          <param name="type" value="config"/>
        </macro>
        <p id="Example8-raw">Example:</p>
        <macro name="example">
          <param name="path"
                 value="resources/com/puppycrawl/tools/checkstyle/filters/suppresswithplaintextcommentfilter/Example8.sql"/>
          <param name="type" value="raw"/>
        </macro>
        <p id="Example9-config">
          This check is not limited to comments. It can match any symbols in the given file
          as <code>offCommentFormat</code> and <code>onCommentFormat</code> for suppression.
          The following example shows how to suppress violations within a text block for the
          LineLength check.
          Checker is configured to use LineLength check to detect lines exceeding the maximum
          length of 100 characters:
        </p>
        <macro name="example">
          <param name="path"
                 value="resources-noncompilable/com/puppycrawl/tools/checkstyle/filters/suppresswithplaintextcommentfilter/Example9.java"/>
          <param name="type" value="config"/>
        </macro>
        <p id="Example9-code">Example:</p>
        <macro name="example">
          <param name="path"
                 value="resources-noncompilable/com/puppycrawl/tools/checkstyle/filters/suppresswithplaintextcommentfilter/Example9.java"/>
          <param name="type" value="code"/>
        </macro>
      </subsection>
      <subsection name="Example of Usage" id="Example_of_Usage">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Aconfig%20path%3A**%2Fcheckstyle-checks.xml+repo%3Acheckstyle%2Fcheckstyle+SuppressWithPlainTextCommentFilter">
            Checkstyle Style</a>
          </li>
        </ul>
      </subsection>
      <subsection name="Package" id="Package">
        <p> com.puppycrawl.tools.checkstyle.filters </p>
      </subsection>

      <subsection name="Parent Module" id="Parent_Module">
        <macro name="parent-module">
          <param name="moduleName" value="SuppressWithPlainTextCommentFilter"/>
        </macro>
      </subsection>
    </section>
  </body>
</document>
