<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 https://maven.apache.org/xsd/xdoc-2.0.xsd">
  <head>
    <title>SuppressionSingleFilter</title>
  </head>
  <body>
    <section name="SuppressionSingleFilter">
      <p>Since Checkstyle 8.23</p>
      <subsection name="Description" id="Description">
        <div>
          Filter <code>SuppressionSingleFilter</code> suppresses audit events for
          Checks violations in the specified file, class, checks, message, module id,
          lines, and columns.
        </div>
        <p>
          Rationale: To allow users to use suppressions configured in the same config as other
          modules. <code>SuppressionFilter</code> and <code>SuppressionXpathFilter</code> require
          a separate file.
        </p>
        <p>
          Advice: If checkstyle configuration is used for several projects, single suppressions
          on common files/folders is better to put in checkstyle configuration as common rule.
          All suppression that are for specific file names is better to keep in project specific
          config file.
        </p>
        <p>
          Attention: This filter only supports single suppression, and will need
          multiple instances if users wants to suppress multiple violations.
        </p>
      </subsection>
      <subsection name="Notes" id="Notes">
        <p>
          <code>SuppressionSingleFilter</code> can suppress Checks that have
          <code>Treewalker</code> or <code>Checker</code> as parent module.
        </p>
      </subsection>
      <subsection name="Properties" id="Properties">
        <div class="wrapper">
          <table>
            <tr>
              <th>name</th>
              <th>description</th>
              <th>type</th>
              <th>default value</th>
              <th>since</th>
            </tr>
            <tr>
              <td>checks</td>
              <td>Define the RegExp for matching against the name of the check associated with an audit event.</td>
              <td><a href="../property_types.html#Pattern">Pattern</a></td>
              <td><code>null</code></td>
              <td>8.23</td>
            </tr>
            <tr>
              <td>columns</td>
              <td>Specify a comma-separated list of values, where each value is an integer or a range of integers denoted by integer-integer.</td>
              <td><a href="../property_types.html#String">String</a></td>
              <td><code>null</code></td>
              <td>8.23</td>
            </tr>
            <tr>
              <td>files</td>
              <td>Define the RegExp for matching against the file name associated with an audit event.</td>
              <td><a href="../property_types.html#Pattern">Pattern</a></td>
              <td><code>null</code></td>
              <td>8.23</td>
            </tr>
            <tr>
              <td>id</td>
              <td>Specify a string matched against the ID of the check associated with an audit event.</td>
              <td><a href="../property_types.html#String">String</a></td>
              <td><code>null</code></td>
              <td>8.23</td>
            </tr>
            <tr>
              <td>lines</td>
              <td>Specify a comma-separated list of values, where each value is an integer or a range of integers denoted by integer-integer.</td>
              <td><a href="../property_types.html#String">String</a></td>
              <td><code>null</code></td>
              <td>8.23</td>
            </tr>
            <tr>
              <td>message</td>
              <td>Define the RegExp for matching against the message of the check associated with an audit event.</td>
              <td><a href="../property_types.html#Pattern">Pattern</a></td>
              <td><code>null</code></td>
              <td>8.23</td>
            </tr>
          </table>
        </div>
      </subsection>
      <subsection name="Examples" id="Examples">
        <p id="Example1-config">
          The following suppressions directs
          a <code>SuppressionSingleFilter</code> to
          reject <code>JavadocStyleCheck</code> violations for
          lines 82 and 108 to 122 of
          file <code>AbstractComplexityCheck.java</code>,
          and <code>MagicNumberCheck</code> violations for line
          221 of file <code>JavadocStyleCheck.java</code>,
          and <code>'Missing a Javadoc comment'</code> violations
          for all lines and files:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;module name="TreeWalker"&gt;
    &lt;module name="JavadocStyle"/&gt;
    &lt;module name="MagicNumber"/&gt;
  &lt;/module&gt;
  &lt;module name="SuppressionSingleFilter"&gt;
    &lt;property name="checks" value="JavadocStyle"/&gt;
    &lt;property name="files" value="Example1.java"/&gt;
    &lt;property name="lines" value="1,5-100"/&gt;
  &lt;/module&gt;
  &lt;module name="SuppressionSingleFilter"&gt;
    &lt;property name="checks" value="MagicNumber"/&gt;
    &lt;property name="files" value="Example1.java"/&gt;
    &lt;property name="lines" value="1,5-100"/&gt;
  &lt;/module&gt;
  &lt;module name="SuppressionSingleFilter"&gt;
    &lt;property name="message" value="Missing a Javadoc comment"/&gt;
  &lt;/module&gt;
&lt;/module&gt;
</code></pre></div>
        <p id="Example1-code">
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
public class Example1 {
  public void exampleMethod() {
    int value = 100;
    // filtered violation ''100' is a magic number'
  }
}
</code></pre></div>
        <p id="Example2-config">
          Suppress check by <a href="https://checkstyle.org/config.html#Id">module id</a>
          when config have two instances on the same check:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;module name="EqualsAvoidNull"/&gt;
  &lt;module name="JavadocMethod"/&gt;
  &lt;module name="SuppressionSingleFilter"&gt;
    &lt;property name="id" value="stringEqual"/&gt;
    &lt;property name="files" value="Example2.java"/&gt;
    &lt;property name="checks" value="EqualsAvoidNull, JavadocMethod"/&gt;
  &lt;/module&gt;
&lt;/module&gt;
</code></pre></div>
        <p id="Example2-code">
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
public class Example2 {

  public void checkStringEquality(String str1, String str2) {
    // filtered violation ''.equals()' should be used for string comparison'
    assert str1 == str2 ;
  }
}
</code></pre></div>
        <p id="Example3-config">
          Suppress all checks for hidden files and folders:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;module name="RegexpSingleline"&gt;
    &lt;property name="format" value=".*example.*"/&gt;
  &lt;/module&gt;
  &lt;module name="SuppressionSingleFilter"&gt;
    &lt;property name="files" value="Example3.java"/&gt;
    &lt;property name="checks" value="RegexpSinglelineCheck"/&gt;
  &lt;/module&gt;
&lt;/module&gt;
</code></pre></div>
        <p id="Example3-code">
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
public class Example3 {

  public void printExample() {
    // filtered violation 'Line matches the illegal pattern 'example''
    System.out.println(
      "This is an example string."
    );
  }

  public void noViolation() {
    System.out.println(
      "This string does not contain 'example'."
    );
  }

}
</code></pre></div>
        <p id="Example4-config">
          Suppress all checks for Maven-generated code:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;module name="NoWhitespaceAfter"/&gt;
  &lt;module name="SuppressionSingleFilter"&gt;
    &lt;property name="files" value="Example4.java"/&gt;
    &lt;property name="checks" value="NoWhitespaceAfter"/&gt;
  &lt;/module&gt;
&lt;/module&gt;
</code></pre></div>
        <p id="Example4-code">
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
public class Example4 {

  // filtered violation 'WhiteSpace after ',''
  public void exampleMethod(int a, int b) {
  }

  public void exampleMethod2() {
    int x = 5 ; // filtered violation 'WhiteSpace before ';''
  }

}
</code></pre></div>
        <p id="Example5-config">
          Suppress all checks for archives, classes and other binary files:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;module name="MethodName"/&gt;
  &lt;module name="SuppressionSingleFilter"&gt;
    &lt;property name="files" value="Example5.java"/&gt;
    &lt;property name="checks" value="MethodName"/&gt;
  &lt;/module&gt;
&lt;/module&gt;
</code></pre></div>
        <p id="Example5-code">
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
public class Example5 {
  // filtered violation 'Name 'example_Method' must match pattern'
  public void example_Method() {
  }

  // filtered violation Name 'Another_Method' must match pattern
  public void Another_Method() {
  }
}
</code></pre></div>
        <p id="Example6-config">
          Suppress all checks for image files:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;module name="ConstantName"/&gt;
  &lt;module name="SuppressionSingleFilter"&gt;
    &lt;property name="files" value="Example6.java"/&gt;
    &lt;property name="checks" value="ConstantName"/&gt;
  &lt;/module&gt;
&lt;/module&gt;
</code></pre></div>
        <p id="Example6-code">
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
public class Example6 {

  // filtered violation 'Name 'myConstant' must match pattern'
  private static final int myConstant = 42;

}
</code></pre></div>
        <p id="Example7-config">
          Suppress all checks for non-java files:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;module name="MemberName"/&gt;
  &lt;module name="SuppressionSingleFilter"&gt;
    &lt;property name="files" value="Example7.java"/&gt;
    &lt;property name="checks" value="MemberName"/&gt;
  &lt;/module&gt;
&lt;/module&gt;
</code></pre></div>
        <p id="Example7-code">
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
public class Example7 {

  // filtered violation 'Name 'MyVariable' must match pattern'
  private int MyVariable = 5;

  // filtered violation 'Name 'PrintHello' must match pattern'
  public void PrintHello() {
  }

  public void printHello() {
  }
}
</code></pre></div>
        <p id="Example8-config">
          Suppress all checks in generated sources:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;module name="TreeWalker"&gt;
    &lt;module name="ParameterNumber"&gt;
      &lt;property name="max" value="5"/&gt;
    &lt;/module&gt;
  &lt;/module&gt;
  &lt;module name="SuppressionSingleFilter"&gt;
    &lt;property name="files" value="Example8.java"/&gt;
    &lt;property name="checks" value="ParameterNumber"/&gt;
  &lt;/module&gt;
&lt;/module&gt;
</code></pre></div>
        <p id="Example8-code">
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
public class Example8 {
  // filtered violation 'more than 5 parameters'
  public void exampleMethod(
    int param1, int param2, int param3, int param4,
    int param5
  ) {}
}
</code></pre></div>
        <p id="Example9-config">
          Suppress FileLength check on integration tests in certain folder:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;module name="TreeWalker"&gt;
    &lt;module name="FileLength"&gt;
      &lt;property name="max" value="1"/&gt;
    &lt;/module&gt;
  &lt;/module&gt;
  &lt;module name="SuppressionSingleFilter"&gt;
    &lt;property name="files" value="Example9.java"/&gt;
    &lt;property name="checks" value="FileLength"/&gt;
  &lt;/module&gt;
&lt;/module&gt;
</code></pre></div>
        <p id="Example9-code">
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
public class Example9 {
  //filtered violation 'File length is 19 lines (max allowed is 1)'
}
</code></pre></div>
        <p id="Example10-config">
          Suppress naming violations on variable named 'log' in all files:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;module name="MemberName"&gt;
    &lt;property name="format" value="^[A-Z][a-zA-Z0-9]*$"/&gt;
  &lt;/module&gt;
  &lt;module name="SuppressionSingleFilter"&gt;
    &lt;property name="files" value="Example10.java"/&gt;
    &lt;property name="message" value="Name 'log' must match pattern"/&gt;
  &lt;/module&gt;
&lt;/module&gt;
</code></pre></div>
        <p id="Example10-code">
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
public class Example10 {

  // filtered violation 'Name 'log' must match pattern'
  private String log = "Some log message";

}
</code></pre></div>
      </subsection>
      <subsection name="Example of Usage" id="Example_of_Usage">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Aconfig%20path%3A**%2Fcheckstyle-checks.xml+repo%3Acheckstyle%2Fcheckstyle+SuppressionSingleFilter">
            Checkstyle Style</a>
          </li>
        </ul>
      </subsection>
      <subsection name="Package" id="Package">
        <p> com.puppycrawl.tools.checkstyle.filters </p>
      </subsection>
      <subsection name="Parent Module" id="Parent_Module">
        <p>
          <a href="../config.html#Checker">Checker</a>
        </p>
      </subsection>
    </section>
  </body>
</document>
