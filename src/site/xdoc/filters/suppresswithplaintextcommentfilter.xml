<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 https://maven.apache.org/xsd/xdoc-2.0.xsd">
  <head>
    <title>SuppressWithPlainTextCommentFilter</title>
  </head>
  <body>
    <section name="SuppressWithPlainTextCommentFilter">
      <p>Since Checkstyle 8.6</p>
      <subsection name="Description" id="Description">
        <div>
          Filter <code>SuppressWithPlainTextCommentFilter</code> uses plain text to suppress
          audit events. The filter can be used only to suppress audit events received from
          the checks which implement FileSetCheck interface. In other words, the checks
          which have Checker as a parent module. The filter knows nothing about AST,
          it treats only plain text comments and extracts the information required
          for suppression from the plain text comments. Currently, the filter supports
          only single-line comments.
        </div>
        <p>
          Please, be aware of the fact that, it is not recommended to use the filter
          for Java code anymore, however you still are able to use it to suppress audit
          events received from the checks which implement FileSetCheck interface.
        </p>
        <p>
          Rationale: Sometimes there are legitimate reasons for violating
          a check. When this is a matter of the code in question and not
          personal preference, the best place to override the policy is in
          the code itself. Semi-structured comments can be associated
          with the check. This is sometimes superior to a separate
          suppressions file, which must be kept up-to-date as the source
          file is edited.
        </p>
        <p>
          Note that the suppression comment should be put before the violation.
          You can use more than one suppression comment each on separate line.
        </p>
      </subsection>
      <subsection name="Properties" id="Properties">
        <div class="wrapper">
          <table>
            <tr>
              <th>name</th>
              <th>description</th>
              <th>type</th>
              <th>default value</th>
              <th>since</th>
            </tr>
            <tr>
              <td>checkFormat</td>
              <td>Specify check pattern to suppress.</td>
              <td><a href="../property_types.html#Pattern">Pattern</a></td>
              <td><code>&quot;.*&quot;</code></td>
              <td>8.6</td>
            </tr>
            <tr>
              <td>idFormat</td>
              <td>Specify check ID pattern to suppress.</td>
              <td><a href="../property_types.html#Pattern">Pattern</a></td>
              <td><code>null</code></td>
              <td>8.24</td>
            </tr>
            <tr>
              <td>messageFormat</td>
              <td>Specify message pattern to suppress.</td>
              <td><a href="../property_types.html#Pattern">Pattern</a></td>
              <td><code>null</code></td>
              <td>8.6</td>
            </tr>
            <tr>
              <td>offCommentFormat</td>
              <td>Specify comment pattern to trigger filter to begin suppression.</td>
              <td><a href="../property_types.html#Pattern">Pattern</a></td>
              <td><code>&quot;// CHECKSTYLE:OFF&quot;</code></td>
              <td>8.6</td>
            </tr>
            <tr>
              <td>onCommentFormat</td>
              <td>Specify comment pattern to trigger filter to end suppression.</td>
              <td><a href="../property_types.html#Pattern">Pattern</a></td>
              <td><code>&quot;// CHECKSTYLE:ON&quot;</code></td>
              <td>8.6</td>
            </tr>
          </table>
        </div>
      </subsection>
      <subsection name="Notes" id="Notes">
        <p>
          Properties <code>offCommentFormat</code> and <code>onCommentFormat</code>
          must have equal
          <a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/regex/Matcher.html#groupCount()">
          paren counts</a>.
        </p>
        <p>
          SuppressionWithPlainTextCommentFilter can suppress Checks that have Treewalker or
          Checker as parent module.
        </p>
      </subsection>
      <subsection name="Examples" id="Examples">
        <p id="Example1-config">
          To configure a filter to suppress audit events between a comment
          containing <code>// CHECKSTYLE:OFF</code> and a comment containing
          <code>// CHECKSTYLE:ON</code> (the default comments).
          Checker is configured to check only properties files using UniqueProperties check:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;property name="fileExtensions" value="properties"/&gt;

  &lt;module name="UniqueProperties"/&gt;
  &lt;module name="SuppressWithPlainTextCommentFilter"/&gt;

&lt;/module&gt;
</code></pre></div>
        <p id="Example1-raw">Example:</p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
# // CHECKSTYLE:OFF
# suppressed violation below
keyB=value1
keyB=value2
# // CHECKSTYLE:ON
# // violation below 'Duplicated property 'keyC' (2 occurrence(s)).'
keyC=value4
keyC=value5
</code></pre></div>
        <p id="Example2-config">
          To configure a filter to suppress audit events between a comment
          containing <code>STOP CHECK</code> and a comment
          containing <code>RESUME CHECK</code>.
          Checker is configured to check only properties files using UniqueProperties check:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;property name="fileExtensions" value="properties"/&gt;

  &lt;module name="UniqueProperties"/&gt;

  &lt;module name="SuppressWithPlainTextCommentFilter"&gt;
    &lt;property name="offCommentFormat" value="STOP CHECK"/&gt;
    &lt;property name="onCommentFormat" value="RESUME CHECK"/&gt;
  &lt;/module&gt;

&lt;/module&gt;
</code></pre></div>
        <p id="Example2-raw">Example:</p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
# STOP CHECK
# suppressed violation below
keyB=value1
keyB=value2
# RESUME CHECK
# // violation below 'Duplicated property 'keyC' (2 occurrence(s)).'
keyC=value4
keyC=value5
</code></pre></div>
        <p id="Example3-config">
          To configure a filter to suppress UniqueProperties check audit events between a comment
          containing <code>STOP UNIQUE CHECK</code> and a comment containing
          <code>RESUME UNIQUE CHECK</code>.
          Checker is configured to check only properties files using both UniqueProperties check
          and OrderedProperties check:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;property name="fileExtensions" value="properties"/&gt;

  &lt;module name="OrderedProperties"/&gt;
  &lt;module name="UniqueProperties"/&gt;

  &lt;module name="SuppressWithPlainTextCommentFilter"&gt;
    &lt;property name="offCommentFormat" value="STOP UNIQUE CHECK"/&gt;
    &lt;property name="onCommentFormat" value="RESUME UNIQUE CHECK"/&gt;
    &lt;property name="checkFormat" value="UniquePropertiesCheck"/&gt;
  &lt;/module&gt;

&lt;/module&gt;
</code></pre></div>
        <p id="Example3-raw">Example:</p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
# STOP UNIQUE CHECK
# (OrderedProperties check is still enabled)
# suppressed violation below
keyB=value1
keyB=value2
# // violation below 'Property key 'keyA' is not in the right order with previous property 'keyB.'
keyA=value3
# RESUME UNIQUE CHECK
# // violation below 'Duplicated property 'keyC' (2 occurrence(s)).'
keyC=value4
keyC=value5
</code></pre></div>
        <p id="Example4-config">
          To configure a filter to suppress audit events for the check mentioned in the comment
          <code>CSOFF: <i>regexp</i></code> and <code>CSON: <i>regexp</i></code>.
          Checker is configured to check only XML files using RegexpSingleline check to detect
          disallowed 'code' values for the 'type' parameter:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;property name="fileExtensions" value="xml"/&gt;

  &lt;module name="RegexpSingleline"&gt;
    &lt;property name="format"
        value="param\s+name=&amp;quot;type&amp;quot;\s+value=&amp;quot;code&amp;quot;"/&gt;
    &lt;property name="message"
        value="Type code is not allowed. Use type raw instead."/&gt;
  &lt;/module&gt;

  &lt;module name="SuppressWithPlainTextCommentFilter"&gt;
    &lt;property name="offCommentFormat" value="CSOFF\: ([\w\|]+)"/&gt;
    &lt;property name="onCommentFormat" value="CSON\: ([\w\|]+)"/&gt;
    &lt;property name="checkFormat" value="$1"/&gt;
  &lt;/module&gt;

&lt;/module&gt;
</code></pre></div>
        <p id="Example4-raw">Example:</p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
&lt;project&gt;
  &lt;p&gt;Examples:&lt;/p&gt;
&lt;!-- CSOFF: RegexpSinglelineCheck --&gt;
  &lt;macro name="example"&gt;
    &lt;param name="path" value="Example3.java"/&gt;
    &lt;!-- suppressed violation below  --&gt;
    &lt;param name="type" value="code"/&gt;
  &lt;/macro&gt;
&lt;!-- CSON: RegexpSinglelineCheck --&gt;
  &lt;macro name="example"&gt;
    &lt;param name="path" value="Example4.sql"/&gt;
    &lt;param name="type" value="code"/&gt;
    &lt;!-- // violation above 'Type code is not allowed. Use type raw instead'
    --&gt;
  &lt;/macro&gt;
&lt;/project&gt;
</code></pre></div>
        <p id="Example5-config">
          To configure a filter to suppress all audit events between a comment
          containing <code>CSOFF: ALMOST_ALL</code> and a comment containing
          <code>CSON: ALMOST_ALL</code>, except for the RegexpSingleline
          check.
          Checker is configured to check only XML files using RegexpSingleline check to detect
          disallowed 'code' values for the 'type' parameter:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;property name="fileExtensions" value="xml"/&gt;

  &lt;module name="RegexpSingleline"&gt;
    &lt;property name="format"
        value="param\s+name=&amp;quot;type&amp;quot;\s+value=&amp;quot;code&amp;quot;"/&gt;
    &lt;property name="message"
        value="Type code is not allowed. Use type raw instead."/&gt;
  &lt;/module&gt;

  &lt;module name="SuppressWithPlainTextCommentFilter"&gt;
    &lt;property name="offCommentFormat" value="CSOFF\: ALMOST_ALL"/&gt;
    &lt;property name="onCommentFormat" value="CSON\: ALMOST_ALL"/&gt;
    &lt;property name="checkFormat" value="^((?!(RegexpSinglelineCheck)).)*$"/&gt;
  &lt;/module&gt;

&lt;/module&gt;
</code></pre></div>
        <p id="Example5-raw">Example:</p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
&lt;project&gt;
  &lt;p&gt;Examples:&lt;/p&gt;
&lt;!-- CSOFF: ALMOST_ALL --&gt;
  &lt;macro name="example"&gt;
    &lt;param name="path" value="Example3.sql"/&gt;
    &lt;param name="type" value="code"/&gt;
    &lt;!-- // violation above 'Type code is not allowed. Use type raw instead'
    (The RegexpSingleline check is explicitly excluded from suppressions.) --&gt;
  &lt;/macro&gt;
&lt;!-- CSON: ALMOST_ALL --&gt;
  &lt;macro name="example"&gt;
    &lt;param name="path" value="Example4.sql"/&gt;
    &lt;param name="type" value="code"/&gt;
    &lt;!-- // violation above 'Type code is not allowed. Use type raw instead'
    --&gt;
  &lt;/macro&gt;
&lt;/project&gt;
</code></pre></div>
        <p id="Example6-config">
          To configure a filter to suppress audit events <b>that match a
          specific message in the messageFormat</b> (allowing suppression not only by the
          check's name but also by the message content, as the same check can report
          violations with different message formats) between a comment
          containing <code>CSOFF</code> and comment containing <code>CSON</code>.
          Checker is configured to check only XML files using RegexpSingleline check to detect
          disallowed 'code' and 'config' values for the 'type' parameter:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;property name="fileExtensions" value="xml"/&gt;

  &lt;module name="RegexpSingleline"&gt;
    &lt;property name="format"
        value="param\s+name=&amp;quot;type&amp;quot;\s+value=&amp;quot;code&amp;quot;"/&gt;
    &lt;property name="message"
        value="Type code is not allowed. Use type raw instead."/&gt;
  &lt;/module&gt;

  &lt;module name="RegexpSingleline"&gt;
    &lt;property name="format"
        value="param\s+name=&amp;quot;type&amp;quot;\s+value=&amp;quot;config&amp;quot;"/&gt;
    &lt;property name="message" value="Type config is not allowed in this file."/&gt;
  &lt;/module&gt;

  &lt;module name="SuppressWithPlainTextCommentFilter"&gt;
    &lt;property name="offCommentFormat" value="CSOFF"/&gt;
    &lt;property name="onCommentFormat" value="CSON"/&gt;
    &lt;property name="checkFormat" value="RegexpSinglelineCheck"/&gt;
    &lt;property name="messageFormat"
        value="^Type code is not allowed. Use type raw instead.$"/&gt;
  &lt;/module&gt;
&lt;/module&gt;
</code></pre></div>
        <p id="Example6-raw">Example:</p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
&lt;project&gt;
  &lt;p&gt;Examples:&lt;/p&gt;
&lt;!-- CSOFF --&gt;
  &lt;macro name="example"&gt;
    &lt;param name="path" value="Example3.java"/&gt;
    &lt;param name="type" value="config"/&gt;
    &lt;!-- // violation above 'Type config is not allowed in this file'
    (Audit events with this message are not suppressed.) --&gt;
  &lt;/macro&gt;
  &lt;macro name="example"&gt;
    &lt;param name="path" value="Example4.java"/&gt;
    &lt;!-- suppressed violation below  --&gt;
    &lt;param name="type" value="code"/&gt;
&lt;!-- CSON --&gt;
  &lt;/macro&gt;
&lt;/project&gt;
</code></pre></div>
        <p>
          It is possible to specify the ID of checks, which can be used by the
          SuppressWithPlainTextCommentFilter to suppress audit events.
          The following examples show how to suppress audit events in code surrounded
          by <code>CSOFF &lt;ID&gt; (reason)</code> and <code>CSON &lt;ID&gt;</code>,
          where ID is the ID of the check you want to suppress.
        </p>
        <p id="Example7-config">
          Example of Checkstyle checks and SuppressWithPlainTextCommentFilter configuration -
          the checkFormat, set to '$1', indicates that the ID of the check
          is in the first group of offCommentFormat and onCommentFormat
          regular expressions.
          Checker is configured to check only XML files using RegexpSingleline check to detect
          disallowed 'code' and 'config' values for the 'type' parameter:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;property name="fileExtensions" value="xml"/&gt;

  &lt;module name="RegexpSingleline"&gt;
    &lt;property name="id" value="typeCode"/&gt;
    &lt;property name="format"
        value="param\s+name=&amp;quot;type&amp;quot;\s+value=&amp;quot;code&amp;quot;"/&gt;
    &lt;property name="message"
        value="Type code is not allowed. Use type raw instead."/&gt;
  &lt;/module&gt;

  &lt;module name="RegexpSingleline"&gt;
    &lt;property name="id" value="typeConfig"/&gt;
    &lt;property name="format"
        value="param\s+name=&amp;quot;type&amp;quot;\s+value=&amp;quot;config&amp;quot;"/&gt;
    &lt;property name="message" value="Type config is not allowed in this file."/&gt;
  &lt;/module&gt;

  &lt;module name="SuppressWithPlainTextCommentFilter"&gt;
    &lt;property name="offCommentFormat" value="CSOFF (\w+) \(([\w\s]+)\)"/&gt;
    &lt;property name="onCommentFormat" value="CSON (\w+)"/&gt;
    &lt;property name="idFormat" value="$1"/&gt;
  &lt;/module&gt;

&lt;/module&gt;
</code></pre></div>
        <p id="Example7-raw">Example:</p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
&lt;project&gt;
  &lt;p&gt;Examples:&lt;/p&gt;
&lt;!-- CSOFF typeCode (OK to use examples of type code here) --&gt;
  &lt;macro name="example"&gt;
    &lt;param name="path" value="Example3.java"/&gt;
    &lt;param name="type" value="config"/&gt;
    &lt;!-- // violation above 'Type config is not allowed in this file'
    (Audit events from the check with id "typeConfig" are not suppressed) --&gt;
  &lt;/macro&gt;
  &lt;macro name="example"&gt;
    &lt;param name="path" value="Example4.sql"/&gt;
    &lt;!-- suppressed violation below  --&gt;
    &lt;param name="type" value="code"/&gt;
&lt;!-- CSON typeCode --&gt;
  &lt;/macro&gt;
&lt;/project&gt;
</code></pre></div>
        <p id="Example8-config">
          Example of how to configure the check to suppress more than one check.
          Checker is configured to check only SQL files using RegexpSingleline check to detect
          usage of JOIN operations and LineLength check to detect lines exceeding 60
          characters:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;property name="fileExtensions" value="sql"/&gt;

  &lt;module name="RegexpSingleline"&gt;
    &lt;property name="format" value="^.*JOIN\s.+\s(ON|USING)$"/&gt;
    &lt;property name="message" value="Don't use JOIN, use sub-select instead."/&gt;
  &lt;/module&gt;

  &lt;module name="LineLength"&gt;
    &lt;property name="max" value="60"/&gt;
  &lt;/module&gt;

  &lt;module name="SuppressWithPlainTextCommentFilter"&gt;
    &lt;property name="offCommentFormat" value="CSOFF\: ([\w\|]+)"/&gt;
    &lt;property name="onCommentFormat" value="CSON\: ([\w\|]+)"/&gt;
    &lt;property name="checkFormat" value="$1"/&gt;
  &lt;/module&gt;

&lt;/module&gt;
</code></pre></div>
        <p id="Example8-raw">Example:</p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
-- CSOFF: RegexpSinglelineCheck
-- CSOFF: LineLengthCheck
SELECT name, job_name
FROM users AS u
-- suppressed violation below (RegexpSinglelineCheck)
JOIN jobs AS j ON u.job_id = j.id
-- suppressed violation below (LineLengthCheck)
WHERE u.registration_date &gt;= '2023-01-01' AND u.status = 'active';
</code></pre></div>
        <p id="Example9-config">
          This check is not limited to comments. It can match any symbols in the given file
          as <code>offCommentFormat</code> and <code>onCommentFormat</code> for suppression.
          The following example shows how to suppress violations within a text block for the
          LineLength check.
          Checker is configured to use LineLength check to detect lines exceeding the maximum
          length of 100 characters:
        </p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-xml">
&lt;module name="Checker"&gt;
  &lt;module name="LineLength"&gt;
      &lt;property name="max" value="100"/&gt;
  &lt;/module&gt;

  &lt;module name="SuppressWithPlainTextCommentFilter"&gt;
    &lt;property name="offCommentFormat" value='=\s+"""'/&gt;
    &lt;property name="onCommentFormat" value='^\s+""";'/&gt;
  &lt;/module&gt;

&lt;/module&gt;
</code></pre></div>
        <p id="Example9-code">Example:</p>
        <div class="wrapper"><pre class="prettyprint"><code class="language-java">
public class Example9 {

  // suppressed violation below, opening/closing quotes are 'offCommentFormat' and 'onCommentFormat'
  static final String LOCATION_CSV_SAMPLE = """
          locationId,label,regionId,regionLabel,vendorId,vendorLabel,address,address2,city,stateProvinceCode,zipCode,countryCode,latitude,longitude
          ST001,Station 001,ZONE1,Zone 1,CP1,Competitor 1,123 Street,Unit 2,Houston,TX,77033,US,29.761496813335178,-95.53049214204984
          ST002,Station 002,ZONE2,,CP2,,668 Street,Unit 23,San Jose,CA,95191,US,37.35102477242508,-121.9209934020318
          """;

  // violation below, 'Line is longer than 100 characters (found 183).'
  static final String SINGLE_LINE_SAMPLE = "locationId,label,regionId,regionLabel,vendorId,vendorLabel,address,address2,city,stateProvinceCode,zipCode,countryCode,latitude,longitude";
}
</code></pre></div>
      </subsection>
      <subsection name="Example of Usage" id="Example_of_Usage">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Aconfig%20path%3A**%2Fcheckstyle-checks.xml+repo%3Acheckstyle%2Fcheckstyle+SuppressWithPlainTextCommentFilter">
            Checkstyle Style</a>
          </li>
        </ul>
      </subsection>
      <subsection name="Package" id="Package">
        <p> com.puppycrawl.tools.checkstyle.filters </p>
      </subsection>

      <subsection name="Parent Module" id="Parent_Module">
        <p>
          <a href="../config.html#Checker">Checker</a>
        </p>
      </subsection>
    </section>
  </body>
</document>
