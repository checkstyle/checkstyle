<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 https://maven.apache.org/xsd/xdoc-2.0.xsd">
  <head>
    <title>SuppressWithNearbyCommentFilter</title>
  </head>
  <body>
    <section name="SuppressWithNearbyCommentFilter">
      <p>Since Checkstyle 5.0</p>
      <subsection name="Description" id="Description">
        <p>
          Filter <code>SuppressWithNearbyCommentFilter</code> uses
          nearby comments to suppress audit events.
        </p>
        <p>
          Rationale: Same as <code>SuppressionCommentFilter</code>.
          Whereas the SuppressionCommentFilter uses matched pairs of
          filters to turn on/off comment matching,
          <code>SuppressWithNearbyCommentFilter</code> uses
          single comments. This requires fewer lines to mark a region, and
          may be aesthetically preferable in some contexts.
        </p>
        <p>
          Attention: This filter may only be specified within the TreeWalker module
          (<code>&lt;module name=&quot;TreeWalker&quot;/&gt;</code>) and only
          applies to checks which are also defined within this module.
          To filter non-TreeWalker checks like <code>RegexpSingleline</code>,
          a <a href="suppresswithplaintextcommentfilter.html#SuppressWithPlainTextCommentFilter">
          SuppressWithPlainTextCommentFilter</a> or similar filter must be used.
        </p>
      </subsection>
      <subsection name="Notes" id="Notes">
        <p>
          SuppressWithNearbyCommentFilter can suppress Checks that have
          Treewalker as parent module.
        </p>
      </subsection>
      <subsection name="Properties" id="Properties">
        <div class="wrapper">
          <table>
            <tr>
              <th>name</th>
              <th>description</th>
              <th>type</th>
              <th>default value</th>
              <th>since</th>
            </tr>
            <tr>
              <td>commentFormat</td>
              <td>Specify comment pattern to trigger filter to begin suppression.</td>
              <td><a href="../property_types.html#Pattern">Pattern</a></td>
              <td><code>&quot;SUPPRESS CHECKSTYLE (\w+)&quot;</code></td>
              <td>5.0</td>
            </tr>
            <tr>
              <td>checkFormat</td>
              <td>Specify check pattern to suppress.</td>
              <td><a href="../property_types.html#Pattern">Pattern</a></td>
              <td><code>&quot;.*&quot;</code></td>
              <td>5.0</td>
            </tr>
            <tr>
              <td>messageFormat</td>
              <td>Define message pattern to suppress.</td>
              <td><a href="../property_types.html#Pattern">Pattern</a></td>
              <td><code>null</code></td>
              <td>5.0</td>
            </tr>
            <tr>
              <td>idFormat</td>
              <td>Specify check ID pattern to suppress.</td>
              <td><a href="../property_types.html#Pattern">Pattern</a></td>
              <td><code>null</code></td>
              <td>8.24</td>
            </tr>
            <tr>
              <td>influenceFormat</td>
              <td>Specify negative/zero/positive value that defines the number of
                  lines preceding/at/following the suppression comment.</td>
              <td><a href="../property_types.html#String">String</a></td>
              <td><code>&quot;0&quot;</code></td>
              <td>5.0</td>
            </tr>
            <tr>
              <td>checkCPP</td>
              <td>Control whether to check C++ style comments (<code>//</code>).</td>
              <td><a href="../property_types.html#boolean">boolean</a></td>
              <td><code>true</code></td>
              <td>5.0</td>
            </tr>
            <tr>
              <td>checkC</td>
              <td>Control whether to check C style comments (<code>/* ... */</code>).</td>
              <td><a href="../property_types.html#boolean">boolean</a></td>
              <td><code>true</code></td>
              <td>5.0</td>
            </tr>
          </table>
        </div>
      </subsection>
      <subsection name="Examples" id="Examples">
        <p id="Example1-config">
          To configure a filter to suppress audit events for <i>check</i>
          on any line with a comment <code>SUPPRESS CHECKSTYLE <i>check</i></code>:
        </p>
        <source>
&lt;module name=&quot;Checker&quot;&gt;
  &lt;module name=&quot;TreeWalker&quot;&gt;
    &lt;module name=&quot;SuppressWithNearbyCommentFilter&quot;/&gt;
  &lt;/module&gt;
&lt;/module&gt;
        </source>
        <p id="Example1-code">Example:</p>
        <source>
private int [] array; // SUPPRESS CHECKSTYLE
        </source>
        <p id="Example2-config">
          To configure a filter to suppress all audit events on any line
          containing the comment <code>CHECKSTYLE IGNORE THIS LINE</code>:
        </p>
        <source>
&lt;module name=&quot;Checker&quot;&gt;
  &lt;module name=&quot;TreeWalker&quot;&gt;
    &lt;module name=&quot;SuppressWithNearbyCommentFilter&quot;&gt;
      &lt;property name=&quot;commentFormat&quot; value=&quot;CHECKSTYLE IGNORE THIS LINE&quot;/&gt;
      &lt;property name=&quot;checkFormat&quot; value=&quot;.*&quot;/&gt;
      &lt;property name=&quot;influenceFormat&quot; value=&quot;0&quot;/&gt;
    &lt;/module&gt;
  &lt;/module&gt;
&lt;/module&gt;
        </source>
        <p id="Example2-code">Example:</p>
        <source>
public static final int lowerCaseConstant; // CHECKSTYLE IGNORE THIS LINE
        </source>
        <p id="Example3-config">
          To configure a filter so that
          <code>// OK to catch (Throwable|Exception|RuntimeException) here</code>
          permits the current and previous line to avoid generating an IllegalCatch
          audit event:
        </p>
        <source>
&lt;module name=&quot;Checker&quot;&gt;
  &lt;module name=&quot;TreeWalker&quot;&gt;
    &lt;module name=&quot;SuppressWithNearbyCommentFilter&quot;&gt;
      &lt;property name=&quot;commentFormat&quot; value=&quot;OK to catch (\w+) here&quot;/&gt;
      &lt;property name=&quot;checkFormat&quot; value=&quot;IllegalCatchCheck&quot;/&gt;
      &lt;property name=&quot;messageFormat&quot; value=&quot;$1&quot;/&gt;
      &lt;property name=&quot;influenceFormat&quot; value=&quot;-1&quot;/&gt;
    &lt;/module&gt;
  &lt;/module&gt;
&lt;/module&gt;
        </source>
        <p id="Example3-code">Example:</p>
        <source>
. . .
catch (RuntimeException re) {
// OK to catch RuntimeException here
}
catch (Throwable th) { ... }
. . .
        </source>
        <p id="Example4-config">
          To configure a filter so that
          <code>CHECKSTYLE IGNORE <i>check</i> FOR NEXT<i>var</i> LINES</code>
          avoids triggering any audits for the given check for
          the current line and the next <i>var</i> lines (for a total of <i>var</i>+1 lines):
        </p>
        <source>
&lt;module name=&quot;Checker&quot;&gt;
  &lt;module name=&quot;TreeWalker&quot;&gt;
    &lt;module name=&quot;SuppressWithNearbyCommentFilter&quot;&gt;
      &lt;property name=&quot;commentFormat&quot;
          value=&quot;CHECKSTYLE IGNORE (\w+) FOR NEXT (\d+) LINES&quot;/&gt;
      &lt;property name=&quot;checkFormat&quot; value=&quot;$1&quot;/&gt;
      &lt;property name=&quot;influenceFormat&quot; value=&quot;$2&quot;/&gt;
    &lt;/module&gt;
  &lt;/module&gt;
&lt;/module&gt;
        </source>
        <p id="Example4-code">Example:</p>
        <source>
static final int lowerCaseConstant; // CHECKSTYLE IGNORE ConstantNameCheck FOR NEXT 3 LINES
static final int lowerCaseConstant1;
static final int lowerCaseConstant2;
static final int lowerCaseConstant3;
static final int lowerCaseConstant4; // will warn here
        </source>
        <p id="Example5-config">
          To configure a filter to avoid any audits on code like:
        </p>
        <source>
&lt;module name=&quot;Checker&quot;&gt;
  &lt;module name=&quot;TreeWalker&quot;&gt;
    &lt;module name=&quot;SuppressWithNearbyCommentFilter&quot;&gt;
      &lt;property name=&quot;commentFormat&quot;
        value=&quot;ALLOW (\\w+) ON PREVIOUS LINE&quot;/&gt;
      &lt;property name=&quot;checkFormat&quot; value=&quot;$1&quot;/&gt;
      &lt;property name=&quot;influenceFormat&quot; value=&quot;-1&quot;/&gt;
    &lt;/module&gt;
  &lt;/module&gt;
&lt;/module&gt;
        </source>
        <p id="Example5-code">Example:</p>
        <source>
private int D2;
// ALLOW MemberName ON PREVIOUS LINE
. . .
        </source>

        <p id="Example6-config">
          To configure a filter to allow suppress one or more Checks
          (separated by &quot;|&quot;) and demand comment no less than 14 symbols:
        </p>
        <source>
&lt;module name=&quot;Checker&quot;&gt;
  &lt;module name=&quot;TreeWalker&quot;&gt;
    &lt;module name=&quot;SuppressWithNearbyCommentFilter&quot;&gt;
      &lt;property name=&quot;commentFormat&quot;
        value=&quot;@cs\.suppress \[(\w+(\|\w+)*)\] \w[-\.'`,:;\w ]{14,}&quot;/&gt;
      &lt;property name=&quot;checkFormat&quot; value=&quot;$1&quot;/&gt;
      &lt;property name=&quot;influenceFormat&quot; value=&quot;1&quot;/&gt;
    &lt;/module&gt;
  &lt;/module&gt;
&lt;/module&gt;
        </source>
        <p id="Example6-code">Example:</p>
        <source>
public static final int [] array; // @cs.suppress [ConstantName|NoWhitespaceAfter] A comment here
        </source>
        <p>
          It is possible to specify an ID of checks, so that it can be leveraged by the
          SuppressWithNearbyCommentFilter to skip validations. The following examples
          show how to skip validations near code that has comment like
          <code>// @cs-: &lt;ID/&gt; (reason)</code>, where ID is the ID of checks you want to
          suppress.
        </p>
        <p id="Example7-config">
          Example of Checkstyle checks and
          SuppressWithNearbyCommentFilter configuration (idFormat which
          is set to '$1' points that ID of the checks is in the first group of
          commentFormat regular expressions):
        </p>
        <source>
&lt;module name=&quot;Checker&quot;&gt;
  &lt;module name=&quot;TreeWalker&quot;&gt;
    &lt;module name=&quot;SuppressWithNearbyCommentFilter&quot;&gt;
      &lt;property name=&quot;commentFormat&quot;
        value=&quot;@cs\.suppress \[(\w+(\|\w+)*)\] \w[-\.'`,:;\w ]{14,}&quot;/&gt;
      &lt;property name=&quot;checkFormat&quot; value=&quot;$1&quot;/&gt;
      &lt;property name=&quot;influenceFormat&quot; value=&quot;1&quot;/&gt;
    &lt;/module&gt;
    &lt;module name=&quot;RegexpSinglelineJava&quot;&gt;
      &lt;property name=&quot;id&quot; value=&quot;ignore&quot;/&gt;
      &lt;property name=&quot;format&quot; value=&quot;^.*@Ignore\s*$&quot;/&gt;
      &lt;property name=&quot;message&quot; value=&quot;@Ignore should have a reason.&quot;/&gt;
    &lt;/module&gt;

    &lt;module name=&quot;RegexpSinglelineJava&quot;&gt;
      &lt;property name=&quot;id&quot; value=&quot;systemout&quot;/&gt;
      &lt;property name=&quot;format&quot; value=&quot;^.*System\.(out|err).*$&quot;/&gt;
      &lt;property name=&quot;message&quot; value=&quot;Don't use System.out/err, use SLF4J instead.&quot;/&gt;
    &lt;/module&gt;
  &lt;/module&gt;
&lt;/module&gt;
        </source>
        <p id="Example7-code">Example:</p>
        <source>
@Ignore // @cs-: ignore (test has not been implemented yet)
@Test
public void testMethod() { }

public static void foo() {
  System.out.println(&quot;Debug info.&quot;); // @cs-: systemout (should not fail RegexpSinglelineJava)
}
        </source>
        <p id="Example8-config">
          Example of how to configure the check to suppress more than one checks.
          The influence format is specified in the second regexp group.
        </p>
        <source>
&lt;module name=&quot;Checker&quot;&gt;
  &lt;module name=&quot;TreeWalker&quot;&gt;
    &lt;module name=&quot;SuppressWithNearbyCommentFilter&quot;&gt;
      &lt;property name=&quot;commentFormat&quot; value=&quot;@cs-\: ([\w\|]+) influence (\d+)&quot;/&gt;
      &lt;property name=&quot;checkFormat&quot; value=&quot;$1&quot;/&gt;
      &lt;property name=&quot;influenceFormat&quot; value=&quot;$2&quot;/&gt;
    &lt;/module&gt;
  &lt;/module&gt;
&lt;/module&gt;
        </source>
        <p id="Example8-code">Example:</p>
        <source>
// @cs-: ClassDataAbstractionCoupling influence 2
// @cs-: MagicNumber influence 4
@Service // no violations from ClassDataAbstractionCoupling here
@Transactional
public class UserService {
  private int value = 10022; // no violations from MagicNumber here
}
        </source>
      </subsection>
      <subsection name="Example of Usage" id="Example_of_Usage">
        <ul>
          <li>
            <a href="https://github.com/search?q=path%3Aconfig%20path%3A**%2Fcheckstyle-checks.xml+repo%3Acheckstyle%2Fcheckstyle+SuppressWithNearbyCommentFilter">
            Checkstyle Style</a>
          </li>
          <li>
            <a href="https://github.com/search?q=path%3Asrc%2Fmain%2Fresources%20path%3A**%2Fgoogle_checks.xml+repo%3Acheckstyle%2Fcheckstyle+SuppressWithNearbyCommentFilter">
            Google Style</a>
          </li>
        </ul>
      </subsection>
      <subsection name="Package" id="Package">
        <p> com.puppycrawl.tools.checkstyle.filters </p>
      </subsection>

      <subsection name="Parent Module" id="Parent_Module">
        <p>
          <a href="../config.html#TreeWalker">TreeWalker</a>
        </p>
      </subsection>
    </section>
  </body>
</document>
