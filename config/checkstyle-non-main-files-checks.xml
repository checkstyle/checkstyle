<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
          "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
          "https://checkstyle.org/dtds/configuration_1_3.dtd">

<module name="Checker">
  <property name="charset" value="UTF-8"/>

  <property name="cacheFile" value="target/cache_non_main_files"/>

  <!-- Suppressions for resources -->
  <module name="SuppressionFilter">
    <property name="file"
             value="${checkstyle.non-main-files-suppressions.file}"/>
  </module>
  <!-- Miscellaneous -->
  <module name="NewlineAtEndOfFile" />

  <module name="RegexpOnFilename">
    <property name="id" value="executablesLocation"/>
    <property name="folderPattern" value="[\\/].ci([\\/]|$)"/>
    <property name="fileNamePattern" value="\.(bat|cmd|groovy|sh|md)$"/>
    <property name="match" value="false"/>
    <message key="regexp.filename.mismatch"
      value="CI folder should only contain executables files"/>
  </module>
  <module name="RegexpOnFilename">
    <property name="id" value="kebabCaseFileNamingInGithubWorkflowsFolder"/>
    <property name="folderPattern" value="[\\/].github[\\/]workflows([\\/]|$)"/>
    <property name="fileNamePattern" value="^[a-z][a-z0-9]*(\-[a-z0-9]+)*\.[a-z]+$"/>
    <property name="match" value="false"/>
    <property name="fileExtensions" value="sh, groovy, cmd, bat, yml"/>
    <message key="regexp.filename.mismatch"
             value="Filename should be in kebab-case."/>
  </module>
  <module name="RegexpOnFilename">
    <property name="id" value="kebabCaseFileNamingInCiFolder"/>
    <property name="folderPattern" value="[\\/].ci([\\/]|$)"/>
    <property name="fileNamePattern" value="^[a-z][a-z0-9]*(\-[a-z0-9]+)*\.[a-z]+$"/>
    <property name="match" value="false"/>
    <property name="fileExtensions" value="sh, cmd, bat, groovy"/>
    <message key="regexp.filename.mismatch"
             value="Filename should be in kebab-case."/>
  </module>
  <module name="RegexpOnFilename">
    <property name="id" value="kebabCaseFileNamingInConfigFolder"/>
    <property name="folderPattern" value="[\\/]config([\\/]|$)"/>
    <property name="fileNamePattern" value="^[a-z][a-z0-9]*(\-[a-z0-9\.]+)*\.[a-z]+$"/>
    <property name="match" value="false"/>
    <property name="fileExtensions"
              value="xml, xsd, config, words, files, properties, header, pl, yaml, txt, rb"/>
    <message key="regexp.filename.mismatch"
             value="Filename should be in kebab-case."/>
  </module>

  <module name="RegexpSingleline">
    <property name="id" value="lineLength"/>
    <!-- catch lines above 100 symbols -->
    <property name="format"
             value="^(?!(.*value=.*Example\d+|.*href=|.*http(s)?:|import |(.* )?package |.* files=|.*\.dtd| \* \{@code| \* com\.)).{101,}$"/>
    <property name="message" value="Line should not be longer than 100 symbols"/>
  </module>

  <module name="RegexpSingleline">
    <property name="id" value="properMavenCommand"/>
    <property name="format" value="^[^#]*mvn (?!(-e --no-transfer-progress|--version))"/>
    <property name="fileExtensions" value="sh, yml"/>
    <property name="message"
      value="mvn command should be '--version' or start with '-e --no-transfer-progress' options"/>
  </module>

  <module name="RegexpSingleline">
    <property name="id" value="properCurlCommand"/>
    <property name="format" value="^[^#]*curl (?!--fail-with-body)"/>
    <property name="fileExtensions" value="sh, yml"/>
    <property name="message" value="curl command should start with '--fail-with-body' option"/>
  </module>

  <!-- check the number of testCases -->
  <module name="RegexpSingleline">
    <property name="id" value="numberOfTestCasesInXpath"/>
    <property name="format" value="@Test"/>
    <property name="minimum" value="2"/>
    <property name="maximum" value="9999"/>
    <property name="fileExtensions" value="java"/>
    <property name="message"
             value="Two or more test cases are required for unit testing in Xpath "/>
  </module>

  <!-- To restrict empty files -->
  <module name="RegexpMultiline">
    <property name="id" value="noEmptyFile"/>
    <property name="format" value="^\s*$" />
    <property name="matchAcrossLines" value="true" />
    <property name="message" value="Empty file is not allowed" />
  </module>

  <module name="RegexpSingleline">
    <property name="id" value="commentStartSpaceXml"/>
    <property name="format" value="&lt;!--[^ ]"/>
    <property name="fileExtensions" value="xml, properties"/>
    <property name="message" value="space is required after comment start"/>
  </module>
  <module name="RegexpSingleline">
    <property name="id" value="commentEndSpaceXml"/>
    <property name="format" value="[^ ]--&gt;"/>
    <property name="fileExtensions" value="xml, properties"/>
    <property name="message" value="space is required before comment end"/>
  </module>
  <module name="RegexpSingleline">
    <property name="id" value="commentStartSpaceYml"/>
    <property name="format" value="^ *#[^ #]"/>
    <property name="fileExtensions" value="yml, yaml"/>
    <property name="message" value="space is required after comment start"/>
  </module>
  <module name="RegexpSingleline">
    <property name="id" value="commentStartSpaceSh"/>
    <property name="format" value="^#[^ !#]"/>
    <property name="fileExtensions" value="sh"/>
    <property name="message" value="space is required after comment start"/>
  </module>

  <module name="RegexpMultiline">
    <property name="id" value="workflowJobStepSpacing"/>
    <property name="format" value="\n(?!\s{4}steps:|\s+#).+\n\s{6}\-\s.+:\s.*"/>
    <property name="fileExtensions" value="yml, yaml"/>
    <property name="message"
              value="Workflow job steps should have empty lines between each other"/>
  </module>
</module>
