<?xml version="1.0" encoding="UTF-8"?>
<suppressedMutations>
  <mutation unstable="false">
    <sourceFile>AbstractExpressionHandler.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.checks.indentation.AbstractExpressionHandler</mutatedClass>
    <mutatedMethod>findSubtreeAst</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator>
    <description>changed conditional boundary</description>
    <lineContent>if (colNum == null || thisLineColumn &lt; colNum) {</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>AbstractExpressionHandler.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.checks.indentation.AbstractExpressionHandler</mutatedClass>
    <mutatedMethod>getFirstAstNode</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator>
    <description>changed conditional boundary</description>
    <lineContent>&amp;&amp; curNode.getColumnNo() &lt; realStart.getColumnNo()) {</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>AbstractExpressionHandler.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.checks.indentation.AbstractExpressionHandler</mutatedClass>
    <mutatedMethod>getFirstToken</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator>
    <description>changed conditional boundary</description>
    <lineContent>if (toTest.getColumnNo() &lt; first.getColumnNo()) {</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>CommentsIndentationCheck.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck</mutatedClass>
    <mutatedMethod>findPreviousStatement</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator>
    <description>negated conditional</description>
    <lineContent>if (root.getFirstChild().getType() == TokenTypes.LITERAL_NEW) {</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>CommentsIndentationCheck.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck</mutatedClass>
    <mutatedMethod>findPreviousStatement</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator>
    <description>changed conditional boundary</description>
    <lineContent>if (root.getLineNo() &gt;= comment.getLineNo()) {</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>CommentsIndentationCheck.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck</mutatedClass>
    <mutatedMethod>findTokenWhichBeginsTheLine</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator>
    <description>negated conditional</description>
    <lineContent>if (isUsingOfObjectReferenceToInvokeMethod(root)) {</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>CommentsIndentationCheck.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck</mutatedClass>
    <mutatedMethod>getPrevStatementWhenCommentIsUnderCase</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator>
    <description>negated conditional</description>
    <lineContent>if (isUsingOfObjectReferenceToInvokeMethod(blockBody)) {</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>CommentsIndentationCheck.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck</mutatedClass>
    <mutatedMethod>isUsingOfObjectReferenceToInvokeMethod</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator>
    <description>negated conditional</description>
    <lineContent>&amp;&amp; root.getFirstChild().getFirstChild().getFirstChild().getNextSibling() != null;</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>CommentsIndentationCheck.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck</mutatedClass>
    <mutatedMethod>isUsingOfObjectReferenceToInvokeMethod</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator>
    <description>replaced boolean return with true for com/puppycrawl/tools/checkstyle/checks/indentation/CommentsIndentationCheck::isUsingOfObjectReferenceToInvokeMethod</description>
    <lineContent>return root.getFirstChild().getFirstChild().getFirstChild() != null</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>HandlerFactory.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory</mutatedClass>
    <mutatedMethod>&lt;init&gt;</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator>
    <description>removed call to com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory::register</description>
    <lineContent>register(TokenTypes.INDEX_OP, IndexHandler.class);</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>HandlerFactory.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.checks.indentation.HandlerFactory</mutatedClass>
    <mutatedMethod>clearCreatedHandlers</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator>
    <description>removed call to java/util/Map::clear</description>
    <lineContent>createdHandlers.clear();</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>IndentationCheck.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck</mutatedClass>
    <mutatedMethod>beginTree</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator>
    <description>removed call to com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory::clearCreatedHandlers</description>
    <lineContent>handlerFactory.clearCreatedHandlers();</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>IndentationCheck.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck</mutatedClass>
    <mutatedMethod>beginTree</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator>
    <description>removed call to java/util/Deque::clear</description>
    <lineContent>handlers.clear();</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>IndentationCheck.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck</mutatedClass>
    <mutatedMethod>beginTree</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator>
    <description>removed call to com/puppycrawl/tools/checkstyle/checks/indentation/PrimordialHandler::checkIndentation</description>
    <lineContent>primordialHandler.checkIndentation();</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>MethodDefHandler.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.checks.indentation.MethodDefHandler</mutatedClass>
    <mutatedMethod>getMethodDefLineStart</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator>
    <description>changed conditional boundary</description>
    <lineContent>if (node.getLineNo() &lt; lineStart) {</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>NewHandler.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.checks.indentation.NewHandler</mutatedClass>
    <mutatedMethod>shouldIncreaseIndent</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.returns.BooleanTrueReturnValsMutator</mutator>
    <description>replaced boolean return with true for com/puppycrawl/tools/checkstyle/checks/indentation/NewHandler::shouldIncreaseIndent</description>
    <lineContent>return false;</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>SwitchHandler.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.checks.indentation.SwitchHandler</mutatedClass>
    <mutatedMethod>checkIndentation</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator>
    <description>removed call to com/puppycrawl/tools/checkstyle/checks/indentation/SwitchHandler::checkSwitchExpr</description>
    <lineContent>checkSwitchExpr();</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>SwitchHandler.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.checks.indentation.SwitchHandler</mutatedClass>
    <mutatedMethod>checkSwitchExpr</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator>
    <description>removed call to com/puppycrawl/tools/checkstyle/checks/indentation/SwitchHandler::checkExpressionSubtree</description>
    <lineContent>checkExpressionSubtree(</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>SynchronizedHandler.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.checks.indentation.SynchronizedHandler</mutatedClass>
    <mutatedMethod>checkIndentation</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator>
    <description>removed call to com/puppycrawl/tools/checkstyle/checks/indentation/SynchronizedHandler::checkSynchronizedExpr</description>
    <lineContent>checkSynchronizedExpr();</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>SynchronizedHandler.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.checks.indentation.SynchronizedHandler</mutatedClass>
    <mutatedMethod>checkIndentation</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator>
    <description>removed call to com/puppycrawl/tools/checkstyle/checks/indentation/SynchronizedHandler::checkWrappingIndentation</description>
    <lineContent>checkWrappingIndentation(getMainAst(),</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>SynchronizedHandler.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.checks.indentation.SynchronizedHandler</mutatedClass>
    <mutatedMethod>checkSynchronizedExpr</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator>
    <description>removed call to com/puppycrawl/tools/checkstyle/checks/indentation/SynchronizedHandler::checkExpressionSubtree</description>
    <lineContent>checkExpressionSubtree(syncAst, expected, false, false);</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>TryHandler.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.checks.indentation.TryHandler</mutatedClass>
    <mutatedMethod>checkIndentation</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator>
    <description>removed call to com/puppycrawl/tools/checkstyle/checks/indentation/TryHandler::checkTryResParen</description>
    <lineContent>checkTryResParen(getTryResLparen(), &quot;lparen&quot;);</lineContent>
  </mutation>
</suppressedMutations>
