<?xml version="1.0" encoding="UTF-8"?>
<suppressedMutations>


















  <mutation unstable="false">
    <sourceFile>BlockCommentPosition.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.utils.BlockCommentPosition</mutatedClass>
    <mutatedMethod>isOnPlainClassMember</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator>
    <description>removed conditional - replaced equality check with true</description>
    <lineContent>&amp;&amp; parent.getParent().getType() == memberType</lineContent>
  </mutation>



















  <mutation unstable="false">
    <sourceFile>CheckUtil.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.utils.CheckUtil</mutatedClass>
    <mutatedMethod>getAccessModifierFromModifiersTokenDirectly</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator>
    <description>removed call to com/puppycrawl/tools/checkstyle/api/DetailAST::getNextSibling</description>
    <lineContent>token = token.getNextSibling()) {</lineContent>
  </mutation>




























  <mutation unstable="false">
    <sourceFile>CheckUtil.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.utils.CheckUtil</mutatedClass>
    <mutatedMethod>isGetterMethod</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator>
    <description>removed call to com/puppycrawl/tools/checkstyle/api/DetailAST::findFirstToken</description>
    <lineContent>final boolean noVoidReturnType = type.findFirstToken(TokenTypes.LITERAL_VOID) == null;</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>CheckUtil.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.utils.CheckUtil</mutatedClass>
    <mutatedMethod>isGetterMethod</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator>
    <description>removed conditional - replaced equality check with true</description>
    <lineContent>final boolean noVoidReturnType = type.findFirstToken(TokenTypes.LITERAL_VOID) == null;</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>CheckUtil.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.utils.CheckUtil</mutatedClass>
    <mutatedMethod>isGetterMethod</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator>
    <description>removed conditional - replaced equality check with true</description>
    <lineContent>if (matchesGetterFormat &amp;&amp; noVoidReturnType &amp;&amp; noParams) {</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>CheckUtil.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.utils.CheckUtil</mutatedClass>
    <mutatedMethod>isGetterMethod</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator>
    <description>removed conditional - replaced equality check with true</description>
    <lineContent>if (slist != null &amp;&amp; slist.getChildCount() == GETTER_BODY_SIZE) {</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>CheckUtil.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.utils.CheckUtil</mutatedClass>
    <mutatedMethod>isReceiverParameter</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator>
    <description>removed conditional - replaced equality check with true</description>
    <lineContent>return parameterDefAst.getType() == TokenTypes.PARAMETER_DEF</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>CheckUtil.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.utils.CheckUtil</mutatedClass>
    <mutatedMethod>isSetterMethod</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator>
    <description>removed conditional - replaced equality check with true</description>
    <lineContent>&amp;&amp; ast.getChildCount() == SETTER_GETTER_MAX_CHILDREN) {</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>CheckUtil.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.utils.CheckUtil</mutatedClass>
    <mutatedMethod>isSetterMethod</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator>
    <description>removed conditional - replaced equality check with true</description>
    <lineContent>final boolean voidReturnType = type.findFirstToken(TokenTypes.LITERAL_VOID) != null;</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>CheckUtil.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.utils.CheckUtil</mutatedClass>
    <mutatedMethod>isSetterMethod</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator>
    <description>replaced call to com/puppycrawl/tools/checkstyle/api/DetailAST::findFirstToken with receiver</description>
    <lineContent>final boolean voidReturnType = type.findFirstToken(TokenTypes.LITERAL_VOID) != null;</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>CheckUtil.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.utils.CheckUtil</mutatedClass>
    <mutatedMethod>isSetterMethod</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator>
    <description>removed conditional - replaced equality check with true</description>
    <lineContent>if (matchesSetterFormat &amp;&amp; voidReturnType &amp;&amp; singleParam) {</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>CheckUtil.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.utils.CheckUtil</mutatedClass>
    <mutatedMethod>parseDouble</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator>
    <description>replaced call to java/lang/String::substring with receiver</description>
    <lineContent>txt = txt.substring(1);</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>CodePointUtil.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.utils.CodePointUtil</mutatedClass>
    <mutatedMethod>stripLeading</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator>
    <description>removed call to com/puppycrawl/tools/checkstyle/utils/CommonUtil::isCodePointWhitespace</description>
    <lineContent>&amp;&amp; CommonUtil.isCodePointWhitespace(codePoints, startIndex)) {</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>CodePointUtil.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.utils.CodePointUtil</mutatedClass>
    <mutatedMethod>stripLeading</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator>
    <description>removed conditional - replaced equality check with false</description>
    <lineContent>&amp;&amp; CommonUtil.isCodePointWhitespace(codePoints, startIndex)) {</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>CodePointUtil.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.utils.CodePointUtil</mutatedClass>
    <mutatedMethod>stripLeading</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator>
    <description>replaced call to java/util/Arrays::copyOfRange with argument</description>
    <lineContent>return Arrays.copyOfRange(codePoints, startIndex, codePoints.length);</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>CodePointUtil.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.utils.CodePointUtil</mutatedClass>
    <mutatedMethod>stripLeading</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator>
    <description>removed conditional - replaced comparison check with false</description>
    <lineContent>while (startIndex &lt; codePoints.length</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>CodePointUtil.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.utils.CodePointUtil</mutatedClass>
    <mutatedMethod>trim</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator>
    <description>replaced call to com/puppycrawl/tools/checkstyle/utils/CodePointUtil::stripTrailing with argument</description>
    <lineContent>final int[] strippedCodePoints = stripTrailing(codePoints);</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>CodePointUtil.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.utils.CodePointUtil</mutatedClass>
    <mutatedMethod>trim</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.ArgumentPropagationMutator</mutator>
    <description>replaced call to com/puppycrawl/tools/checkstyle/utils/CodePointUtil::stripLeading with argument</description>
    <lineContent>return stripLeading(strippedCodePoints);</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>CommonUtil.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.utils.CommonUtil</mutatedClass>
    <mutatedMethod>baseClassName</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator>
    <description>removed conditional - replaced equality check with false</description>
    <lineContent>if (index == -1) {</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>CommonUtil.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.utils.CommonUtil</mutatedClass>
    <mutatedMethod>isName</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator>
    <description>removed call to java/lang/String::isEmpty</description>
    <lineContent>boolean isName = !str.isEmpty();</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>CommonUtil.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.utils.CommonUtil</mutatedClass>
    <mutatedMethod>isName</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator>
    <description>removed conditional - replaced equality check with true</description>
    <lineContent>boolean isName = !str.isEmpty();</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>CommonUtil.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.utils.CommonUtil</mutatedClass>
    <mutatedMethod>matchesFileExtension</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator>
    <description>removed conditional - replaced equality check with true</description>
    <lineContent>if (startsWithChar(extension, &apos;.&apos;)) {</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>CommonUtil.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.utils.CommonUtil</mutatedClass>
    <mutatedMethod>relativizeAndNormalizePath</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator>
    <description>replaced call to java/nio/file/Path::normalize with receiver</description>
    <lineContent>final Path pathAbsolute = Paths.get(path).normalize();</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>CommonUtil.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.utils.CommonUtil</mutatedClass>
    <mutatedMethod>relativizeAndNormalizePath</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator>
    <description>replaced call to java/nio/file/Path::normalize with receiver</description>
    <lineContent>final Path pathBase = Paths.get(baseDirectory).normalize();</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>ModuleReflectionUtil.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.utils.ModuleReflectionUtil</mutatedClass>
    <mutatedMethod>getCheckstyleModules</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator>
    <description>replaced call to java/util/stream/Stream::filter with receiver</description>
    <lineContent>.filter(ModuleReflectionUtil::isCheckstyleModule)</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>ScopeUtil.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.utils.ScopeUtil</mutatedClass>
    <mutatedMethod>getDeclaredScopeFromMods</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator>
    <description>removed conditional - replaced equality check with true</description>
    <lineContent>for (DetailAST token = aMods.getFirstChild(); token != null &amp;&amp; result == null;</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>ScopeUtil.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.utils.ScopeUtil</mutatedClass>
    <mutatedMethod>getSurroundingScope</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator>
    <description>replaced call to com/puppycrawl/tools/checkstyle/api/DetailAST::getParent with receiver</description>
    <lineContent>for (DetailAST token = node.getParent();</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>ScopeUtil.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.utils.ScopeUtil</mutatedClass>
    <mutatedMethod>isInBlockOf</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator>
    <description>removed conditional - replaced equality check with true</description>
    <lineContent>token != null &amp;&amp; !returnValue;</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>ScopeUtil.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.utils.ScopeUtil</mutatedClass>
    <mutatedMethod>isInEnumBlock</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator>
    <description>removed conditional - replaced equality check with true</description>
    <lineContent>token != null &amp;&amp; !returnValue;</lineContent>
  </mutation>










  <mutation unstable="false">
    <sourceFile>ScopeUtil.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.utils.ScopeUtil</mutatedClass>
    <mutatedMethod>lambda$getScopeFromMods$1</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator>
    <description>replaced call to com/puppycrawl/tools/checkstyle/api/DetailAST::getParent with receiver</description>
    <lineContent>.orElseGet(() -&gt; getDefaultScope(aMods.getParent()));</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>TokenUtil.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.utils.TokenUtil</mutatedClass>
    <mutatedMethod>lambda$nameToValueMapFromPublicIntFields$1</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator>
    <description>removed call to java/lang/reflect/Field::getName</description>
    <lineContent>Field::getName, fld -&gt; getIntFromField(fld, fld.getName()))</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>XpathUtil.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.utils.XpathUtil</mutatedClass>
    <mutatedMethod>getXpathItems</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator>
    <description>replaced call to java/util/stream/Stream::map with receiver</description>
    <lineContent>.map(NodeInfo.class::cast)</lineContent>
  </mutation>
</suppressedMutations>
