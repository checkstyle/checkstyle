<?xml version="1.0" encoding="UTF-8"?>
<suppressedMutations>
  <mutation unstable="false">
    <sourceFile>UnnecessaryParenthesesCheck.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck</mutatedClass>
    <mutatedMethod>visitToken</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator>
    <description>removed conditional - replaced equality check with true</description>
    <lineContent>if (type == TokenTypes.LAMBDA &amp;&amp; isLambdaSingleParameterSurrounded(ast)) {</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>VariableDeclarationUsageDistanceCheck.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.checks.coding.VariableDeclarationUsageDistanceCheck</mutatedClass>
    <mutatedMethod>calculateDistanceInSingleScope</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator>
    <description>removed conditional - replaced equality check with true</description>
    <lineContent>&amp;&amp; currentAst.getType() != TokenTypes.RCURLY) {</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>VariableDeclarationUsageDistanceCheck.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.checks.coding.VariableDeclarationUsageDistanceCheck</mutatedClass>
    <mutatedMethod>calculateDistanceInSingleScope</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator>
    <description>removed conditional - replaced equality check with false</description>
    <lineContent>if (!firstUsageFound) {</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>VariableDeclarationUsageDistanceCheck.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.checks.coding.VariableDeclarationUsageDistanceCheck</mutatedClass>
    <mutatedMethod>getFirstNodeInsideForWhileDoWhileBlocks</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator>
    <description>removed conditional - replaced equality check with false</description>
    <lineContent>if (currentNodeType == TokenTypes.SLIST) {</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>VariableDeclarationUsageDistanceCheck.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.checks.coding.VariableDeclarationUsageDistanceCheck</mutatedClass>
    <mutatedMethod>getFirstNodeInsideIfBlock</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator>
    <description>removed conditional - replaced equality check with false</description>
    <lineContent>else if (isChild(currentNode, variable)) {</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>VariableDeclarationUsageDistanceCheck.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.checks.coding.VariableDeclarationUsageDistanceCheck</mutatedClass>
    <mutatedMethod>getFirstNodeInsideIfBlock</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator>
    <description>removed conditional - replaced equality check with false</description>
    <lineContent>if (currentNode.getType() == TokenTypes.LITERAL_IF) {</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>VariableDeclarationUsageDistanceCheck.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.checks.coding.VariableDeclarationUsageDistanceCheck</mutatedClass>
    <mutatedMethod>isInitializationSequence</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator>
    <description>removed conditional - replaced equality check with true</description>
    <lineContent>while (result</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>VariableDeclarationUsageDistanceCheck.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.checks.coding.VariableDeclarationUsageDistanceCheck</mutatedClass>
    <mutatedMethod>isVariableInOperatorExpr</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator>
    <description>removed conditional - replaced equality check with true</description>
    <lineContent>if (!isVarInOperatorDeclaration &amp;&amp; operator.getType() == TokenTypes.LITERAL_IF) {</lineContent>
  </mutation>

  <mutation unstable="false">
    <sourceFile>VariableDeclarationUsageDistanceCheck.java</sourceFile>
    <mutatedClass>com.puppycrawl.tools.checkstyle.checks.coding.VariableDeclarationUsageDistanceCheck</mutatedClass>
    <mutatedMethod>searchVariableUsageExpressions</mutatedMethod>
    <mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator>
    <description>removed conditional - replaced equality check with true</description>
    <lineContent>&amp;&amp; currentStatementAst.getType() != TokenTypes.RCURLY) {</lineContent>
  </mutation>
</suppressedMutations>
