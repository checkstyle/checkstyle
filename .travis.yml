language: java
sudo: false

cache:
  directories:
    - ~/.m2

addons:
  apt:
    packages:
      - xsltproc
      - xmlstarlet

branches:
  only:
    - master

install:
  - ""

matrix:
  fast_finish: true
  include:
    # testing age of pr
    - env:
        - DESC="test Commits Since Latest Master"
        - CMD="./.ci/travis/travis.sh pr-age"
        - SKIP_JOB_BY_FILES="false"

    # testing of PR format
    - env:
        - DESC="test Issue ref in PR description"
        - CMD="./.ci/travis/travis.sh pr-description"
        - SKIP_JOB_BY_FILES="false"

    # unit tests (openjdk8)
    - jdk: openjdk8
      env:
        - DESC="tests and deploy"
        - CMD="mvn -e clean integration-test failsafe:verify -DargLine='-Xms1024m -Xmx2048m'"
        - DEPLOY="true"
        - USE_MAVEN_REPO="true"

    # checkstyle (openjdk8)
    - jdk: openjdk8
      env:
        - DESC="checkstyle and sevntu-checkstyle"
        - CMD="./.ci/travis/travis.sh checkstyle-and-sevntu"
        - SKIP_JOB_BY_FILES="false"
        - USE_MAVEN_REPO="true"

    # jacoco and codecov (openjdk8)
    - jdk: openjdk8
      env:
        - DESC="jacoco and codecov"
        - CMD="./.ci/travis/travis.sh jacoco"
        - CMD_AFTER_SUCCESS="bash <(curl -s https://codecov.io/bash)"
        - USE_MAVEN_REPO="true"

    # spotbugs and pmd (openjdk8)
    - jdk: openjdk8
      env:
        - DESC="spotbugs,pmd"
        - CMD="export MAVEN_OPTS='-Xmx2000m' && mvn -e clean compile pmd:check spotbugs:check"
        - USE_MAVEN_REPO="true"

    # spotbugs and pmd (openjdk11)
    - jdk: openjdk11
      env:
        - DESC="spotbugs,pmd"
        - CMD="export MAVEN_OPTS='-Xmx2000m' && mvn -e clean compile pmd:check spotbugs:check"
        - USE_MAVEN_REPO="true"

    # spotbugs and pmd (openjdk12)
    - jdk: openjdk12
      env:
        - DESC="spotbugs,pmd"
        - CMD="export MAVEN_OPTS='-Xmx2000m' && mvn -e clean compile pmd:check spotbugs:check"
        - USE_MAVEN_REPO="true"

    # eclipse static analysis
    - jdk: openjdk8
      env:
        - DESC="eclipse static analysis"
        - CMD="mvn -e clean compile exec:exec -Peclipse-compiler"
        - USE_MAVEN_REPO="true"

    # Releasenotes generation - validation
    - jdk: openjdk8
      env:
        - DESC="Releasenotes generation"
        - CMD="./.ci/travis/travis.sh releasenotes-gen"
        - SKIP_JOB_BY_FILES="false"
        - USE_MAVEN_REPO="true"

    # NonDex (openjdk8)
    - jdk: openjdk8
      env:
        - DESC="NonDex"
        - CMD="./.ci/travis/travis.sh nondex"
        - USE_MAVEN_REPO="true"

    # site
    - jdk: openjdk8
      env:
        - DESC="site without validations"
        - CMD="./.ci/travis/travis.sh site"
        - USE_MAVEN_REPO="true"

    # unit tests in German locale (openjdk8)
    - jdk: openjdk8
      env:
        - DESC="tests de"
        - CMD="./.ci/travis/travis.sh test-de"
        - USE_MAVEN_REPO="true"
    # unit tests in Spanish locale (openjdk8)
    - jdk: openjdk8
      env:
        - DESC="tests es"
        - CMD="./.ci/travis/travis.sh test-es"
        - USE_MAVEN_REPO="true"
    # unit tests in Finnish locale (openjdk8)
    - jdk: openjdk8
      env:
        - DESC="tests fi"
        - CMD="./.ci/travis/travis.sh test-fi"
        - USE_MAVEN_REPO="true"
    # unit tests in French locale (openjdk8)
    - jdk: openjdk8
      env:
        - DESC="tests fr"
        - CMD="./.ci/travis/travis.sh test-fr"
        - USE_MAVEN_REPO="true"
    # unit tests in Chinese locale (openjdk8)
    - jdk: openjdk8
      env:
        - DESC="tests zh"
        - CMD="./.ci/travis/travis.sh test-zh"
        - USE_MAVEN_REPO="true"
    # unit tests in Japanese locale (openjdk8)
    - jdk: openjdk8
      env:
        - DESC="tests ja"
        - CMD="./.ci/travis/travis.sh test-ja"
        - USE_MAVEN_REPO="true"
    # unit tests in Portuguese locale (openjdk8)
    - jdk: openjdk8
      env:
        - DESC="tests pt"
        - CMD="./.ci/travis/travis.sh test-pt"
        - USE_MAVEN_REPO="true"
    # unit tests in Turkish locale (openjdk8)
    - jdk: openjdk8
      env:
        - DESC="tests tr"
        - CMD="./.ci/travis/travis.sh test-tr"
        - USE_MAVEN_REPO="true"

    # assembly (openjdk8)
    - jdk: openjdk8
      env:
        - DESC="assembly & run '-all' jar"
        - CMD="./.ci/travis/travis.sh assembly-run-all-jar"
        - USE_MAVEN_REPO="true"

    # NoExceptiontest - Guava with google_checks (openjdk8)
    - jdk: openjdk8
      env:
        - DESC="NoExceptionTest - Guava with google_checks"
        - CMD="./.ci/travis/travis.sh no-exception-test-guava-with-google-checks"
        - USE_MAVEN_REPO="true"

    # NoExceptiontest - Guava with sun_checks (openjdk8)
    - jdk: openjdk8
      env:
        - DESC="NoExceptionTest - Guava with sun_checks"
        - CMD="./.ci/travis/travis.sh no-exception-test-guava-with-sun-checks"
        - USE_MAVEN_REPO="true"

    # release dry run (openjdk8)
    - jdk: openjdk8
      env:
        - DESC="release dry run"
        - CMD="./.ci/travis/travis.sh release-dry-run"
        - USE_MAVEN_REPO="true"

    # Check the chmod on files.
    - env:
        - DESC="check permissions on all files"
        - CMD="./.ci/travis/travis.sh check-chmod"
        - SKIP_JOB_BY_FILES="false"

    # Ensure that all Sevntu check are kused
    - jdk: openjdk8
      env:
        - DESC="All sevntu checks should be used"
        - CMD="./.ci/travis/travis.sh all-sevntu-checks"

    # MacOS JDK8 verify (till cache is not working, we can not do verify)
    - os: osx
      osx_image: xcode9.3
      env:
        - DESC="MacOS JDK8 verify, site, assembly
        - CMD1="./.ci/travis/travis.sh osx-package"
        - CMD2="./.ci/travis/travis.sh osx-assembly"
        - CMD="$CMD1 && $CMD2"

    # MacOS JDK11 verify (till cache is not working, we can not do verify)
    - os: osx
      osx_image: xcode10.1
      env:
        - DESC="MacOS JDK11 verify, site, assembly
        - CMD1="./.ci/travis/travis.sh osx-package"
        - CMD2="./.ci/travis/travis.sh osx-assembly"
        - CMD="$CMD1 && $CMD2"

    # MacOS JDK12 verify (till cache is not working, we can not do verify)
    - os: osx
      osx_image: xcode10.2
      env:
        - DESC="MacOS JDK12 verify, site, assembly
        - CMD1="./.ci/travis/travis.sh osx-jdk12-package"
        - CMD2="./.ci/travis/travis.sh osx-jdk12-assembly"
        - CMD="$CMD1 && $CMD2"

    # https://sonarcloud.io (openjdk8)
    - jdk: openjdk8
      env:
        - DESC="sonarcloud.io"
        - USE_MAVEN_REPO="true"
        - CMD="./.ci/travis/travis.sh sonarqube"

    # No error testing - simple-binary-encoding
    - jdk: openjdk8
      env:
        - DESC="no error test on simple-binary-encoding"
        - USE_MAVEN_REPO="true"
        - CMD="./.ci/travis/travis.sh no-error-test-sbe"

    # versions to update
    - jdk: openjdk8
      env:
        - DESC="print versions to update"
        - USE_MAVEN_REPO="true"
        - CMD="./.ci/travis/travis.sh versions"
        - SKIP_JOB_BY_FILES="false"

    # OpenJDK9 build
    - jdk: openjdk9
      env:
        - DESC="build with OpenJDK9"
        - USE_MAVEN_REPO="true"
        - CMD="mvn -e package -Passembly && mvn -e site -Dlinkcheck.skip=true"

    # OpenJDK10 build
    - jdk: openjdk10
      env:
        - DESC="build with OpenJDK10"
        - USE_MAVEN_REPO="true"
        - CMD="mvn -e package -Passembly && mvn -e site -Dlinkcheck.skip=true"

    # OpenJDK11 build
    - jdk: openjdk11
      env:
        - DESC="build with OpenJDK11"
        - USE_MAVEN_REPO="true"
        - CMD="mvn -e package -Passembly && mvn -e site -Dlinkcheck.skip=true"

    # OpenJDK12 build
    - jdk: openjdk12
      env:
        - DESC="build with OpenJDK12"
        - USE_MAVEN_REPO="true"
        - CMD="./.ci/travis/travis.sh jdk12"

    # OpenJDK9 compile input files with jdk9 specific syntax
    - jdk: openjdk9
      env:
        - DESC="compile input files with jdk9 specific syntax"
        - CMD="./.ci/travis/travis.sh javac9"

    # compile input files compilation that are not compiled by eclipse
    - jdk: openjdk8
      env:
        - DESC="compile input files that are not compiled by eclipse"
        - CMD="./.ci/travis/travis.sh javac8"

    # new questionably spelled words
    - env:
        - DESC="spell checker"
        - CMD="./.ci/test-spelling-unknown-words.sh"
        - SKIP_JOB_BY_FILES="false"

    # find missing pitests
    - env:
        - DESC="find missing pitests"
        - CMD="./.ci/travis/travis.sh check-missing-pitests"

    # Ensure that all modules are used in no exception configs
    - env:
        - DESC="ensure that all modules are used in no exception configs"
        - CMD="./.ci/travis/travis.sh verify-no-exception-configs"

    - env:
        - DESC="ensure that no files are in changed state after clone"
        - CMD="./.ci/travis/travis.sh git-status"

script:
  - SKIP_FILES1=".github|codeship-*|buddy.yml|appveyor.yml|circleci"
  - SKIP_FILES2="|fast-forward-merge.sh|LICENSE|LICENSE.apache20|README.md|release.sh|RIGHTS.antlr"
  - SKIP_FILES3="|shippable.yml|shippable.sh|wercker.yml|wercker.sh|intellij-idea-inspections.xml"
  - SKIP_FILES4="|Jenkinsfile"
  - SKIP_FILES=$SKIP_FILES1$SKIP_FILES2$SKIP_FILES3$SKIP_FILES4
  - source ./.ci/common.sh
  - |
    if [ -z ${SKIP_JOB_BY_FILES+x} ]; then
        SKIP_JOB_BY_FILES="recheck";
    fi
  - should_run_job $SKIP_JOB_BY_FILES $SKIP_FILES
  - |
    set -e
    if [[ $RUN_JOB == 1 ]]; then
         if [[ $USE_MAVEN_REPO == 'true' && ! -d "~/.m2" ]]; then
           echo "Maven local repo cache is not found, initializing it ..."
           mvn -B install -Pno-validations;
         fi
         echo "eval of CMD is starting";
         echo "CMD=$CMD";
         eval $CMD;
         echo "eval of CMD is completed";
    else
         echo "CI is skipped";
    fi

after_success:
  - |
    set -e
    if [[ -n $CMD_AFTER_SUCCESS
          && $RUN_JOB == 1
       ]];
    then
        echo "CMD_AFTER_SUCCESS is starting";
        eval $CMD_AFTER_SUCCESS;
        echo "CMD_AFTER_SUCCESS is finished";
    fi
  - |
    set -e
    SKIP_DEPLOY=false
    if [ $(git log -1 | grep -E "\[maven-release-plugin\] prepare release" | cat | wc -l) -lt 1 ];
      then
        SKIP_DEPLOY=false;
      else
        SKIP_DEPLOY=true;
    fi;
    if [[ $TRAVIS_REPO_SLUG == 'checkstyle/checkstyle'
            && $TRAVIS_BRANCH == 'master'
            && $TRAVIS_PULL_REQUEST == 'false'
            && $DEPLOY == 'true'
            && $RUN_JOB == 1
            && $SKIP_DEPLOY == 'false'
       ]];
    then
        mvn -e -s config/deploy-settings.xml -Pno-validations deploy;
        echo "deploy to maven snapshot repository is finished";
    fi
