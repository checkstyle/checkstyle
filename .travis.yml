language: java
sudo: false

cache:
  directories:
    - ~/.m2

addons:
  apt:
    packages:
      - xsltproc
      - xmlstarlet

branches:
  only:
    - master

install:
  - ""

matrix:
  fast_finish: true
  include:
    # testing age of pr
    - env:
        - DESC="test Commits Since Latest Master"
        - CMD="./.ci/travis/travis.sh pr-age"
        - SKIP_CI_BY_FILES="false"

script:
  - SKIP_FILES1=".github|codeship-*|buddy.yml|appveyor.yml|circleci"
  - SKIP_FILES2="|fast-forward-merge.sh|LICENSE|LICENSE.apache20|README.md|release.sh|RIGHTS.antlr"
  - SKIP_FILES3="|shippable.yml|shippable.sh|wercker.yml|wercker.sh|intellij-idea-inspections.xml"
  - SKIP_FILES4="|Jenkinsfile"
  - SKIP_FILES=$SKIP_FILES1$SKIP_FILES2$SKIP_FILES3$SKIP_FILES4
  - SKIP_CI_BY_COMMIT="false"
  - |
    if [[ $SKIP_CI_BY_FILES != 'false' ]]; then
         if [[ $(git diff --name-only HEAD `git merge-base origin/master HEAD` \
                    | grep -vE "$SKIP_FILES" | cat | wc -c | sed 's/^ *//' ) > 0 ]]; then
              SKIP_CI_BY_FILES="false"
         else
              SKIP_CI_BY_FILES="true"
         fi
    fi
  - |
    export SKIP_CI_BY_COMMIT="false"
    if [ $(git log -1 | grep -E "\[maven-release-plugin\] prepare release" | cat | wc -l) -lt 1 ];
         then
           SKIP_CI_BY_COMMIT="false"
         else
           SKIP_CI_BY_COMMIT="true"
    fi
  - echo "SKIP_CI_BY_FILES="$SKIP_CI_BY_FILES
  - echo "SKIP_CI_BY_COMMIT="$SKIP_CI_BY_COMMIT
  - |
    set -e
    if [[ $SKIP_CI_BY_FILES == 'false' && $SKIP_CI_BY_COMMIT == 'false' ]]; then
         if [[ $USE_MAVEN_REPO == 'true' && ! -d "~/.m2" ]]; then
           echo "Maven local repo cache is not found, initializing it ..."
           mvn -B install -Pno-validations;
         fi
         eval $CMD;
         echo "eval of CMD is completed";
    else
         echo "CI is skipped";
    fi

after_success:
  - |
    set -e
    if [[ -n $CMD_AFTER_SUCCESS
          && $SKIP_CI_BY_FILES == 'false'
       ]];
    then
        eval $CMD_AFTER_SUCCESS;
        echo "CMD_AFTER_SUCCESS is finished";
    fi
  - |
    set -e
    SKIP_DEPLOY=false
    if [ $(git log -1 | grep -E "\[maven-release-plugin\] prepare release" | cat | wc -l) -lt 1 ];
      then
        SKIP_DEPLOY=false;
      else
        SKIP_DEPLOY=true;
    fi;
    if [[ $TRAVIS_REPO_SLUG == 'checkstyle/checkstyle'
            && $TRAVIS_BRANCH == 'master'
            && $TRAVIS_PULL_REQUEST == 'false'
            && $DEPLOY == 'true'
            && $SKIP_CI_BY_FILES == 'false'
            && $SKIP_DEPLOY == 'false'
       ]];
    then
        mvn -e -s config/deploy-settings.xml -Pno-validations deploy;
        echo "deploy to maven snapshot repository is finished";
    fi
